#region Copyright Syncfusion Inc. 2001-2022.
// Copyright Syncfusion Inc. 2001-2022. All rights reserved.
// Use of this code is subject to the terms of our license.
// A copy of the current license can be obtained at any time by e-mailing
// licensing@syncfusion.com. Any infringement will be prosecuted under
// applicable laws. 
#endregion
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCSampleBrowser.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ScheduleData")]
	public partial class ScheduleDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTemplate(Template instance);
    partial void UpdateTemplate(Template instance);
    partial void DeleteTemplate(Template instance);
    partial void InsertDefaultSchedule(DefaultSchedule instance);
    partial void UpdateDefaultSchedule(DefaultSchedule instance);
    partial void DeleteDefaultSchedule(DefaultSchedule instance);
    partial void InsertStartEndHour(StartEndHour instance);
    partial void UpdateStartEndHour(StartEndHour instance);
    partial void DeleteStartEndHour(StartEndHour instance);
    partial void InsertTimeMode(TimeMode instance);
    partial void UpdateTimeMode(TimeMode instance);
    partial void DeleteTimeMode(TimeMode instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertKeyboardInteraction(KeyboardInteraction instance);
    partial void UpdateKeyboardInteraction(KeyboardInteraction instance);
    partial void DeleteKeyboardInteraction(KeyboardInteraction instance);
    partial void InsertLocalization(Localization instance);
    partial void UpdateLocalization(Localization instance);
    partial void DeleteLocalization(Localization instance);
    partial void InsertRTL(RTL instance);
    partial void UpdateRTL(RTL instance);
    partial void DeleteRTL(RTL instance);
    partial void InsertViewcustomization(Viewcustomization instance);
    partial void UpdateViewcustomization(Viewcustomization instance);
    partial void DeleteViewcustomization(Viewcustomization instance);
    partial void InsertMultipleResource(MultipleResource instance);
    partial void UpdateMultipleResource(MultipleResource instance);
    partial void DeleteMultipleResource(MultipleResource instance);
    partial void InsertAPI(API instance);
    partial void UpdateAPI(API instance);
    partial void DeleteAPI(API instance);
    #endregion
		
		public ScheduleDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ScheduleDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Template> Templates
		{
			get
			{
				return this.GetTable<Template>();
			}
		}
		
		public System.Data.Linq.Table<DefaultSchedule> DefaultSchedules
		{
			get
			{
				return this.GetTable<DefaultSchedule>();
			}
		}
		
		public System.Data.Linq.Table<StartEndHour> StartEndHours
		{
			get
			{
				return this.GetTable<StartEndHour>();
			}
		}
		
		public System.Data.Linq.Table<TimeMode> TimeModes
		{
			get
			{
				return this.GetTable<TimeMode>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<KeyboardInteraction> KeyboardInteractions
		{
			get
			{
				return this.GetTable<KeyboardInteraction>();
			}
		}
		
		public System.Data.Linq.Table<Localization> Localizations
		{
			get
			{
				return this.GetTable<Localization>();
			}
		}
		
		public System.Data.Linq.Table<RTL> RTLs
		{
			get
			{
				return this.GetTable<RTL>();
			}
		}
		
		public System.Data.Linq.Table<Viewcustomization> Viewcustomizations
		{
			get
			{
				return this.GetTable<Viewcustomization>();
			}
		}
		
		public System.Data.Linq.Table<MultipleResource> MultipleResources
		{
			get
			{
				return this.GetTable<MultipleResource>();
			}
		}
		
		public System.Data.Linq.Table<API> APIs
		{
			get
			{
				return this.GetTable<API>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Template")]
	public partial class Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public Template()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultSchedule")]
	public partial class DefaultSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
		private string _StartTimeZone;
		
		private string _EndTimeZone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    partial void OnStartTimeZoneChanging(string value);
    partial void OnStartTimeZoneChanged();
    partial void OnEndTimeZoneChanging(string value);
    partial void OnEndTimeZoneChanged();
    #endregion
		
		public DefaultSchedule()
		{
			OnCreated();
		}

        public DefaultSchedule(int _id, string _subject, string _location, string _startTime, string _endTime, string _description, string _owner, string _priority, bool _recurrence, string _recurrenceType, string _recurrenceTypeCount, string _remainderCategorize, string _customStyle, bool _allDay, string _recurrenceStartDate, string _recurrenceEndDate, string _recurrenceRule)
        {
            this.Id = _id;
            this.Subject = _subject;
            this.Location = _location;
            this.StartTime = Convert.ToDateTime(_startTime);
            this.EndTime = Convert.ToDateTime(_endTime);
            this.Description = _description;
            if (_owner != null)
                this.Owner = Int32.Parse(_owner);
            else
                this.Owner = null;

            this.Priority = null;
            this.Recurrence = Convert.ToByte(_recurrence);
            this.RecurrenceType = _recurrenceType;
            this.RecurrenceTypeCount = null;
            this.Categorize = _remainderCategorize;
            this.CustomStyle = null;
            this.AllDay = _allDay;
            this.RecurrenceStartDate = null;
            this.RecurrenceEndDate = null;
            this.RecurrenceRule = _recurrenceRule;
        }

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeZone", CanBeNull=false)]
		public string StartTimeZone
		{
			get
			{
				return this._StartTimeZone;
			}
			set
			{
				if ((this._StartTimeZone != value))
				{
					this.OnStartTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._StartTimeZone = value;
					this.SendPropertyChanged("StartTimeZone");
					this.OnStartTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTimeZone", CanBeNull=false)]
		public string EndTimeZone
		{
			get
			{
				return this._EndTimeZone;
			}
			set
			{
				if ((this._EndTimeZone != value))
				{
					this.OnEndTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._EndTimeZone = value;
					this.SendPropertyChanged("EndTimeZone");
					this.OnEndTimeZoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StartEndHour")]
	public partial class StartEndHour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public StartEndHour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeMode")]
	public partial class TimeMode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public TimeMode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Events")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeyboardInteraction")]
	public partial class KeyboardInteraction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public KeyboardInteraction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Localization")]
	public partial class Localization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public Localization()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RTL")]
	public partial class RTL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public RTL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Viewcustomization")]
	public partial class Viewcustomization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public Viewcustomization()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MultipleResource")]
	public partial class MultipleResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceRule;
		
		private string _CategoryId;
		
		private string _RoomId;
		
		private string _OwnerId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    partial void OnCategoryIdChanging(string value);
    partial void OnCategoryIdChanged();
    partial void OnRoomIdChanging(string value);
    partial void OnRoomIdChanged();
    partial void OnOwnerIdChanging(string value);
    partial void OnOwnerIdChanged();
    #endregion
		
		public MultipleResource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(50)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="NVarChar(50)")]
		public string CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", DbType="NVarChar(50)")]
		public string RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="NVarChar(50)")]
		public string OwnerId
		{
			get
			{
				return this._OwnerId;
			}
			set
			{
				if ((this._OwnerId != value))
				{
					this.OnOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerId = value;
					this.SendPropertyChanged("OwnerId");
					this.OnOwnerIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.API")]
	public partial class API : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Subject;
		
		private string _Location;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private string _Priority;
		
		private System.Nullable<byte> _Recurrence;
		
		private string _RecurrenceType;
		
		private System.Nullable<int> _RecurrenceTypeCount;
		
		private System.Nullable<int> _Reminder;
		
		private string _Categorize;
		
		private string _CustomStyle;
		
		private System.Nullable<bool> _AllDay;
		
		private System.Nullable<System.DateTime> _RecurrenceStartDate;
		
		private System.Nullable<System.DateTime> _RecurrenceEndDate;
		
		private string _RecurrenceRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnRecurrenceChanging(System.Nullable<byte> value);
    partial void OnRecurrenceChanged();
    partial void OnRecurrenceTypeChanging(string value);
    partial void OnRecurrenceTypeChanged();
    partial void OnRecurrenceTypeCountChanging(System.Nullable<int> value);
    partial void OnRecurrenceTypeCountChanged();
    partial void OnReminderChanging(System.Nullable<int> value);
    partial void OnReminderChanged();
    partial void OnCategorizeChanging(string value);
    partial void OnCategorizeChanged();
    partial void OnCustomStyleChanging(string value);
    partial void OnCustomStyleChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnRecurrenceStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceStartDateChanged();
    partial void OnRecurrenceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecurrenceEndDateChanged();
    partial void OnRecurrenceRuleChanging(string value);
    partial void OnRecurrenceRuleChanged();
    #endregion
		
		public API()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="NVarChar(50)")]
		public string Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recurrence", DbType="TinyInt")]
		public System.Nullable<byte> Recurrence
		{
			get
			{
				return this._Recurrence;
			}
			set
			{
				if ((this._Recurrence != value))
				{
					this.OnRecurrenceChanging(value);
					this.SendPropertyChanging();
					this._Recurrence = value;
					this.SendPropertyChanged("Recurrence");
					this.OnRecurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceType", DbType="NVarChar(10)")]
		public string RecurrenceType
		{
			get
			{
				return this._RecurrenceType;
			}
			set
			{
				if ((this._RecurrenceType != value))
				{
					this.OnRecurrenceTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceType = value;
					this.SendPropertyChanged("RecurrenceType");
					this.OnRecurrenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceTypeCount", DbType="Int")]
		public System.Nullable<int> RecurrenceTypeCount
		{
			get
			{
				return this._RecurrenceTypeCount;
			}
			set
			{
				if ((this._RecurrenceTypeCount != value))
				{
					this.OnRecurrenceTypeCountChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceTypeCount = value;
					this.SendPropertyChanged("RecurrenceTypeCount");
					this.OnRecurrenceTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reminder", DbType="Int")]
		public System.Nullable<int> Reminder
		{
			get
			{
				return this._Reminder;
			}
			set
			{
				if ((this._Reminder != value))
				{
					this.OnReminderChanging(value);
					this.SendPropertyChanging();
					this._Reminder = value;
					this.SendPropertyChanged("Reminder");
					this.OnReminderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorize", DbType="NVarChar(100)")]
		public string Categorize
		{
			get
			{
				return this._Categorize;
			}
			set
			{
				if ((this._Categorize != value))
				{
					this.OnCategorizeChanging(value);
					this.SendPropertyChanging();
					this._Categorize = value;
					this.SendPropertyChanged("Categorize");
					this.OnCategorizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomStyle", DbType="NVarChar(1000)")]
		public string CustomStyle
		{
			get
			{
				return this._CustomStyle;
			}
			set
			{
				if ((this._CustomStyle != value))
				{
					this.OnCustomStyleChanging(value);
					this.SendPropertyChanging();
					this._CustomStyle = value;
					this.SendPropertyChanged("CustomStyle");
					this.OnCustomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceStartDate
		{
			get
			{
				return this._RecurrenceStartDate;
			}
			set
			{
				if ((this._RecurrenceStartDate != value))
				{
					this.OnRecurrenceStartDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceStartDate = value;
					this.SendPropertyChanged("RecurrenceStartDate");
					this.OnRecurrenceStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecurrenceEndDate
		{
			get
			{
				return this._RecurrenceEndDate;
			}
			set
			{
				if ((this._RecurrenceEndDate != value))
				{
					this.OnRecurrenceEndDateChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceEndDate = value;
					this.SendPropertyChanged("RecurrenceEndDate");
					this.OnRecurrenceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceRule", DbType="NVarChar(2000)")]
		public string RecurrenceRule
		{
			get
			{
				return this._RecurrenceRule;
			}
			set
			{
				if ((this._RecurrenceRule != value))
				{
					this.OnRecurrenceRuleChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceRule = value;
					this.SendPropertyChanged("RecurrenceRule");
					this.OnRecurrenceRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
