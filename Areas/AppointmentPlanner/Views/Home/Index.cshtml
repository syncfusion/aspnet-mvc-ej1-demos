@{
    ViewBag.Title = "Essential Studio for ASP.NET MVC : Appointment Planner";
    Layout = "~/Areas/AppointmentPlanner/Views/Shared/_Layout.cshtml";
}

@using Syncfusion.JavaScript
@using Syncfusion.JavaScript.DataVisualization
@using Syncfusion.MVC.EJ
@using System.Collections
@{
    List<string> searchType = new List<string>() { "ID", "Name", "Description", "Category", "Date" };
}
<div id="wcontent">
    <img src="~/Content/ejthemes/default-theme/images/waitingpopup.gif" alt="waiting_logo" style="margin-top: 14px; margin-left: 14px;" />
</div>

<div id="container" class="showcasecontainer">
    <script>
        $(".showcasecontainer").ejWaitingPopup({
            showOnInit: true,
            template: $("#wcontent")
        });
    </script>
    <div class="headercontainer">
        <h1 class="headercontainertext">DOCTOR'S APPOINTMENT SCHEDULER</h1>
    </div>
    <div class="contentcontainer">
        <div class="leftcol">
            <div class="category">
                <div class="categoryheader">
                    <div class="headertext">CATEGORY</div>
                </div>
                <div class="categorycontent">
                    <div class="listbox">
                        <ul id="categorylist"></ul>
                    </div>
                </div>
            </div>
            <div class="doctor">
                <div class="doctorheader">
                    <div class="headertext">DOCTORS</div>
                </div>
                <div class="doctorcontent">
                    <div class="doctorlist">
                        <input type="text" id="doctorlist" />
                    </div>
                </div>
                <div class="doctorsdept">
                    <div class="doctorslist">
                        <ul id="doctorsdeptlist"></ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="middlecol">
            <div id='lefticon'><span class='icon-right'></span></div>
            <div id='righticon'><span class='icon-left'></span></div>
            <div class="menubar">
                <div class="display" role="navigation">
                    <div id="doctor" class="displayleft">
                        <div class="menuheadertext">DOCTORS AVAILABILITY / APPOINTMENTS</div>
                    </div>
                </div>
                <div class="displayright" role="search">
                    @Html.EJ().ToggleButton("searchbtn").Size(ButtonSize.Normal).Width("30px").Height("30px").ShowRoundedCorner(false).ContentType(ContentType.ImageOnly).DefaultPrefixIcon("icon-search").ActivePrefixIcon("icon-close datesearch").ClientSideEvents(eve => eve.Click("onSearchClick"))
                    <label for="searchbtn">Toggle</label>
                    <div type="text" id="searchdata">
                        <div id="searchpanel" style="padding: 0px 5px 0px 5px;">
                            <div id="searchtype" class="esearch" style="padding-right: 5px;">
                                @Html.EJ().DropDownList("searchlist").Datasource(searchType).SelectedIndex(0).Width("100px").ClientSideEvents(eve => eve.PopupHide("onSearchtypeHide"))
                            </div>
                            <div id="search" class="esearch">
                                <input type="text" id="txtSearch" class="searchbox" onkeyup="searchKeyUp()" />
                            </div>
                        </div>
                        <div id="datesearchpanel">
                            <div class="searchdatepicker esearch">
                                @Html.EJ().DatePicker("startdatepicker").Width("120px").WatermarkText("From Date").Value(new DateTime(2016, 4, 1)).ClientSideEvents(eve => eve.Select("onSearchDateChange"))
                            </div>
                            <div class="searchdatepicker esearch">
                                @Html.EJ().DatePicker("enddatepicker").Width("120px").WatermarkText("To Date").Value(new DateTime(2016, 4, 1)).ClientSideEvents(eve => eve.Select("onSearchDateChange"))
                            </div>
                            <div class="searchdatepicker esearch">
                                @Html.EJ().ToggleButton("datesearch").Size(ButtonSize.Normal).Width("30px").Height("30px").ContentType(ContentType.ImageOnly).DefaultPrefixIcon("icon-search").ActivePrefixIcon("icon-close datesearch").ClientSideEvents(eve => eve.Click("onDateSearch"))
                                <label for="datesearch">Toggle</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="appointmentarea">
                <div class="hospitalschedule">
                    @(Html.EJ().Schedule("DoctorSchedule").Width("100%").Height("100%")
                    .CellWidth("50px")
                    .Orientation(Orientation.Horizontal)
                    .CurrentView(CurrentView.Day)
                    .Views(new List<string> { "day", "week", "month" })
                    .ShowAppointmentNavigator(false)
                    .ShowQuickWindow(false)
                    .StartHour(7)
                    .EndHour(23)
                    .TimeZone("UTC -08:00")
                    .CurrentDate(new DateTime(2016, 4, 1))
                    .ResourceHeaderTemplateId("#resTemplate")
                    .AppointmentTemplateId("#doctortemplate")
                    .TooltipSettings(tip => tip.Enable(true).TemplateId("#tooltipTemp"))
                    .Group(gr => gr.Resources(new List<string> { "Rooms", "Owners" }))
                    .Resources(res =>
                    {
                        res.Field("RoomId").Title("Room").Name("Rooms").AllowMultiple(false)
                           .ResourceSettings(flds => flds.Datasource(ViewBag.departmentName).Text("Text").Id("Id").GroupId("GroupId").Color("Color")).Add();
                        res.Field("OwnerId").Title("Owner").Name("Owners").AllowMultiple(true)
                            .ResourceSettings(flds => flds.Datasource(ViewBag.doctorName).Text("text").Id("Id").GroupId("GroupId").Color("Color")).Add();
                    })
                    .AppointmentSettings(fields => fields.Datasource(ViewBag.hospitaldata)
                        .Id("Id")
                        .Subject("Subject")
                        .StartTime("StartTime")
                        .EndTime("EndTime")
                        .Description("Description")
                        .AllDay("AllDay")
                        .Recurrence("Recurrence")
                        .RecurrenceRule("RecurrenceRule")
                        .ResourceFields("RoomId,OwnerId"))
                    .ScheduleClientSideEvents(eve => eve.AppointmentWindowOpen("onAppointmentWindowOpen").Navigation("OnNavigation").QueryCellInfo("onQueryCellInfo").ActionComplete("onCustomization")))
                </div>
            </div>
        </div>
        <div class="rightcol">
            <div class="calendar">
                <div class="calendarheader">
                    <div class="headertext" style="padding-top: 2px;">CALENDAR</div>
                </div>
                <div class="calendarcontent">
                    @Html.EJ().DatePicker("datepicker").Width("100%").Height("100%").TagName("div").ShowFooter(false).DisplayInline(true).Value(new DateTime(2016, 4, 1)).ClientSideEvents(eve => eve.Select("onSelected"))
                </div>
            </div>
            <div class="waitinglist">
                <div class="waitinglistheader">
                    <div class="headertext">WAITING LIST</div>
                    <span class="headtitle">Drag and drop the below items</span>
                </div>
                <div class="waitinglistcontent">
                    <div class="waitingapplist">
                        <ul id="upcomming"></ul>
                    </div>
                </div>
                <div class="appointmentbtn">
                    <div class="groupbtn">
                        <div class="btnsht">
                            @Html.EJ().Button("new").Size(ButtonSize.Normal).Width("100%").ClientSideEvents(eve => eve.Click("onButtonClick")).CssClass("add").Text("New")
                        </div>
                        <div class="btnsht">
                            @Html.EJ().Button("delete").Size(ButtonSize.Normal).Width("100%").ClientSideEvents(eve => eve.Click("onButtonClick")).CssClass("delete").Text("Delete")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="footer">
                <div class="bottom-links">
                    <div class="left">
                        <div class="sync-text">
                            Copyright © 2001-2022 Syncfusion Inc.
                        </div>
                    </div>
                    <div class="right">
                        <a href="https://www.syncfusion.com">
                            <div class="syncfusion-image"></div>
                        </a>
                    </div>
                </div>
            </div>
</div>

<!--Appointment Window Dialog-->
@Html.EJ().Dialog("customWindow").Width("auto").Height("auto").ShowOnInit(false).EnableModal(true).Title("Patient Appointment Details").EnableResize(false).AllowKeyboardNavigation(false).ClientSideEvents(eve => eve.Close("clearFields")).ContentTemplate(
@<div>
    <div id="appWindow" class="e-windowmargin">
        <form id="custom">
            <div class="container-fluid">
                <div class="row epadding" style="display: none;">
                    <div class="col-md-3">Id</div>
                    <div class="col-md-9">
                        <input id="customId" type="text" name="Id" />
                    </div>
                </div>
                <div class="row epadding">
                    <div class="col-md-2">Patient Name *</div>
                    <div class="col-md-7">
                        <input id="subject" type="text" value="" name="Subject" onfocus="temp()" style="width: 100%" />
                    </div>
                    <div class="col-md-2">
                        @Html.EJ().Button("patientadd").Text("New Patient").Size(ButtonSize.Normal).Width("100px").ClientSideEvents(eve => eve.Click("onPatientNew")).Type(ButtonType.Button)
                    </div>
                </div>
                <div class="row epadding">
                    <div class="col-md-2">Reason</div>
                    <div class="col-md-10">
                        <textarea id="customdescription" name="Description" rows="3" cols="50" style="width: 100%; resize: vertical"></textarea>
                    </div>
                </div>
                <div class="row epadding">
                    <div class="col-md-2">From</div>
                    <div class="col-md-3">
                        @Html.EJ().DateTimePicker("StartTime").Width("150px").DateTimePickerDrillDown(a => a.Enabled(true).Interval(30).ShowMeridian(false))
                    </div>
                    <div class="col-md-2 col-md-offset-1">To</div>
                    <div class="col-md-3">
                        @Html.EJ().DateTimePicker("EndTime").Width("150px").DateTimePickerDrillDown(a => a.Enabled(true).Interval(30).ShowMeridian(false))
                    </div>
                </div>
                <div class="row epadding">
                    <div class="col-md-2">Department</div>
                    <div class="col-md-3">
                        <input type="text" id="Department" />
                    </div>
                    <div class="col-md-2 col-md-offset-1">Consultant</div>
                    <div class="col-md-3">
                        <input type="text" id="deptdoctors" />
                    </div>
                </div>
                <div class="row epadding">
                    <div class="col-md-2">Service</div>
                    <div class="col-md-3">
                        @Html.EJ().DropDownList("Category").Datasource((IEnumerable)ViewBag.categorylist).Width("150px").SelectedIndex(0).DropDownListFields(f => f.Text("Text"))
                    </div>
                    <div class="col-md-2 col-md-offset-1">Repeat</div>
                    <div class="col-md-2">
                        @Html.EJ().CheckBox("recurrence").Name("Recurrence").Checked(false).Enabled(true).ClientSideEvents(eve => eve.Change("recurCheck"))
                    </div>
                    <div class="col-md-1 e-recuredit" id="editApp" style="display: none;"><a class="recuredit" href="#" style="float: left; padding-left: 10px;">Edit</a></div>
                </div>
            </div>
        </form>
        <br />
        <div>
            <button type="submit" id="appcancel">Cancel</button>
            <button type="submit" id="appsubmit">Submit</button>
        </div>
    </div>
    <div id="recWindow" style="display: none">
        @Html.EJ().RecurrenceEditor("recurrenceEditor").SelectedRecurrenceType(0).Frequencies(new List<string> { "daily", "weekly", "monthly", "yearly", "everyweekday" })
        <br />
        <div>
            <button type="submit" id="reccancel">Cancel</button>
            <button type="submit" id="recsubmit">Submit</button>
        </div>
    </div>
</div>)
<!--Patient Details Dialog-->
@Html.EJ().Dialog("patientWindow").Width("auto").Height("auto").ShowOnInit(false).EnableModal(true).Title("Patient Details").EnableResize(false).AllowKeyboardNavigation(false).ClientSideEvents(eve => eve.Close("clearFields")).ContentTemplate(
@<div>
    <form id="patient">
        <table width="100%" cellpadding="5">
            <tbody>
                <tr>
                    <td style="text-align: right">ID</td>
                    <td colspan="2">
                        <input id="patientid" class="e-inputtext patientdetails" type="text" name="Id" readonly /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Name</td>
                    <td colspan="2">
                        <input id="patientname" class="e-inputtext patientdetails" type="text" name="Name" onfocus="temp()" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Date of Birth</td>
                    <td colspan="2">
                        @Html.EJ().DatePicker("patientdob").Width("170px").CssClass("e-inputtext patientdetails").ClientSideEvents(eve => eve.FocusIn("temp")) </td>
                </tr>
                <tr>
                    <td style="text-align: right">Mobile</td>
                    <td colspan="2">
                        <input id="patientmobile" class="e-inputtext patientdetails" type="number" name="Mobile" onfocus="temp()" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Blood Group</td>
                    <td colspan="2">
                        <input id="patientbloodgroup" class="e-inputtext patientdetails" type="text" name="BloodGroup" /></td>
                </tr>
                <tr>
                    <td style="text-align: right">Address</td>
                    <td colspan="2">
                        <textarea id="patientaddress" class="e-inputtext patientdetails" type="text" width="100%" name="Address" onfocus="temp()"></textarea></td>
                </tr>
            </tbody>
        </table>
    </form>
    <div style="padding-top: 10px;">
        <button type="submit" id="patientcancel" class="pcancel">Cancel</button>
        <button type="submit" id="patientsave" class="padd">Submit</button>
    </div>
</div>)


<!--Delete Appointment Dialog-->
@Html.EJ().Dialog("deleteWindow").ShowOnInit(false).Width("auto").Height("auto").EnableModal(true).EnableResize(false).AllowKeyboardNavigation(false).Title("Delete Appointment").ClientSideEvents(eve => eve.Close("clearFields")).ContentTemplate(
@<div>
    <table width="100%" cellpadding="5">
        <tbody>
            <tr style="padding: 10px;">
                <td style="padding: 10px;">Appointment Id:</td>
                <td colspan="2">
                    <input id="deleteId" type="text" name="Id" /></td>
            </tr>
        </tbody>
    </table>
    <div style="height: 35px;">
        <button type="submit" onclick="cancel()" id="btncancel">Cancel</button>
        <button type="submit" onclick="done()" id="btnsubmit">Submit</button>
    </div>
</div>)
<!--Delete Alert Dialog-->
@Html.EJ().Dialog("alertWindow").Width("auto").Height("auto").ShowOnInit(false).EnableModal(true).Title("Delete Confirmation").EnableResize(false).AllowKeyboardNavigation(false).ContentTemplate(
@<div>
    <span>Are you sure want to delete this appointment?</span>
    <div style="height: 35px; padding-top: 12px;">
        <button type="submit" class="alertcancel" id="alertcancel">Cancel</button>
        <button type="submit" class="alertdone" id="alertok">Ok</button>
    </div>
</div>)
<!--Appointment Token Dialog-->
@Html.EJ().Dialog("tokenWindow").Width("auto").Height("auto").ShowOnInit(false).EnableModal(true).Title("Appointment").EnableResize(false).AllowKeyboardNavigation(false).ClientSideEvents(eve => eve.Close("clearFields")).ContentTemplate(
@<div>
    <form id="token">
        <table width="100%" cellpadding="5">
            <tbody>
                <tr>
                    <td id="apptoken" class="textlabel">Your Appointment Id:
                        <label id="lbltext"></label>
                    </td>
                    <td id="appstatus" class="textlabel" style="display: none;">Appointment Booked</td>
                </tr>
            </tbody>
        </table>
    </form>
    <div style="padding-top: 10px;">
        <button type="submit" onclick="cancel()" id="btncancel">Ok</button>
    </div>
</div>)
<!-- Waitinglist Tooltip -->
<div id='waitinglisttooltip' style="display: none;">
    <div style='padding: 2px;'><span class='temphead'>Doctor Name: </span><span id="docname" class='temp'></span></div>
    <div style='padding: 2px;'><span class='temphead'>StartTime: </span><span id="docstarttime" class='temp'></span></div>
    <div style='padding: 2px;'><span class='temphead'>EndTime: </span><span id="docendtime" class='temp'></span></div>
</div>

@section ScriptSection{
    <script type="text/javascript">
        window.categorylist = ej.parseJSON('@Html.Raw(Json.Encode(ViewBag.categorylist))');
        window.doctorName = ej.parseJSON('@Html.Raw(Json.Encode(ViewBag.doctorName))');
        window.departmentName = ej.parseJSON('@Html.Raw(Json.Encode(ViewBag.departmentName))');
        window.hospitaldata = ej.parseJSON('@Html.Raw(Json.Encode(ViewBag.hospitaldata))');
        window.waitinglist = ej.parseJSON('@Html.Raw(Json.Encode(ViewBag.waitinglist))');
        window.patientlist = ej.parseJSON('@Html.Raw(Json.Encode(ViewBag.patientlist))');
        ej.Schedule.Locale["en-US"] = { Resources: "DOCTORS" };
    </script>
    <!-- Resource Header Template -->
    <script id="resTemplate" type="text/x-jsrender">
        <div style="height:100%">
            {{if classname == 'e-childnode' && Text != "GENERAL" && Text != "DENTAL"}}
            {{:~resimages(Id)}}<div style="overflow:hidden;text-overflow:ellipsis;">{{:Name}}</div>
            {{else}}
            <div style="overflow:hidden;text-overflow:ellipsis;">{{:Name}}</div>
            {{/if}}
        </div>
    </script>
    <!-- Appointment Template -->
    <script id="appointtemplate" type="text/x-jsrender">
        <div style="height:100%;background:{{:~appbgm(Category)}}">
            <div style="width:20px;height:100%;float:left;text-align:center;font-weight:bolder;background-color:{{:~appcolor(Category)}};line-height:{{:~lineheight(StartTime, EndTime)}}">{{:AppTaskId}}</div>
            <div style='float:left; width:50px;'>{{:~appoint(OwnerId)}}</div>
            <div style="float:left; margin-left:5px;">
                <div id="appsubject">Patient Name: {{:Subject}}</div>
                <div id="apptime">{{:~apptime(StartTime, EndTime)}}</div>
            </div>
        </div>
    </script>
    <script id="doctortemplate" type="text/x-jsrender">
        <div style="width:100%;height:100%;background:{{:~appbgm(Category)}}">
            <div style="width:30px;height:100%;float:left;text-align:center;font-weight:bolder;background-color:{{:~appcolor(Category)}};line-height:30px">{{:AppTaskId}}</div>
            <div style="margin-left:5px;float:left;width:65%;height:100%;">
                <div id="appsubject">{{:Subject}} - {{:~doctor(Category)}}</div>
                <div id="apptime">{{:~apptime(StartTime, EndTime)}}</div>
            </div>
			<div class='icon-{{:Category}}' style='float:right;width:15%;height:100%;padding-top:7px;'></div>
        </div>
    </script>
    <!-- Appointment Tooltip -->
    <script id="tooltipTemp" type="text/x-jsrender">
		<div id="tooltip" style="width:250px;">
           <div style='float:left;width:80%;height:100%;padding-left:10px;padding-bottom:5px;'>
				<div style="padding:2px;"><span class="temphead">Reason: </span><span class="temp">{{:Description}}</span></div>
				<div style="padding:2px;"><span class="temphead">From: </span><span class="temp">{{:StartTime.toLocaleString()}}</span></div>
				<div style="padding:2px;"><span class="temphead">To: </span><span class="temp">{{:EndTime.toLocaleString()}}</span></div>
		   </div>
		   <div style='float:left;width:20%;height:100%;padding-top:5px;'>{{:~format(OwnerId,"image")}}</div>
		</div>
    </script>
    <script src="@Url.Content("~/Scripts/appointmentplanner/appointmentplanner.js")" type="text/javascript"></script>
}