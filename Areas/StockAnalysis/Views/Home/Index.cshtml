@using Syncfusion.JavaScript.DataVisualization
@using Syncfusion.MVC.EJ

@{
    Layout = "~/Areas/StockAnalysis/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Essential Studio for ASP.NET MVC : Stock Analysis";
}


<div class="stockanalysis">
        <div class="samplecontent">
		
            <div class="sampletitle container">
                <div class="sampleimg">
                    <div class="leftHeader">
                        <img src="@Url.Content("~/Images/StockAnalysis/stock_logo.png")" class="stockImg" alt="Stock"/>
                        <label class="imgLabel">STOCK ANALYSIS</label>
						<div  class="tile">
					<img src="@Url.Content("~/Images/StockAnalysis/tile.png")" class="stockImg" alt="Tile"/>
					</div>
                    </div>
					
                    <div class="ownerdetails">
                        <table>
                            <tr>
                                <td>
                                    <img src="@Url.Content("~/Images/StockAnalysis/person.png")" alt="Person"/>
                                </td>
                                <td class="ownname">Andrew Fuller<br />
                                    <span>My Watch List</span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
			<div class="container">
            <div class="chartdetail">
                <div class="stockstatus">
                    <div class="row">
                     <div class="stockdetails">
                           
                                
                                    <div id="GOOG" class="ptiles col-xs-2">
									<div>
                                        <table class="titletab" cellspacing="0.1em">
										   
                                            <tr>
                                                <td>
                                                    <span class="ptext">GOOG</span>
                                                </td>
                                                <td id="goog-wait"></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class="decrement">
                                                        70.39
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="down">
                                                        <div class="downarrow"></div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="high">
                                                    <div class="higharrow">
                                                        <span>High: 764.8</span>
                                                    </div>
                                                </td>
                                                <td class="low">
                                                    <div class="lowarrow">
                                                        <span>Low: 673.5</span>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
										</div>
                                    </div>
                                
                                
                                    <div id="MSFT" class="ptiles col-xs-2">
									<div>
                                        <table class="titletab" cellspacing="0.1em">
                                            <tr>
                                                <td>
                                                    <span class="ptext">MSFT</span>
                                                </td>
                                                <td id="msft-wait"></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class="increment">
                                                        1.82
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="up">
                                                        <div class="uparrow"></div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="high">
                                                    <div class="higharrow">
                                                        <span>High: 37.5</span>
                                                    </div>
                                                </td>

                                                <td class="low">
                                                    <div class="lowarrow">
                                                        <span>Low: 32.68</span>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
										</div>
                                    </div>
                                
                                
                                <div id="AAPL" class="ptiles col-xs-2">
								<div>
                                        <table class="titletab" cellspacing="0.1em">
                                            <tr>
                                                <td>
                                                    <span class="ptext">AAPL</span>
                                                </td>
                                                <td id="aapl-wait"></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class="increment">
                                                        7.61
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="up">
                                                        <div class="uparrow"></div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="high">
                                                    <div class="higharrow">
                                                        <span>High: 705.7</span>
                                                    </div>
                                                </td>
                                                <td class="low">
                                                    <div class="lowarrow">
                                                        <span>Low: 656.0</span>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
										</div>
                                    </div>
                               
                              
                                    <div id="NOK" class="ptiles col-xs-2" style="border-right-width: 0px;">
									<div>
                                        <table class="titletab" cellspacing="0.1em">
                                            <tr>
                                                <td>
                                                    <span class="ptext">NOK</span>
                                                </td>
                                                <td id="nok-wait"></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class="decrement">
                                                        10.35
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="down">
                                                        <div class="downarrow"></div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="high">
                                                    <div class="higharrow">
                                                        <span>High: 42.22
                                                        </span>
                                                    </div>
                                                </td>
                                                <td class="low">
                                                    <div class="lowarrow">
                                                        <span>Low: 36.6
                                                        </span>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
										</div>
                                    </div>
                        <div style="padding-top: 150px;">
                                  @(Html.EJ().Chart("hiloOpenClose")
          .PrimaryXAxis(pr => pr.MajorGridLines(mr => mr.Visible(false)).MajorTickLines(mt => mt.Visible(false)).LabelFormat("MMM-yy").ValueType(AxisValueType.Datetime).RangePadding(ChartRangePadding.None))
          .PrimaryYAxis(pr => pr.AxisLine(ax => ax.Visible(false)).MajorGridLines(mr => mr.Visible(true)).MajorTickLines(mr => mr.Visible(false))
                                .Range(ra => ra.Max(800).Min(0).Interval(200)).Font(fn => fn.Color("transparent")))
          .Series(sr => {
                            sr.Name("Bank").Type(SeriesType.HiloOpenClose).Border(br => br.Width(1)).Tooltip(tp => tp.Visible(true).Template("Tooltip")).Add();
          })
          .Background("transparent").IsResponsive(true).Load("chartload").Title(tl => tl.Text("GOOG").Font(fn => fn.Size("45px").Color("#b9cfe7").FontWeight(ChartFontWeight.Lighter)))
          .Size(sz => sz.Height("300")).Legend(lg => lg.Visible(false)).Margin(mr => mr.Right(20))
          )
                             
                        
                              @(Html.EJ().Chart("colChart")
          .PrimaryXAxis(pr => pr.IntervalType(ChartIntervalType.Years).LabelFormat("yyyy")
                                .ValueType(AxisValueType.Datetime).MajorGridLines(mr => mr.Visible(false)).MajorTickLines(mr => mr.Visible(false)))
          .PrimaryYAxis(pr => pr.Range(ra => ra.Min(100).Max(800).Interval(100)).AxisLine(ax => ax.Visible(false)).MajorTickLines(ma => ma.Visible(false)).RangePadding(ChartRangePadding.None).Font(fn => fn.Color("transparent")))
          .Title(tl => tl.Font(fn => fn.Color("transparent")))
          .Series(sr =>
              {
                  sr.Name("Gold").Type(SeriesType.Column).EnableAnimation(true).Fill("#ba4558").Add();
                  sr.Name("Silver").Type(SeriesType.Column).EnableAnimation(true).Fill("#1d9059").Add();
              })
          .Load("onchartload")
          .IsResponsive(true)
          .Background("transparent")
          .Size(sz => sz.Height("250"))
          .Legend(lg => lg.Visible(false))
          )   
                         </div>    
                
                <div class="chartbody">
                    
                        
                            
                           
                             
                    <div class="yearlabel">
                        <label id="5y" class="changeyear">5Y</label>
                        <label id="3y" class="changeyear">3Y</label>
                        <label id="2y" class="changeyear">2Y</label>
                        <label id="1y" class="changeyear">1Y</label>                                    
                    </div>
                    </div>
				</div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="footer">
        				<div class="bottom-links">
            				<div class="left">
                				<div class="sync-text">
                    				Copyright © 2001-2019 Syncfusion Inc.
                				</div>
            				</div>  
            				<div class="right">
                				<a href="https://www.syncfusion.com">
                    				<div class="syncfusion-image"></div>
                				</a>
            				</div>
        				</div>
    				</div>
			</div>
        </div>

    <div id="Tooltip" style="display: none;">
        <table bgcolor="transparent" cellspacing="0.1em">
            <tr>
                <td>Date:
                </td>
                <td class="vponits">#point.x#
                </td>
            </tr>
            <tr>
                <td>Open:
                </td>
                <td class="vponits">#point.open#
                </td>
            </tr>
            <tr>
                <td>High:
                </td>
                <td class="vponits">#point.high#
                </td>
            </tr>
            <tr>
                <td>Low:
                </td>
                <td class="vponits">#point.low#
                </td>
            </tr>
            <tr>
                <td>Close:
                </td>
                <td class="vponits">#point.close#
                </td>
            </tr>
        </table>
    </div>
<script type="text/javascript" lang="javascript">
    $(window).resize(function () {
        $(".tile").css("display", "none");
        var marginResize = getWidth();
        $(".stockstatus").find(".row").css("padding-left", marginResize);
    });
    $(window).ready(function () {
        $(".tile").css("display", "none");
        var marginReady = getWidth();
        $(".stockstatus").find(".row").css("padding-left", marginReady);
    });
    $(".tile").bind("click", function () {
        if ($(".stockstatus").css("display") == "inline")
            $(".stockstatus").css("display", "none");
        else
            $(".stockstatus").css("display", "inline");
    });

    function getWidth() {
        var ownerWindth = $(".sampletitle").width();
        if (ownerWindth < 700)
            $(".sampletitle").find(".ownerdetails").css("display", "none");
        else
            $(".sampletitle").find(".ownerdetails").css("display", "inline");
        var width = $(".stockstatus").width();
        if (width < 418) {
            $(".tile").css("display", "inline");
            $(".stockstatus").css("display", "none");
            $(".imgLabel").css("font-size", "20px");
        } else {
            $(".tile").css("display", "none");
            $(".stockstatus").css("display", "block");
            $(".imgLabel").css("font-size", "27px");
        }
        var eleWidth = 209;
        var value;
        var div = width % eleWidth;
        if (width > 0) {
            if (width > 825)
                return value = 0;
            else if (width % eleWidth < 200)
                return value = (width % eleWidth) / 2;
            else if (width % (eleWidth * 2) < 200)
                return value = (width % (eleWidth * 2)) / 2;
            else if (width % (eleWidth * 3) < 200)
                return value = (width % (eleWidth * 2)) / 2;
            else
                return value = 0;
        }
    }


    $(function () {
        $("#GOOG").click(function (e) {
            if (!$('#nok-wait').data("ejWaitingPopup").model.autoDisplay && !$('#aapl-wait').data("ejWaitingPopup").model.autoDisplay && !$('#msft-wait').data("ejWaitingPopup").model.autoDisplay) {
                $("#goog-wait").ejWaitingPopup();
                $('#goog-wait').data("ejWaitingPopup").show();
                $("#hiloOpenClose").data("ejWaitingPopup").show();
                getWebAPIData(this.id);
                $("#hiloOpenClose").ejChart("option", { "title": { text: this.id } });
                var data3 = getData();
                $("#colChart").ejChart("option", { "datasource": setdatasource(data3), "primaryXAxis": setRangeAxis(5) });
            }
        });
        $("#NOK").click(function (e) {
            if (!$('#goog-wait').data("ejWaitingPopup").model.autoDisplay && !$('#aapl-wait').data("ejWaitingPopup").model.autoDisplay && !$('#msft-wait').data("ejWaitingPopup").model.autoDisplay) {
                $("#nok-wait").ejWaitingPopup();
                $('#nok-wait').data("ejWaitingPopup").show();
                $("#hiloOpenClose").data("ejWaitingPopup").show();
                getWebAPIData(this.id);
                $("#hiloOpenClose").ejChart("option", { "title": { text: this.id } });
                var data3 = getData();
                $("#colChart").ejChart("option", { "datasource": setdatasource(data3), "primaryXAxis": setRangeAxis(5) });
            }
        });
        $("#AAPL").click(function (e) {
            if (!$('#goog-wait').data("ejWaitingPopup").model.autoDisplay && !$('#nok-wait').data("ejWaitingPopup").model.autoDisplay && !$('#msft-wait').data("ejWaitingPopup").model.autoDisplay) {
                $("#aapl-wait").ejWaitingPopup();
                $('#aapl-wait').data("ejWaitingPopup").show();
                $("#hiloOpenClose").data("ejWaitingPopup").show();
                getWebAPIData(this.id);
                $("#hiloOpenClose").ejChart("option", { "title": { text: this.id } });
                var data3 = getData();
                $("#colChart").ejChart("option", { "datasource": setdatasource(data3), "primaryXAxis": setRangeAxis(5) });
            }
        });
        $("#MSFT").click(function (e) {
            if (!$('#goog-wait').data("ejWaitingPopup").model.autoDisplay && !$('#aapl-wait').data("ejWaitingPopup").model.autoDisplay && !$('#nok-wait').data("ejWaitingPopup").model.autoDisplay) {
                $("#msft-wait").ejWaitingPopup();
                $('#msft-wait').data("ejWaitingPopup").show();
                $("#hiloOpenClose").data("ejWaitingPopup").show();
                getWebAPIData(this.id);
                $("#hiloOpenClose").ejChart("option", { "title": { text: this.id } });
                var data3 = getData();
                $("#colChart").ejChart("option", { "datasource": setdatasource(data3), "primaryXAxis": setRangeAxis(5) });
            }
        });
    });

    // load for Hilo open close Chart
    function chartload(sender) {
        $("#hiloOpenClose").ejWaitingPopup();
        $("#hiloOpenClose").data("ejWaitingPopup").show();
        var width = $(".stockstatus").width();
        if (width > 400) {
            //$("#" + sender.model.text.toLowerCase() + "-wait").ejWaitingPopup();
            //$("#" + sender.model.text.toLowerCase() + "-wait").data("ejWaitingPopup").show();
        }
        getWebAPIData(sender.model.title.text, sender);
        $("#" + "goog" + "-wait").ejWaitingPopup();
        getWebAPIData("GOOG", sender);
        $("#" + "nok" + "-wait").ejWaitingPopup();
        getWebAPIData("NOK", sender);
        $("#" + "aapl" + "-wait").ejWaitingPopup();
        getWebAPIData("AAPL", sender);
        $("#" + "msft" + "-wait").ejWaitingPopup();
        getWebAPIData("MSFT", sender);
    }

    //Set Data entry for Hilo open close chart
    function getWebAPIData(filename, sender) {
        var dataManger1 = ej.DataManager({
            url: "//mvc.syncfusion.com/Services/api/Stock/" + filename + "",
        });

        dataManger1.executeQuery(ej.Query()).done(function (e) {
            $("#hiloOpenClose").ejChart("option", { "datasource": sethilodatasource(e.result), "primaryXAxis": setHiloRangeXAxis(), "primaryYAxis": setHiloRangeAxis(filename) });
            $("#" + filename.toLowerCase() + "-wait").data("ejWaitingPopup").hide();
            $("#hiloOpenClose").data("ejWaitingPopup").hide();
        });
    }

    function sethilodatasource(data) {
        return {
            series: [{
                dataSource:data, xName: "XValue", high: "High", open: "Open", low: "Low", close: "Close" ,
            }]
        };
    }

    // load for Column chart
    function onchartload(sender) {
        sender.model.primaryXAxis.range = {};
        var data = getData(5);
        sender.model.series[0].dataSource = data.Open;
        sender.model.series[0].xName="XValue";
        sender.model.series[0].yName= "YValue";
        sender.model.series[1].dataSource = data.Close;
        sender.model.series[1].xName= "XValue";
        sender.model.series[1].yName= "YValue";
        sender.model.primaryXAxis.range.min = new Date("2008/2/1");
        sender.model.primaryXAxis.range.max = new Date("2013/1/1");
        sender.model.primaryXAxis.range.interval = 1;
    }

    function setdatasource(data) {
        return {
            series: [{
                dataSource: data.Open, xName: "XValue", yName: "YValue"
            }, {
                dataSource: data.Close, xName: "XValue", yName: "YValue"
            }]
        }
    }

    //Set Data entry for Column chart
    function getData(year) {
        var series1 = [];
        var series2 = [];
        var value = 100;
        var value1 = 150;

        for (var i = 1; i <= 64; i++) {
            if (Math.random() > 5) {
                value = getRandomNum(700, 800);
            } else {
                value = getRandomNum(350, 700);
            }
            var point = { XValue: new Date(2008, 01 + i, 15), YValue: value };
            series1.push(point);
            if (value > 400)
                value1 = value - 100;
            else
                value1 = value + 200;
            var point1 = { XValue: new Date(2008, 01 + i, 15), YValue: value1 };
            series2.push(point1);
        }
        var data = { Open: series1, Close: series2 };
        return data;
    }

    function getRandomNum(ubound, lbound) {

        return (Math.floor(Math.random() * (ubound - lbound)) + lbound);
    }

    function setHiloRangeXAxis() {
        return {
            range: { min: new Date(2007, 09, 1), max: new Date(2012, 10, 31), interval: 10 },
            intervalType: 'Months',
        };
    }

    function setHiloRangeAxis(rnge) {
        switch (rnge) {
            case "GOOG":
                return { range: { min: 0, max: 800, interval: 200 } };
                break;
            case "NOK":
                return { range: { min: 0, max: 50, interval: 10 } };
                break;
            case "MSFT":
                return { range: { min: 10, max: 40, interval: 10 } };
                break;
            case "AAPL":
                return { range: { min: 0, max: 800, interval: 200 } };
                break;
        }
    }


    function setRangeAxis(rnge) {
        switch (rnge) {
            case 3:
                return {

                    range: { min: new Date(2010, 02, 1), max: new Date(2013, 02, 1), interval: 1 },
                    intervalType: 'Years',
                    labelFormat: "yyyy",
                };
                break;
            case 2:
                return {

                    range: { min: new Date(2011, 02, 1), max: new Date(2013, 02, 1), interval: 1 },
                    intervalType: 'Years',
                    labelFormat: "yyyy",

                };
            case 1:
                return {

                    range: { min: new Date(2011, 12, 1), max: new Date(2012, 12, 1), interval: 1 },
                    intervalType: 'Months',
                    labelFormat: "MMM",
                };
                break;
            default:
                return {
                    range: { min: new Date(2008, 02, 1), max: new Date(2013, 02, 1), interval: 1 },
                    intervalType: "Years",
                    labelFormat: "yyyy",
                };
        }
    }
    $(".changeyear").click(function (e) {
        switch (this.id) {
            case "5y":
                $("#colChart").ejChart("option", { "primaryXAxis": setRangeAxis() });
                break;
            case "3y":
                $("#colChart").ejChart("option", { "primaryXAxis": setRangeAxis(3) });
                break;
            case "2y":
                $("#colChart").ejChart("option", { "primaryXAxis": setRangeAxis(2) });
                break;
            case "1y":
                $("#colChart").ejChart("option", { "primaryXAxis": setRangeAxis(1) });
                break;
        }
    });
    $(window).resize(function (args) {

        if ($('#goog-wait').data("ejWaitingPopup") != undefined)
            $('#goog-wait').data("ejWaitingPopup").refresh();
        if ($('#aapl-wait').data("ejWaitingPopup") != undefined)
            $('#aapl-wait').data("ejWaitingPopup").refresh();
        if ($('#msft-wait').data("ejWaitingPopup") != undefined)
            $('#msft-wait').data("ejWaitingPopup").refresh();
        if ($('#nok-wait').data("ejWaitingPopup") != undefined)
            $('#nok-wait').data("ejWaitingPopup").refresh();
    });
</script>

   
        
   

