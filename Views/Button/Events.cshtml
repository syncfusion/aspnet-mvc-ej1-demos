@section MetaTags{
   <meta name="description" content="This example demonstrates the various events like clicked, open, change and select in a ASP.NET MVC Button, ToggleButton, SplitButton, GroupButton controls">
}

@section SampleHeading{
    <span class="sampleName">Button-Events-ASP.NET MVC-SYNCFUSION</span>}
@section ControlsSection{
    <div class="frame">
        <div class="control">
            <table>
                <tr>
                    <td class="btnsht">
                        Button
                    </td>
                    <td class="btnsht">
                        @Html.EJ().Button("buttonnormal").Text("Save").Size(ButtonSize.Large).ShowRoundedCorner(true).ClientSideEvents(e => e.Create("btnLoad").Click("btnClick"))
                    </td>
                </tr>
                <tr>
                    <td class="btnsht">
                        Toggle Button
                    </td>
                    <td class="btnsht">
                        @Html.EJ().ToggleButton("TextOnly").Size(ButtonSize.Large).ShowRoundedCorner(true).DefaultText("Save").ActiveText("Delete").ClientSideEvents(e => e.Create("tglebtnLoad").Click("tglebtnClick").Change("tglebtnChange"))
                    </td>
                </tr>
                <tr>
                    <td class="btnsht">
                        Split Button
                    </td>
                    <td class="splttd btnsht">
                        @Html.EJ().SplitButton("splitbuttonnormal").Text("Save").Size(ButtonSize.Large).ShowRoundedCorner(true).TargetID("menu1").ClientSideEvents(e => e.Create("spltbtnLoad").BeforeOpen("onFocusIn").Click("spltbtnClick").ItemMouseOver("spltbtnitmHover").ItemMouseOut("spltbtnitmOut").ItemSelected("spltbtnitmSelected").Open("spltbtnOpened").Close("spltbtnClosed"))
                        <ul id="menu1">
                            <li><span>Open</span></li>
                            <li><span>Save</span></li>
                            <li><span>Delete</span></li>
                        </ul>
                    </td>
                </tr>
                <tr>
                    <td class="btnsht">
                        Group Button
                    </td>
                    <td class="btnsht">
                        @Html.EJ().GroupButton("GroupButton").Width("215px").Height("40px").GroupButtonMode(GroupButtonMode.RadioButton).ShowRoundedCorner(true).Items(item =>
                   {
                       item.Add().Text("Save");
                       item.Add().Text("Open");
                       item.Add().Text("Delete");
                   }).ClientSideEvents(events => events.Select("grpbtnSelect").BeforeSelect("grpbtnBeforeSelect").Create("grpbtnLoad").KeyPress("grpbtnKeyPress"))
            </td>

        </tr>
    </table>
</div>
</div>
}
@section EventsDropdown{
    @Html.EJ().DropDownList("selectControls_input").ShowCheckbox(true).CheckAll(true).TargetID("evntname").ClientSideEvents(e => e.Change("evtpropscheckedevent"))
    <div id="evntname">
        <ul>
            <li>create</li>
            <li>beforeOpen</li>
            <li>beforeSelect</li>
            <li>click</li>
            <li>open</li>
            <li>change</li>
            <li>select</li>
            <li>keyPress</li>
            <li>itemMouseOver</li>
            <li>itemMouseOut</li>
            <li>itemSelected</li>
            <li>close</li>
        </ul>
    </div>
}
@section ScriptSection{
    <script type="text/javascript">
        var btnObj, tglbtnObj, spltbtnObj, grpbtnObj;
        function btnLoad(e) {
            jQuery.addEventLog("Button has been <span class='eventTitle'>created</span>.");
        }
        function btnClick(e) {
            jQuery.addEventLog("Button has been <span class='eventTitle'>clicked</span>.");
        }
        function tglebtnLoad(e) {
            jQuery.addEventLog("ToggleButton has been <span class='eventTitle'>created</span>.");
        }
        function grpbtnLoad(e) {
            jQuery.addEventLog("Group Button has been <span class='eventTitle'>created</span>.");
        }
        function tglebtnClick(e) {
            jQuery.addEventLog("ToggleButton has been <span class='eventTitle'>clicked</span>.");
        }
        function tglebtnChange(e) {
            jQuery.addEventLog("ToggleButton value has been <span class='eventTitle'>changed</span> to " + e.isChecked + ".");
        }
        function spltbtnLoad(e) {
            jQuery.addEventLog("SplitButton has been <span class='eventTitle'>created</span>.");
        }
        function spltbtnClick(e) {
            jQuery.addEventLog("SplitButton has been <span class='eventTitle'>clicked</span>.");
        }
        function spltbtnOpened(e) {
            jQuery.addEventLog("SplitButton popup has been <span class='eventTitle'>Opened</span>.");
        }
        function onFocusIn(e) {
            jQuery.addEventLog("SplitButton popup has been <span class='eventTitle'>BeforeOpened</span>. ");
        }
        function spltbtnitmHover(e) {
            jQuery.addEventLog("SplitButton item <span class='eventTitle'>hovered-in</span>.");
        }
        function spltbtnitmOut(e) {
            jQuery.addEventLog("SplitButton item <span class='eventTitle'>hovered-out</span>.");
        }
        function spltbtnClosed(e) {
            jQuery.addEventLog("SplitButton popup has been <span class='eventTitle'>Closed</span>.");
        }
        function spltbtnitmSelected(e) {
            jQuery.addEventLog(e.text + " item has been <span class='eventTitle'>selected</span>.");
        }
        function grpbtnBeforeSelect(args) {
            jQuery.addEventLog("Group Button <span class='eventTitle'>BeforeActive</span> event is fired for Index " + args.index + ".");
        }
        function grpbtnSelect(args) {
            jQuery.addEventLog("Group Button <span class='eventTitle'>Active</span> event is fired for Index " + args.index + ".");
        }
        function grpbtnKeyPress(args) {
            jQuery.addEventLog("Group Button <span class='eventTitle'>Focus</span> Changed to the index" + args.index + ".");
        }
        function onClear() {
            jQuery.clearEventLog();
        }

        function evtpropscheckedevent(args) {
            btnObj = $("#buttonnormal").data("ejButton");
            tglbtnObj = $("#TextOnly").data("ejToggleButton");
            spltbtnObj = $("#splitbuttonnormal").data("ejSplitButton");
            grpbtnObj = $("#GroupButton").data("ejGroupButton");
            if (args.isChecked) {
                switch (args.selectedText) {
                    case "create":
                        btnObj.option(args.selectedText, "btnLoad");
                        tglbtnObj.option(args.selectedText, "tglebtnLoad");
                        spltbtnObj.option(args.selectedText, "spltbtnLoad");
                        grpbtnObj.option(args.selectedText, "grpbtnLoad");
                        break;
                    case "click":
                        btnObj.option(args.selectedText, "btnClick");
                        tglbtnObj.option(args.selectedText, "tglebtnClick");
                        spltbtnObj.option(args.selectedText, "spltbtnClick");
                        break;
                    case "beforeOpen": spltbtnObj.option(args.selectedText, "onFocusIn"); break;
                    case "open": spltbtnObj.option(args.selectedText, "spltbtnOpened"); break;
                    case "change": tglbtnObj.option(args.selectedText, "tglebtnChange"); break;
                    case "itemMouseOver": spltbtnObj.option(args.selectedText, "spltbtnitmHover"); break;
                    case "itemMouseOut": spltbtnObj.option(args.selectedText, "spltbtnitmOut"); break;
                    case "itemSelected": spltbtnObj.option(args.selectedText, "spltbtnitmSelected"); break;
                    case "close": spltbtnObj.option(args.selectedText, "spltbtnClosed"); break;
                    case "select": grpbtnObj.option(args.selectedText, "grpbtnSelect"); break;
                    case "beforeSelect": grpbtnObj.option(args.selectedText, "grpbtnBeforeSelect"); break;
                    case "keyPress": grpbtnObj.option(args.selectedText, "grpbtnKeyPress"); break;
                }
            }
            else {
                btnObj.option(args.selectedText, null);
                tglbtnObj.option(args.selectedText, null);
                spltbtnObj.option(args.selectedText, null);
                grpbtnObj.option(args.selectedText, null);
            }
        }
    </script>
}
@section StyleSection{
    <style>
        .frame {
            width: 50%;
        }
    </style>
}

