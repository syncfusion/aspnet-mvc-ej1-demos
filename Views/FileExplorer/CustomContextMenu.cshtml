@section MetaTags{
   <meta name="description" content="This example demonstrates about customizing the context menu in a ASP.NET MVC File Explorer." >
}

@section SampleHeading{ <span class="sampleName">FileExplorer-Custom Context Menu-ASP.NET MVC-SYNCFUSION</span>}

@section ControlsSection{
    @* removed the "NewFolder" item from NavigationPane ContextMenu *@
    @{List<String> navbar = new List<string>() { "Upload", "|", "Delete", "Rename", "|", "Cut", "Copy", "Paste", "|", "Getinfo" }; }
    @* added the custom ContextMenu item (View) to Current working directory ContextMenu *@
    @{List<String> cwd = new List<string>() { "Refresh", "Paste", "|", "SortBy", "View", "|", "NewFolder", "Upload", "|", "Getinfo" };}
    @* removed "Upload" item from Selected files/ folder's ContextMenu *@
    @{List<String> files = new List<string>() { "Open", "Download", "|", "Delete", "Rename", "|", "Cut", "Copy", "Paste", "|", 
          "OpenFolderLocation", "Getinfo" }; }


    @Html.EJ().FileExplorer("fileExplorer").Path("~/FileExplorerContent/").ContextMenuSettings(
        settings => settings.Items(
            item => item.Navbar(navbar).Cwd(cwd).Files(files)
        ).CustomMenuFields(fields =>
        {
            fields.Add().Id("View").Text("View by").SpriteCssClass("custom-grid").Child(child =>
            {
                child.Add().Id("tile").Text("Tile view").Action("onLayout");
                child.Add().Id("grid").Text("Grid view").Action("onLayout");
                child.Add().Id("largeicons").Text("Large icons view").Action("onLayout");
            });
        })
        ).AjaxAction(@Url.Content("FileActionContextMenu")).ClientSideEvents(
        e => e.MenuOpen("onMenuOpen").LayoutChange("onLayoutChange")
    ).Width("100%").IsResponsive(true).MinWidth("150px")

    <h6>
        <span style="font-style:italic; margin-top: 5px;margin-left: 20%;">
            Note: A new custom ContextMenu item ("View") is added to Current Working Directory's ContextMenu
        </span>
    </h6>

    <script>
        function onLayout(args) {
            var feObj = $('#fileExplorer').data("ejFileExplorer");
            feObj && feObj.option("layout", args.ID);
        }
        function onMenuOpen(args) {
            if (args.contextMenu == "cwd") {
                $(".fe-context-menu").find(".e-fe-activeicon").removeClass("e-fe-activeicon");
                $(".fe-context-menu").find("." + this.model.layout).addClass("e-fe-activeicon");
            }
        }
        function onLayoutChange(args) {
            $(".fe-context-menu .View").removeClass("custom-grid custom-tile custom-largeicons");
            $(".fe-context-menu .View").addClass("custom-" + this.model.layout);
        }
    </script>

    <style>
        .fe-context-menu .custom-grid:before {
            content: "\e7b9";
        }

        .fe-context-menu .custom-largeicons:before {
            content: "\e7bb";
        }

        .fe-context-menu .custom-tile:before {
            content: "\e7be";
        }
    </style>

}

