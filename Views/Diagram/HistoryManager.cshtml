@section SampleHeading{ <span class="sampleName">Diagram-HistoryManager-ASP.NET MVC-SYNCFUSION</span>
}
@section MetaTags{
    <meta name="description" content="This sample demonstrates the history manager functionalities in the ASP.NET MVC diagram control.">
}
@section StyleSection{
<style>
    .row .cols-sample-area {
        width: 65%;
    }

    .row .cols-prop-area {
        width: 33%;
    }
</style>
}

@section ControlsSection{
    <div>
        @Html.EJ().Diagram("diagram", ViewData["diagramModel"] as Syncfusion.JavaScript.DataVisualization.Models.DiagramProperties)
    </div>
}
@section PropertiesSection{
    <div id="sampleProperties">
        <div class="prop-grid">
            <div class="row">
                <div class="col-md-6 aligntop">
                    <b>Connectors</b>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 aligntop">
                    Undo Stack
                </div>
                <div class="col-md-6">
                    @Html.EJ().DropDownList("undoList").Width("144px").WatermarkText("Select a action").ClientSideEvents(s => s.Change("undo"))
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 aligntop">
                    Redo Stack
                </div>
                <div class="col-md-6">
                    @Html.EJ().DropDownList("redoList").Width("144px").WatermarkText("Select a action").ClientSideEvents(s => s.Change("redo"))
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    Stack Limit
                </div>
                <div class="col-md-6">
                    @Html.EJ().NumericTextbox("StackLimit").Value(3).MinValue(3).MaxValue(12).Width("110px").ClientSideEvents(s => s.Change("DiagramStack"))
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                </div>
                <div class="col-md-6">
                    @Html.EJ().Button("clearHistory").Text("Clear History").Size( ButtonSize.Mini).ShowRoundedCorner(true).Width("110px").ClientSideEvents(c=>c.Click("clearHistory"))
                </div>
            </div>
        </div>
    </div>
}
@section ScriptSection{
    <script type="text/javascript">

        $("#sampleProperties").ejPropertiesPanel();

        function DiagramStack(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            diagram.model.historyManager.stackLimit = args.value;
        }

        function undo(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            diagram.undo();
        }

        function redo(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            diagram.redo();
        }

        function historyChange(args) {
            getValue();
        }
        function clearHistory() {
            var diagram = $("#diagram").ejDiagram("instance");
            diagram.clearHistory();
            getValue();
        }
         

        function getValue() {
            var diagram = $("#diagram").ejDiagram("instance");
            var undoStack = diagram.model.historyManager.undoStack;
            var redoStack = diagram.model.historyManager.redoStack;

            var undoList = [];
            for (var i = 0; i < undoStack.length; i++) {
                undoList.push({ "text": undoStack[i].type, "value": undoStack[i].type });
            }

            var redoList = [];
            for (var i = 0; i < redoStack.length; i++) {
                redoList.push({ "text": redoStack[i].type, "value": redoStack[i].type });
            }
            $('#undoList').ejDropDownList({
                dataSource: undoList,
                fields: { text: "text", value: "text" },
                itemsCount: diagram.model.historyManager.stackLimit
            });

            $('#redoList').ejDropDownList({
                dataSource: redoList,
                fields: { text: "text", value: "text" },
                itemsCount: diagram.model.historyManager.stackLimit
            });

        }
        
    </script>
    <script src="@Url.Content("~/Scripts/DiagramScripts/DiagramCommon.js")"></script>
}
<style>
    .svg-rotate-ie:hover {
        cursor: url("../../Content/ejthemes/common-images/diagram/Rotate.cur"),default;
    }

    .svg-rotate {
        cursor: url("../../Content/ejthemes/common-images/diagram/Rotate.cur"),default;
    }
</style>








