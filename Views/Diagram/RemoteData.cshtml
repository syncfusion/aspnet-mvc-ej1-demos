@using Syncfusion.JavaScript.DataVisualization.DiagramEnums;
@using Syncfusion.JavaScript.DataVisualization.Models.Diagram;
@using Syncfusion.JavaScript.DataVisualization.Models.Collections;
@section SampleHeading{ <span class="sampleName">Diagram-Remote Data-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This sample demonstrates generating a hierarchical tree by fetching data from the server and diagramâ€™s built-in layout algorithm.">
}
@section ControlsSection{
    <div id="main">
        @(Html.EJ().Diagram("RemoteDatabinding")
            .Height("490px")
            .Width("100%")
            .NodeTemplate("nodeTemplate")
            .PageSettings(p=>p.ScrollLimit(ScrollLimit.Diagram))
            .SnapSettings(s => s.SnapConstraints(SnapConstraints.None))
            .DataSourceSettings(s => s.DataSource(ds => ds.URL("//js.syncfusion.com/demos/ejServices/Wcf/Northwind.svc/")
                    .CrossDomain(true))
                    .Query(" ej.Query().from('Employees').select('EmployeeID,ReportsTo,FirstName')")
                    .Id("EmployeeID")
                    .Parent("ReportsTo")
                    .TableName("Employees"))
            .Layout(s => s.Type(LayoutTypes.OrganizationalChart)
                    .HorizontalSpacing(30).VerticalSpacing(70)
                    .MarginY(20).GetLayoutInfo("getLayoutInfo"))
            .DefaultSettings(s => s.Node(new Node() 
                { 
                    Width = 100, Height = 40, BorderColor = "transparent",
                    Labels = new Collection() { new Label() { FontColor = "#ffffff", Bold = true } } 
                }))
            .Tool(Tool.ZoomPan)
            .EnableContextMenu(false))
    </div>

    <script type="text/javascript">
        function nodeTemplate(diagram, node) {
            node.labels[0].text = node.FirstName;
        }

        function getLayoutInfo(diagram, node, options) {
            if (options.level === 3) { node.fillColor = "#3c418d"; }
            if (options.level === 2) {
                node.fillColor = "#108d8d";
                options.type = "center";
                options.orientation = "horizontal";
            }
            if (options.level === 1) { node.fillColor = "#822b86" }

        }

    </script>
    <script src="@Url.Content("~/Scripts/DiagramScripts/DiagramCommon.js")"></script>
}


<style>
    .svg-rotate-ie:hover
    {
        cursor: url("../../Content/ejthemes/common-images/diagram/Rotate.cur"),default;
    }

    .svg-rotate
    {
        cursor: url("../../Content/ejthemes/common-images/diagram/Rotate.cur"),default;
    }
</style>

