@section SampleHeading{
    <span class="sampleName">Diagram-Zoom And Pan-ASP.NET MVC-SYNCFUSION</span>
}
@section MetaTags{
    <meta name="description" content="This sample demonstrates zooming and panning behavior of ASP.NET MVC diagram control.">
}
@section StyleSection{
    <style type="text/css">
        .e-toolbar > .e-horizontal.e-ul > li {
            width: 36px;
            height: 30px;
        }

        .toolBarIconStyle {
            margin-top: 2px;
            margin-left: 4px;
        }

        .row .cols-sample-area {
            width: 67%;
        }

        .row .cols-prop-area {
            width: 31%;
        }
    </style>

}
@section ControlsSection{
    <div id="ToolbarItem" class="e-toolbar e-js e-widget e-toolbarspan">
        <ul id="toolblock3" class="toolblock3rightBorderVisible">
            <li id="zoomIn">
                <div class="sf-icon-ZoomIn toolBarIconStyle">
                </div>
            </li>
            <li id="zoomOut">
                <div class="sf-icon-ZoomOut toolBarIconStyle">
                </div>
            </li>
            <li id="pan">
                <div class="sf-icon-PanTool toolBarIconStyle">
                </div>
            </li>
            <li id="reset">
                <div class="sf-icon-Reset toolBarIconStyle">
                </div>
            </li>
        </ul>
    </div>
    <div>
        @Html.EJ().Toolbar("ToolbarItem").ClientSideEvents(e => e.Click("onItemclick")).Height("38px").EnableSeparator(true)
    </div>
    <div>
        @Html.EJ().Diagram("diagram", ViewData["diagramModel"] as Syncfusion.JavaScript.DataVisualization.Models.DiagramProperties)
    </div>
}
@section PropertiesSection{
    <div id="sampleProperties">
        <div class="prop-grid">
            <div class="row">
                <div class="col-md-6">
                    <b>Properties</b>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 aligntop" style="margin-right: -10px;">
                    Zoom Factor
                </div>
                <div class="col-md-6">
                    @Html.EJ().NumericTextbox("zoomfactor").Width("120px").DecimalPlaces(2).IncrementStep(1).Value(1).MinValue(0.2).MaxValue(30)
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <b>Scroll Settings</b>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Horizontal Offset
                </div>
                <div class="col-md-3 ">
                    @Html.EJ().NumericTextbox("hscroll").Width("120px").IncrementStep(1).Value(0).MaxValue(1000).ClientSideEvents(e => e.Change("changehscroll"))
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 aligntop" style="margin-right: -10px;">
                    Vertical Offset
                </div>
                <div class="col-md-3 ">
                    @Html.EJ().NumericTextbox("vscroll").Width("120px").IncrementStep(1).Value(0).MaxValue(1000).ClientSideEvents(e => e.Change("changevscroll"))
                </div>
            </div>
        </div>
    </div>
}
@section ScriptSection{
    <script type="text/javascript">

        function onItemclick(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            var zoomFactor = $("#zoomfactor").ejNumericTextbox("instance");
            var zoom1 = ej.datavisualization.Diagram.Zoom();
            zoom1.zoomFactor = zoomFactor.model.value;
            switch (args.currentTarget.id) {
                case "zoomIn":
                    zoom1.zoomCommand = ej.datavisualization.Diagram.ZoomCommand.ZoomIn;
                    diagram.zoomTo(zoom1);
                    break;
                case "zoomOut":
                    zoom1.zoomCommand = ej.datavisualization.Diagram.ZoomCommand.ZoomOut;
                    diagram.zoomTo(zoom1);
                    break;
                case "pan":
                    diagram.update({ tool: ej.datavisualization.Diagram.Tool.ZoomPan });
                    break;
                case "reset":
                    diagram.refresh();
                    break;
            }
        }
        function changevscroll(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            diagram.update({ scrollSettings: { verticalOffset: args.value } });
        }

        function changehscroll(args) {
            var diagram = $("#diagram").ejDiagram("instance");
            diagram.update({ scrollSettings: { horizontalOffset: args.value } });
        }
        
        $("#sampleProperties").ejPropertiesPanel();
    </script>
}
<link href="@Url.Content("~/Images/diagram/zoomandpan/style.css")" rel="stylesheet" />

