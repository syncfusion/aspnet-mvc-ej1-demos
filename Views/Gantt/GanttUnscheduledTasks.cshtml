@section MetaTags{
   <meta name="description" content="This example illustrates binding unscheduled tasks or the tasks with undefined dates in the Syncfusion Gantt chart control.">
}

@section SampleHeading{<span class="sampleName">Gantt-Unscheduled Tasks-ASP.NET MVC-SYNCFUSION</span>}

@section ControlsSection{
    @(Html.EJ().Gantt("GanttContainer")
    .TaskIdMapping("TaskID")
    .TaskNameMapping("TaskName")
    .StartDateMapping("StartDate")
    .EndDateMapping("EndDate")
    .DurationMapping("Duration")
    .ProgressMapping("Progress")
    .AllowUnscheduledTask(true)
    .ScheduleStartDate("02/01/2017")
    .ScheduleEndDate("03/14/2017")
    .DateFormat("MM/dd/yyyy")
    .AllowUnscheduledTask(true)
    .HighlightWeekends(true)
    .TreeColumnIndex(0)
    .ShowGridCellTooltip(true)
    .ChildMapping("SubTasks")
    .AllowSelection(true)
    .PredecessorMapping("Predecessors")
    .IncludeWeekend(false)
    .IsResponsive(true)
    .EnableVirtualization(false)
    .SizeSettings(ss => ss.Width("100%").Height("450px"))
    .ShowGridCellTooltip(true)
	.ToolbarSettings(toolbar =>
                   {
                       toolbar.ShowToolbar(true);
                       toolbar.ToolbarItems(new List<GanttToolBarItems>()
                       {
                           GanttToolBarItems.Add,
                           GanttToolBarItems.Edit,
                           GanttToolBarItems.Delete,
                           GanttToolBarItems.Update,
                           GanttToolBarItems.Cancel,
                           GanttToolBarItems.Indent,
                           GanttToolBarItems.Outdent,
                           GanttToolBarItems.ExpandAll,
                           GanttToolBarItems.CollapseAll,
                                  });
                   })
	.EditSettings(edit =>
                   {
                       edit.AllowEditing(true);
                       edit.AllowAdding(true);
                       edit.AllowDeleting(true);
                       edit.AllowIndent(true);
                       edit.EditMode("cellEditing");                       
                   })
    .ClientSideEvents(cs => cs.Load("load"))    
    .Datasource(ViewBag.datasource)
    )
}
@section ScriptSection{
    <script type="text/javascript">
        function load(args) {
            var columns = this.getColumns();
            var taskName = columns.splice(1, 1);
            columns.splice(4, 0, taskName[0]);
            columns[0].width = "65px";
        }
    </script>
}

