@section SampleHeading{ <span class="sampleName">PivotClient-Display Options-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot client control describes how to customize the control layout like default view and tile view">
}

@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;

@section StyleSection{
    <style>
        .cusBtn {
            margin-left: 195px;
        }

        .row .cols-prop-area {
            width: 53%;
            min-height: 260px;
        }

        prop-grid content {
            overflow-y: hidden;
        }

        .cols-sample-area {
            width: 100% !important;
            padding: 8px !important;
            overflow: auto;
        }

        #PivotClient1 {
            min-height: 275px;
            min-width: 525px;
            display: block;
        }

        #CodeViewTab ul > li:first-child + li {
            display: none;
        }
    </style>
}
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section ScriptSection{
    <script type="text/javascript">
        var ddlTarget1; var ddlTarget2; var btnTarget; var clientTarget;
        var rbTarget1; var rbTarget2; var rbTarget3; var rbTarget4;
        $(function () {
            $("#Radio1").ejRadioButton();
            $("#Radio2").ejRadioButton({ checked: true });
            $("#Radio3").ejRadioButton();
            $("#Radio4").ejRadioButton({ checked: true });
            $("#Radio5").ejRadioButton();
            $("#Radio6").ejRadioButton({ checked: true });
            $("#Btn1").ejButton({
                roundedCorner: true,
                size: "small",
                type: ej.ButtonType.Button,
                click: "ApplyChanges"
            });
            var controlPalcements = [{ option: "Tab", value: ej.PivotClient.ControlPlacement.Tab }, { option: "Tile", value: ej.PivotClient.ControlPlacement.Tile }];
            var displayModes = [{ option: "Chart Only", value: ej.PivotClient.DisplayMode.ChartOnly }, { option: "Grid Only", value: ej.PivotClient.DisplayMode.GridOnly }, { option: "Chart and Grid", value: ej.PivotClient.DisplayMode.ChartAndGrid }];
            $('#ctrlPlace').ejDropDownList({
                dataSource: controlPalcements,
                fields: { text: "option", value: "value" }
            });
            $('#dispMode').ejDropDownList({
                dataSource: displayModes,
                fields: { text: "option", value: "value" }
            });
            ddlTarget1 = $('#ctrlPlace').data("ejDropDownList");
            ddlTarget2 = $('#dispMode').data("ejDropDownList");
            rbTarget1 = $('#Radio1').data("ejRadioButton"); rbTarget2 = $('#Radio2').data("ejRadioButton");
            rbTarget3 = $('#Radio3').data("ejRadioButton"); rbTarget4 = $('#Radio4').data("ejRadioButton");
            rbTarget5 = $('#Radio5').data("ejRadioButton"); rbTarget6 = $('#Radio6').data("ejRadioButton");
            ddlTarget1.selectItemByText(ddlTarget1.model.dataSource[1].option);
            ddlTarget2.selectItemByText(ddlTarget2.model.dataSource[2].option);
        });
        var isInitClick = true;
        function ApplyChanges(args) {
            if (isInitClick && ddlTarget1.model.text == "Tile" && ddlTarget2.model.text == "Chart and Grid"
            && rbTarget3.model.checked && rbTarget4.model.checked)
                return false;
            else {
                var ctlPlace = ddlTarget1.model.text == "Tab" ? "tab" : ddlTarget1.model.text == "Tile" ? "tile" : "";
                var dispMode = ddlTarget2.model.text == "Chart Only" ? "chartonly" : ddlTarget2.model.text == "Grid Only" ? "gridonly" : ddlTarget2.model.text == "Chart and Grid" ? "chartandgrid" : "";
                var dftView = rbTarget1.model.checked ? "chart" : rbTarget2.model.checked ? "grid" : "chart";
                var tglPanel = rbTarget3.model.checked ? true : rbTarget4.model.checked ? false : false;
                var responsive = rbTarget5.model.checked ? true : rbTarget6.model.checked ? false : false;
                isInitClick = false;
                clientTarget = $('#PivotClient1').data("ejPivotClient");
                clientTarget._destroy();
                $("#PivotClient1").ejPivotClient({
                    dataSource: {
                        data: "//bi.syncfusion.com/olap/msmdpump.dll", //data
                        catalog: "Adventure Works DW 2008 SE",
                        cube: "Adventure Works",
                        rows: [
                            {
                                fieldName: "[Date].[Fiscal]"
                            }
                        ],
                        columns: [
                            {
                                fieldName: "[Customer].[Customer Geography]"
                            }
                        ],
                        values: [
                            {
                                measures: [
                                    {
                                        fieldName: "[Measures].[Internet Sales Amount]"
                                    }
                                ],
                                axis: "columns"
                            }
                        ]
                    }, title: "OLAP Browser",isResponsive: responsive,
                    displaySettings: {
                        mode: dispMode,
                        defaultView: dftView,
                        controlPlacement: ctlPlace,
                        enableTogglePanel: tglPanel
                    }, load: "OnLoad", chartLoad: "setChartProperties", beforeExport: "Export", saveReport: "reportSettings", fetchReport: "reportSettings", loadReport: "reportSettings"
                });
            }
        }
        function OnLoad(args) {
            if (this.model.displaySettings.ControlPlacement == ej.PivotClient.ControlPlacement.Tab && this.model.DisplayOptions.mode == ej.PivotClient.DisplayMode.ChartAndGrid) {
                this._chartHeight = 535;
                this._chartWidth = 555;
                this._gridHeight = "530px";
            }
            else if (this.model.displaySettings.ControlPlacement == ej.PivotClient.ControlPlacement.Tile && this.model.DisplayOptions.mode == ej.PivotClient.DisplayMode.ChartAndGrid) {
                this._chartHeight = 275;
                this._chartWidth = 555;
                this._gridHeight = "530px";
            }
        }
        function setChartProperties(args) {
            this._pivotChart.model.load = "loadTheme";
            clientTarget = $('#PivotClient1').data("ejPivotClient");
        }
        function Export(args) {
            args.url = "ExportPivotClient";
        }
        function reportSettings(args) {
            if (args.fetchReportSetting)
                return args.fetchReportSetting.url = "../wcf/OlapClientService.svc";
            else if (args.loadReportSetting)
                return args.loadReportSetting.url = "../wcf/OlapClientService.svc";
            else
                return args.saveReportSetting.url = "../wcf/OlapClientService.svc";
        }
		window.loadPivotClientFrameTheme = function () {
            window.setTimeout(function () {
                var pivotClientElement = $("#PivotClient1").data("ejPivotClient");
                pivotClientElement._load();
            }, 500);
        }
    </script>
}

@section ControlsSection{
    @Html.EJ().Pivot().PivotClient("PivotClient1").DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("[Date].[Fiscal]").Add(); }).Columns(columns => { columns.FieldName("[Customer].[Customer Geography]").Add(); }).Values(values => { values.Measures(measures => { measures.FieldName("[Measures].[Internet Sales Amount]").Add(); }).Axis(AxisName.Column).Add(); })
        .Data("//bi.syncfusion.com/olap/msmdpump.dll").Catalog("Adventure Works DW 2008 SE").Cube("Adventure Works")).Title("OLAP Browser").DisplaySettings(disp => { disp.ControlPlacement(PivotClientControlPlacement.Tile); }).ClientSideEvents(oEve => { oEve.RenderSuccess("setChartProperties").BeforeExport("Export").SaveReport("reportSettings").LoadReport("reportSettings").FetchReport("reportSettings"); })
    <!--Tooltip labels can be localized here-->
    <script id="tooltipTemplate" type="application/jsrender">
        <div style="background:White; color:black; font-size:12px; font-weight:normal; border: 1px solid #4D4D4D; white-space: nowrap;border-radius: 2px; margin-right: 25px; min-width: 110px;padding-right: 5px; padding-left: 5px; padding-bottom: 2px ;width: auto; height: auto;">
            <div>Measure(s) : {{:~Measures(#data)}}</div><div>Row : {{:~Row(#data)}}</div><div>Column : {{:~Column(#data)}}</div><div>Value : {{:~Value(#data)}}</div>
        </div>
    </script>
}

@section PropertiesSection{
    <div class="cols-prop-area event-tracer">
        <div>
            <div class="heading">
                <span>Properties</span>
            </div>
            <div class="prop-grid content" style="padding-top:8px">
                <div class="eventarea">
                    <div class="row">
                        <div class="col-md-3">
                            Control Placement:
                        </div>
                        <div class="col-md-3">
                            <input type="text" id="ctrlPlace" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            Display Mode:
                        </div>
                        <div class="col-md-3">
                            <input type="text" id="dispMode" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            Default View:
                        </div>
                        <div class="col-md-3">
                            <table>
                                <tr>
                                    <td class="chkrad">
                                        <input type="radio" name="dftView" id="Radio1" /><label for="Radio1" class="clslab">Chart</label>
                                    </td>
                                    <td class="chkrad" colspan="2">
                                        <input type="radio" name="dftView" id="Radio2" /><label for="Radio2" class="clslab">Grid</label>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            Toggle Panel:
                        </div>
                        <div class="col-md-3">
                            <table>
                                <tr>
                                    <td class="chkrad">
                                        <input type="radio" name="tglPln" id="Radio3" /><label for="Radio3" class="clslab">True</label>
                                    </td>
                                    <td class="chkrad" colspan="2">
                                        <input type="radio" name="tglPln" id="Radio4" /><label for="Radio4" class="clslab">False</label>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            Responsive:
                        </div>
                        <div class="col-md-3">
                            <table>
                                <tr>
                                    <td class="chkrad">
                                        <input type="radio" name="tglPln" id="Radio5" /><label for="Radio3" class="clslab">True</label>
                                    </td>
                                    <td class="chkrad" colspan="2">
                                        <input type="radio" name="tglPln" id="Radio6" /><label for="Radio4" class="clslab">False</label>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <button class="cusBtn" id="Btn1">
                        Apply
                    </button>
                </div>
            </div>
        </div>
    </div>
}

