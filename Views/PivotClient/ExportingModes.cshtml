@section SampleHeading{ <span class="sampleName">PivotClient-Exporting-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot client control demonstrates exporting the pivot grid and pivot chart to Excel, Word and PDF formats">
}

@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;

@section StyleSection{
    <style>
        #PivotClient1 {
            min-height: 275px;
            min-width: 525px;
        }

        .cols-sample-area {
            width: 100% !important;
            padding: 8px !important;
            overflow: auto;
        }

        .row .cols-prop-area {
            min-height: 120px;
            width: 270px;
        }

        #CodeViewTab ul > li:first-child + li {
            display: none;
        }
    </style>
}
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>

}
@section ScriptSection{
    <script type="text/javascript">
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
            var modes = [{ option: "Chart Only", value: ej.PivotClient.ClientExportMode.ChartOnly }, { option: "Grid Only", value: ej.PivotClient.ClientExportMode.GridOnly }, { option: "Chart and Grid", value: ej.PivotClient.ClientExportMode.ChartAndGrid }];
            $('#drpdwn').ejDropDownList({
                dataSource: modes,
                fields: { text: "option", value: "value" }
            });
            ddlTarget = $('#drpdwn').data("ejDropDownList");
            ddlTarget.selectItemByText(ddlTarget.model.dataSource[2].option);
            $("#drpdwn").ejDropDownList("option", "change", "ChangeMode");
        });
        function setChartProperties(args) {
            this._pivotChart.model.load = "loadTheme";
            if (args._successAction == undefined || args._successAction == "Filter") {
                this._pivotChart.model.legend.rowCount = 2;
                this._pivotChart.model.primaryXAxis = { title: { text: "Fiscal Year" }, labelRotation: 270 };
                this._pivotChart.model.primaryYAxis = { title: { text: "Internet Sales Amount" } };
            }
        }
        function ChangeMode(args) {
            var clientObj = $("#PivotClient1").data("ejPivotClient");
            clientObj.model.clientExportMode = args.value;
        }
        function Export(args) {
            args.url = "ExportPivotClient";
        }
        function reportSettings(args) {
            if (args.fetchReportSetting)
                return args.fetchReportSetting.url = "../wcf/OlapClientService.svc";
            else if (args.loadReportSetting)
                return args.loadReportSetting.url = "../wcf/OlapClientService.svc";
            else
                return args.saveReportSetting.url = "../wcf/OlapClientService.svc";
        }
		window.loadPivotClientFrameTheme = function () {
            window.setTimeout(function () {
                var pivotClientElement = $("#PivotClient1").data("ejPivotClient");
                pivotClientElement._load();
            }, 500);
        }
    </script>
}

@section ControlsSection{
    @Html.EJ().Pivot().PivotClient("PivotClient1").DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("[Date].[Fiscal]").Add(); }).Columns(columns => { columns.FieldName("[Customer].[Customer Geography]").Add(); }).Values(values => { values.Measures(measures => { measures.FieldName("[Measures].[Internet Sales Amount]").Add(); }).Axis(AxisName.Column).Add(); })
                        .Data("//bi.syncfusion.com/olap/msmdpump.dll").Catalog("Adventure Works DW 2008 SE").Cube("Adventure Works")).Title("OLAP Browser").ClientSideEvents(oEve => { oEve.ChartLoad("setChartProperties").BeforeExport("Export").SaveReport("reportSettings").LoadReport("reportSettings").FetchReport("reportSettings"); })
    <!--Tooltip labels can be localized here-->
    <script id="tooltipTemplate" type="application/jsrender">
        <div style="background:White; color:black; font-size:12px; font-weight:normal; border: 1px solid #4D4D4D; white-space: nowrap;border-radius: 2px; margin-right: 25px; min-width: 110px;padding-right: 5px; padding-left: 5px; padding-bottom: 2px ;width: auto; height: auto;">
            <div>Measure(s) : {{:~Measures(#data)}}</div><div>Row : {{:~Row(#data)}}</div><div>Column : {{:~Column(#data)}}</div><div>Value : {{:~Value(#data)}}</div>
        </div>
    </script>
}

@section PropertiesSection{
            <div class="prop-grid">
                <div class="row">
                    <div style="line-height:2;float:left;margin-left:15px;">
                        Export Mode
                    </div>
                    <div class="col-md-3">
                        <input type="text" id="drpdwn" />
                    </div>
                </div>
            </div>
}

