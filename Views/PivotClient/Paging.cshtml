@section SampleHeading{ <span class="sampleName">PivotClient-Paging-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot client control describes how to load large records with paging to improve performance.">
}

@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;
@{
    ViewBag.Title = "PivotClient";
}
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section StyleSection{
    <style>
        #PivotClient1 {
            min-height: 275px;
            min-width: 950px;
            float: left;
            margin-left: -16px;
        }

        .radioBtnLabel {
            margin-left: 5px;
        }
     
        .row .cols-sample-area {
           min-width: 1066px;
            width: 100%;
        }

        .cols-prop-area .content {
            width: auto;
        }

        .row .cols-prop-area {
            min-height: 170px;
            width: auto;
        }
        #CodeViewTab ul > li:first-child + li{
            display:none;
        }
    </style>
}

@section ScriptSection{
    <script>
        var vScrolling, paging, rdbClient, rdbServer, pGridObj;
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
            $("#vScrolling,#paging,#rdbClient,#rdbServer").ejRadioButton({ change: "renderPivotClient" });
            vScrolling = $('#vScrolling').data("ejRadioButton");
            paging = $('#paging').data("ejRadioButton");
            rdbClient = $('#rdbClient').data("ejRadioButton");
            rdbServer = $('#rdbServer').data("ejRadioButton");
        });
        function setChartProperties(args) {
            this._pivotChart.model.load = "loadTheme";
        }
        function renderPivotClient(args) {
            $(".e-pivotclient").remove();
            var clientData = "";
            if (rdbClient.model.checked) {
                clientData = {
                    data: "//bi.syncfusion.com/olap/msmdpump.dll",
                    catalog: "Adventure Works DW 2008 SE", cube: "Adventure Works",
                    rows: [{ fieldName: "[Customer].[Customer Geography]" }], columns: [{ fieldName: "[Date].[Date]" }],
                    values: [{ measures: [{ fieldName: "[Measures].[Internet Sales Amount]" }], axis: "columns" }],
                    filters: [],
                    pagerOptions: {
                        categoricalPageSize: 3,
                        seriesPageSize: 3,
                        categoricalCurrentPage: 1,
                        seriesCurrentPage: 1
                    }
                }
            }
            var targetPanel = ej.buildTag("div#PivotClient", "", { "min-height": "275px", width: "100%" })[0].outerHTML;
            if (paging.model.checked) {
                $(targetPanel).appendTo(".control");
                if (clientData == "")
                    $("#PivotClient").ejPivotClient({ url: "../api/OlapClient", renderSuccess: "setChartProperties", customObject: { "Report": "Paging" }, enablePaging: true, beforeExport: "Export", saveReport: "reportSettings", fetchReport: "reportSettings", loadReport: "reportSettings" });
                else
                    $("#PivotClient").ejPivotClient({ dataSource: clientData, renderSuccess: "setChartProperties", enablePaging: true, beforeExport: "Export", saveReport: "reportSettings", fetchReport: "reportSettings", loadReport: "reportSettings" });
            }
            else {
                $(targetPanel).appendTo(".control");
                if (clientData == "")
                    $("#PivotClient").ejPivotClient({ url: "../api/OlapClient", renderSuccess: "setChartProperties", customObject: { "Report": "Paging" }, enableVirtualScrolling: true, beforeExport: "Export", saveReport: "reportSettings", fetchReport: "reportSettings", loadReport: "reportSettings" });
                else
                    $("#PivotClient").ejPivotClient({ dataSource: clientData, renderSuccess: "setChartProperties", enableVirtualScrolling: true, beforeExport: "Export", saveReport: "reportSettings", fetchReport: "reportSettings", loadReport: "reportSettings" });
            }
        }
        function Export(args) {
            args.url = "ExportPivotClient";
        }
        function reportSettings(args) {
            if (args.fetchReportSetting)
                return args.fetchReportSetting.url = "../wcf/OlapClientService.svc";
            else if (args.loadReportSetting)
                return args.loadReportSetting.url = "../wcf/OlapClientService.svc";
            else
                return args.saveReportSetting.url = "../wcf/OlapClientService.svc";
        }
		window.loadPivotClientFrameTheme = function () {
            window.setTimeout(function () {
                var pivotClientElement = $("#PivotClient").data("ejPivotClient");
                pivotClientElement._load();
            }, 500);
        }
    </script>
}

@section ControlsSection{
    <div class="control" style="min-height: 275px; width: 100%; display:inline-block; float:left; overflow: auto">
        @Html.EJ().Pivot().PivotClient("PivotClient").Title("OLAP Browser").DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("[Customer].[Customer Geography]").Add(); }).Columns(columns => { columns.FieldName("[Date].[Date]").Add(); }).Values(values => { values.Measures(measures => { measures.FieldName("[Measures].[Internet Sales Amount]").Add(); }).Axis(AxisName.Column).Add(); })
                  .Data("//bi.syncfusion.com/olap/msmdpump.dll").Catalog("Adventure Works DW 2008 SE").Cube("Adventure Works").PagerOptions(pagerOptions => { pagerOptions.CategoricalPageSize(3).SeriesPageSize(3).CategoricalCurrentPage(1).SeriesCurrentPage(1); })).EnableVirtualScrolling(true).ClientSideEvents(oEve => { oEve.RenderSuccess("setChartProperties").BeforeExport("Export").SaveReport("reportSettings").LoadReport("reportSettings").FetchReport("reportSettings"); })
    </div>
}

@section PropertiesSection{
    <div id="sampleProperties">
        <div class="prop-grid">
            <div class="row">
                <table>
                    <tr>
                        <td class=" chkrad">
                            Mode :
                        </td>
                        <td class="chkrad">
                            <input type="radio" name="dataMode" id="rdbClient" checked /><label for="rdbClient" class="radioBtnLabel">Client</label>
                        </td>
                        <td class="chkrad" colspan="2">
                            <input type="radio" name="dataMode" id="rdbServer" /><label for="rdbServer" class="radioBtnLabel">Server</label>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="row" style="margin-top: 5px;">
                <table>
                    <tr>
                        <td class="chkrad">
                            Paging Type :
                        </td>
                        <td class="chkrad">
                            <input type="radio" name="type" id="vScrolling" checked="checked" /><label for="vScrolling" class="radioBtnLabel">Virtual Scrolling</label>
                        </td>
                        <td class="chkrad" colspan="2">
                            <input type="radio" name="type" id="paging" /><label for="paging" class="radioBtnLabel">Paging</label>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}

