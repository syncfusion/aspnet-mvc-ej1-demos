@section SampleHeading{ <span class="sampleName">PivotClient-Calculated Members-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot client control describes how to render the calculated members and measures.">
}

@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;

@section StyleSection{
    <style>
        .row .cols-sample-area {
            width: 100%;
            padding: 10px !important;
            overflow: auto;
        }

        #PivotClient1 {
            min-height: 275px;
            min-width: 525px;
        }

        #CodeViewTab ul > li:first-child + li {
            display: none;
        }

        .row .cols-prop-area {
            min-height: 110px;
            margin-top: 20px;
            width: 30% !important;
        }
    </style>
}
@section ScriptSection{
    <script type="text/javascript">
        var pivotClient;
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
            $("#rdbServer, #rdbClient").ejRadioButton({ change: "renderClient" });
            pivotClient = $("#PivotClient1").data("ejPivotClient");
        });
        function renderClient(args) {
            $("#PivotClient1").remove();
            var clientData = "";
            var targetPanel = ej.buildTag("div#PivotClient1", "", { "min-height": "275px", width: "100%" })[0].outerHTML;
            $(targetPanel).appendTo(".control");
            if (args.model.id == "rdbClient") {
                clientData = {
                    data: "//bi.syncfusion.com/olap/msmdpump.dll", //data
                    catalog: "Adventure Works DW 2008 SE",
                    cube: "Adventure Works",
                    columns: [{ fieldName: "[Customer].[Customer Geography]" },
                      {
                          fieldName: "BikeAndComponents",
                          expression: "([Product].[Product Categories].[Category].[Bikes] + [Product].[Product Categories].[Category].[Components] )",
                          hierarchyUniqueName: "[Product].[Product Categories]"
                      }],
                    rows: [{ fieldName: "[Date].[Fiscal]" }],
                    values: [{ measures: [{ fieldName: "[Measures].[Order Quantity]" }, { fieldName: "Order on Discount", expression: "[Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)" }], axis: "columns" }]
                };
            }
            if (clientData == "")
                $("#PivotClient1").ejPivotClient({ url: "../api/OlapClient", toolbarIconSettings: { enableCalculatedMember: true }, title: "OLAP Browser", customObject: { "Report": "CalculatedMember" }, renderSuccess: "setChartProperties", beforeExport: "Export", saveReport: "reportSettings", fetchReport: "reportSettings", loadReport: "reportSettings" });
            else
                $("#PivotClient1").ejPivotClient({ dataSource: clientData, toolbarIconSettings: { enableCalculatedMember: true }, title: "OLAP Browser", renderSuccess: "setChartProperties", beforeExport: "Export", saveReport: "reportSettings", fetchReport: "reportSettings", loadReport: "reportSettings" });
        }
        function setChartProperties(args) {
            this._pivotChart.model.load = "loadTheme";
            if (args._successAction == undefined || args._successAction == "Filter") {
                this._pivotChart.model.legend.rowCount = 2;
                this._pivotChart.model.primaryXAxis = { title: { text: "Fiscal Year" }, labelRotation: 270 };
                this._pivotChart.model.primaryYAxis = { title: { text: "Customer Count" } };
            }
        }
        function Export(args) {
            args.url = "ExportPivotClient";
        }
        function reportSettings(args) {
            if (args.fetchReportSetting)
                return args.fetchReportSetting.url = "../wcf/OlapClientService.svc";
            else if (args.loadReportSetting)
                return args.loadReportSetting.url = "../wcf/OlapClientService.svc";
            else
                return args.saveReportSetting.url = "../wcf/OlapClientService.svc";
        }
        function onload(args) {
            args.model.customObject = { "Report": "CalculatedMember" };
        }
        window.loadPivotClientFrameTheme = function () {
            window.setTimeout(function () {
                var pivotClientElement = $("#PivotClient1").data("ejPivotClient");
                pivotClientElement._load();
            }, 500);
        }
    </script>
}


@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section ControlsSection{
<div class="control" style="min-height: 275px; width: 100%; display:inline-block; float:left; overflow: auto">
    @Html.EJ().Pivot().PivotClient("PivotClient1").ToolbarIconSettings(tlbr => tlbr.EnableCalculatedMember(true)).DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("[Date].[Fiscal]").Add(); }).Columns(columns => { columns.FieldName("[Customer].[Customer Geography]").Add(); columns.FieldName("BikesAndComponents").Expression("([Product].[Product Categories].[Category].[Bikes] + [Product].[Product Categories].[Category].[Components] )").HierarchyUniqueName("[Product].[Product Categories]").Add(); }).Values(values => { values.Measures(measures => { measures.FieldName("[Measures].[Order Quantity]").Add(); measures.FieldName("Order on Discount").Expression("([Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10))").Add(); }).Axis(AxisName.Column).Add(); }).Data("//bi.syncfusion.com/olap/msmdpump.dll").Catalog("Adventure Works DW 2008 SE").Cube("Adventure Works")).Title("OLAP Browser").ClientSideEvents(oEve => { oEve.RenderSuccess("setChartProperties").BeforeExport("Export").SaveReport("reportSettings").LoadReport("reportSettings").FetchReport("reportSettings"); })
 </div>
}
@section PropertiesSection{
    <div class="prop-grid">
        <div class="row">
            <div class="col-md-3" style="width:20%">
                Mode :
            </div>
            <div class="col-md-3" style="width:30%">
                <input type="radio" name="dftView" id="rdbClient" checked="checked" /><label for="rdbClient" class="clslab">Client</label>
            </div>
            <div class="col-md-3" style="width:30%">
                <input type="radio" name="dftView" id="rdbServer" /><label for="rdbServer" class="clslab">Server</label>
            </div>
        </div>
    </div>
}

