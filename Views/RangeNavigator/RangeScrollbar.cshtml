@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">RangeNavigator-Scrollbar-ASP.NET MVC-SYNCFUSION</span>}

@section ScriptSection
{
    <script type="text/javascript" language="javascript">

        function GetData(start, end) {
            var series1 = [], date, data1;
            var value = 100;

            for (var i = 0; start <= end; i++) {
                date = Date.parse(start);
                if (Math.random() > .5) {
                    value += Math.random();
                } else {
                    value -= Math.random();
                }
                var point1 = { XValue: new Date(date), YValue: value };
                new Date(start.setDate(start.getDate() + 1));
                series1.push(point1);
            }

            data1 = { Open: series1 };
            return data1;
        }
        //Event fires on loading the chart
        function onchartload(sender) {
            loadTheme(sender);
            var chartData = GetData(new Date(2009,5,11), new Date(2009,8,1));
            sender.model.series[0].dataSource = chartData.Open;
            sender.model.series[0].xName = "XValue";
            sender.model.series[0].yName = "YValue";
        }

        //Event fires on loading the rangenavigator
        function onrangeload(sender) {
            loadTheme(sender);
			var data = GetData(new Date(2009,0,1), new Date(2010,2,1));
			sender.model.series[0].dataSource = data.Open;
			sender.model.series[0].xName = "XValue";
			sender.model.series[0].yName = "YValue";
        }

        //Event fires on Rangenavigator slider position changed
        function onRangeChanged(sender) {
			
            var chartobj = $("#Chart1").ejChart("instance");
            chartobj.model.series[0].dataSource = sender.selectedData;
            chartobj.model.series[0].xName = "XValue";
            chartobj.model.series[0].yName = "YValue";
            chartobj.model.primaryXAxis.labelFormat = "MMM/dd";
			chartobj.redraw();
        }

        //Event fires on scrollbar position changed
        function onScrollbarChanged(sender) {
			$("#RangeNavigator1").ejWaitingPopup();
			$("#RangeNavigator1").ejWaitingPopup("hide");
			var range = sender, startRange, endRange;
			data = sender.data;
			startRange = Date.parse(data.newRange.start);
			endRange = Date.parse(data.newRange.end);
			data = GetData(new Date(startRange), new Date(endRange));
			range.model.series[0].dataSource = data.Open;
			range.model.series[0].xName = "XValue";
			range.model.series[0].yName = "YValue";
			$("#RangeNavigator1").ejRangeNavigator("redraw");
        }
		
		$(window).mouseup(function(){
				$("#RangeNavigator1").ejWaitingPopup();
				$("#RangeNavigator1").ejWaitingPopup("hide");
			});

    function onScrollStart(sender) {
        $("#RangeNavigator1").ejWaitingPopup();
        $("#RangeNavigator1").ejWaitingPopup("show");
    }

    </script>
}
@section StyleSection
{
    <style>
        .e-waitpopup-pane
			{
				background-color:transparent !important;
			}
    </style>
}

@section ControlsSection{
    <div>
          @(Html.EJ().Chart("Chart1")
              .PrimaryXAxis(pr => pr
              .ValueType(AxisValueType.Datetime).CrosshairLabel(cl=>cl.Visible(true)).LabelFormat("MMM/dd"))
              .PrimaryYAxis(pr => pr.RangePadding(ChartRangePadding.None).CrosshairLabel(cl=>cl.Visible(true)))
              .Series(sr =>
                          {
                              sr.Type(SeriesType.Line).Name("Product A")
                                .Tooltip(to => to.Visible(true).Format("#point.x#  : #point.y#")).Width(2).Add();
                          })
              .Load("onchartload")
              .Crosshair(cr=>cr.Visible(true))
              .Size(sz => sz.Height("300"))
              .Legend(lg => lg.Visible(false))
              )

        @(Html.EJ().RangeNavigator("RangeNavigator1")
                  .EnableDeferredUpdate(true)
				  .EnableScrollbar(true)
                  .SelectedRangeSettings(ra => ra.Start("2009/5/11").End("2009/8/11"))
                  .ScrollRangeSettings(vr=>vr.Start("2009/1/1").End("2014/2/31"))
                  .AllowSnapping(true)
                  .IsResponsive(true)
                  .ValueType(RangeNavigatorValueType.Datetime)
                  .TooltipSettings(tl => tl.Visible(true).LabelFormat("dd/MMM/yyyy")
                  .TooltipDisplayMode("always"))
                  .Series(sr =>
                        {
                           sr.Name("Product A").EnableAnimation(false).Type(SeriesType.Line).Opacity(0.5).Fill("#69D2E7").Add();
                        })                 
                  .Load("onrangeload")
                  .RangeChanged("onRangeChanged")
                  .ScrollEnd("onScrollbarChanged")
				  .ScrollStart("onScrollStart")
                  )      
    </div>
}

