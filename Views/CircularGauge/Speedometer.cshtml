@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">CircularGauge-Speedometer-ASP.NET MVC-SYNCFUSION</span>
	}

@section ControlsSection{
 <div align="center">
    @(Html.EJ().CircularGauge("circulargauge1")
            .IsResponsive(true)
                    .ClientSideEvents(cli=>cli.Load("loadGaugeTheme"))
                .BackgroundColor("transparent")
                .EnableAnimation(false)
                .Width(500)
                .Scales(sc =>
                {
                    sc.Radius(140)
                    .PointerCap(cap=>cap.Radius(12))
                    .ShowScaleBar(true)
                    .ShowPointers(true)
                    .Size(1)
                    .ShowRanges(true)
                    .MinorIntervalValue(5)
                    .Pointers(po =>
                    {
                        po.ShowBackNeedle(true)
                        .Length(90)
                        .Width(8).Add();
                    })
                    .Ranges(ran =>
                    {
                        ran.DistanceFromScale(-30).StartValue(0).EndValue(50).Add();
                        ran.DistanceFromScale(-30).StartValue(50).EndValue(80).BackgroundColor("#fc0606").Border(bor=>bor.Color("#fc0606")).Add();
                        ran.DistanceFromScale(-30).StartValue(80).EndValue(100).BackgroundColor("#f5b43f").Border(bor=>bor.Color("#f5b43f")).Add();
                    })
                    .Ticks(tic =>
                    {
                        tic.Type(CircularTickTypes.Major).Width(1).Color("#8c8c8c").Add();
                        tic.Type(CircularTickTypes.Minor).Height(7).Width(1).Color("#8c8c8c").Add();
                    })
                    .CustomLabels(cl => {
                        cl.Value("0").Color("#666666").Position(pos => pos.X(250).Y(270)).Font(fon => { fon.Size("15px").FontFamily("Segoe UI").FontStyle("Bold"); }).Add();
                        cl.Value("KM / H").Color("#666666").Position(pos => pos.X(250).Y(290)).Font(fon => { fon.Size("12px").FontFamily("Segoe UI").FontStyle("Normal"); }).Add();  
                    })
                    .Labels(lbl =>
                    {
                        lbl.Font(fnt =>
                        {
                            fnt.Size("11px")
                            .FontFamily("Segoe UI")
                            .FontStyle("Bold");
                        })
                        .DistanceFromScale(10)
                        .Color("#8c8c8c").Add();
                    })
                    .Add();
                })
                )
</div>
}

@section MetaTags{
   <meta name="description" content="This sample illustrates a speedometer in the Syncfusion ASP.NET Web Forms Circular gauge control.">
}



<script>
        var currentValue = 0;
        var isSetValue = true;
        var timer2;
        function setMeter() {
            if (isSetValue) {
                if (currentValue < 75) {
                    currentValue = currentValue + 1;
                }
                if (currentValue >= 75) {
                    isSetValue = false;
                    window.clearInterval(timer1);
                    timer2 = window.setInterval("decreaseMeter()", 70);
                }
                var speed = $("#circulargauge1").data("ejCircularGauge");
                if (speed != undefined) {
                    speed.setPointerValue(0, 0, currentValue);
                    speed.setCustomLabelValue(0, 0, currentValue.toFixed(0));
                }
            }
        }

        function decreaseMeter() {
            if (!isSetValue) {
                window.clearInterval(timer1);
                if (currentValue > 0) {
                    currentValue = currentValue - 1;
                }
                if (currentValue <= 0) {
                    isSetValue = true;
                    window.clearInterval(timer2);
                    timer1 = window.setInterval("setMeter()", 70);
                }
                var speed = $("#circulargauge1").data("ejCircularGauge");
                if (speed != undefined) {
                    speed.setPointerValue(0, 0, currentValue);
                    speed.setCustomLabelValue(0, 0, currentValue.toFixed(0));
                }
            }
        }
        var timer1;
        $(document).ready(function () {
            timer1 = window.setInterval("setMeter()", 70);
        });

    </script>




