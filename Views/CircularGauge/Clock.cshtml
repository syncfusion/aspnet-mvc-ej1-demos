@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">CircularGauge-Clock-ASP.NET MVC-SYNCFUSION</span>
	}

@section ControlsSection{
 <div align="center">
      @(Html.EJ().CircularGauge("circulargauge1")
              .IsResponsive(true)
                .BackgroundColor("transparent")
                .EnableAnimation(false)
                .ClientSideEvents(eve =>
                            eve.DrawLabels("LabelDraw").Load("loadGaugeTheme"))
                .Theme(Themes.FlatLight)
                .Scales(sc =>
                {
                    sc.StartAngle(270)
                    .SweepAngle(360)
                    .Radius(150)
                    .PointerCap(cap=>cap.Radius(10))
                    .Minimum(0)
                    .Maximum(12)
                    .MajorIntervalValue(1)
                    .MinorIntervalValue(0.2)
                    .Labels(lbl =>
                        {
                            lbl.DistanceFromScale(5)
                            .IncludeFirstValue(false)
                            .Color("#8c8c8c").Add();
                        })
                        .Ticks(tic =>
                        {
                            tic.Type(CircularTickTypes.Major).Placement(TickPlacement.Near).Height(12).Width(5).Color("#8c8c8c").Add();
                            tic.Type(CircularTickTypes.Minor).Placement(TickPlacement.Near).Height(7).Width(1).Color("#8c8c8c").Add();
                        })
                    .Pointers(po =>
                    {
                        po.Value(3).Length(70).Width(9).Add();
                        po.Value(0).Length(95).Width(9).Add();
                        po.Value(1).Length(95).Width(2).Add();
                    }).Add();
                })
                .Radius(140)
                .Height(360)
                .Width(500)
                )
</div>
}
@section MetaTags{
   <meta name="description" content="This sample illustrates a real-time clock in the Syncfusion ASP.NET Web Forms Circular gauge control.">
}



 <script>
        function LabelDraw(args) {
            if (args.labelValue == 0) {
                args.style.textValue = "";
            }
            else if (args.labelValue == 12 || args.labelValue == 3 || args.labelValue == 6 || args.labelValue == 9) {
                args.style.font = "Bold 20px Segoe UI";
            }
        }

        function setClock() {
            var estDay, estTime, estHours;
            var time = new Date();
            var utcHours = time.getUTCHours();
            var utcMinutes = time.getUTCMinutes();
            var utcSeconds = time.getUTCSeconds();
            var utcMilliseconds = time.getUTCMilliseconds();
            if (utcHours - 5 < 0) {
                estHours = (utcHours - 5 + 24);
            } else {
                estHours = (utcHours - 5); }
            if (estHours > 12) {
                estDay = "PM";
                estHours = estHours - 12;
            }
            else {
                estDay = "AM";
            }
            utcSeconds = (utcSeconds / 60) * 12;
            utcMinutes = (utcMinutes / 60) * 12 + utcSeconds / 60;
            if (estHours == 12)
                estHours = 0;
            estHours = estHours + (utcMinutes / 12) + 1;
            var estText = parseInt(estHours) == 0 ? 12 : parseInt(estHours);
            var utcmin = (parseInt(time.getUTCMinutes()) < 10) ? "0" + parseInt(time.getUTCMinutes()) : parseInt(time.getUTCMinutes());
            estTime = "EST Time : " + estText + ":" + utcmin + ":" + parseInt(time.getUTCSeconds()) + " " + estDay;
            var clockgauge = $("#circulargauge1").data("ejCircularGauge");
            if (clockgauge != undefined) {
                clockgauge.setPointerValue(0, 0, estHours);
                clockgauge.setPointerValue(0, 1, utcMinutes);
                clockgauge.setPointerValue(0, 2, utcSeconds);
            }
        }
        var timer;
        $(document).ready(function () {
            timer = window.setInterval("setClock()", 1);
        });

    </script>



