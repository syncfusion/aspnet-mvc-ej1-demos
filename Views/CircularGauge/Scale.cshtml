@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">CircularGauge-Scale-ASP.NET MVC-SYNCFUSION</span>
	}

@section ControlsSection{
 <div align="center">
 @(Html.EJ().CircularGauge("circulargaugescale")
                .BackgroundColor("transparent").EnableAnimation(false)
                     .IsResponsive(true)
                    .ClientSideEvents(cli=>cli.Load("loadGaugeTheme"))
                .Scales(sc =>
                {
                    sc.Radius(130)
                    .PointerCap(cap=>cap.Radius(10))
                    .Minimum(0)
                    .Maximum(120)
                    .MajorIntervalValue(20)
                    .MinorIntervalValue(10)
                    .ShowScaleBar(true)
                    .Size(1)
                    .ShowRanges(true)
                    .Ranges(ran =>
                    {
                        ran.Size(5).DistanceFromScale(-30).StartValue(0).EndValue(70).Add();
                        ran.Size(5).DistanceFromScale(-30).StartValue(70).EndValue(110).BackgroundColor(ConsoleColor.Red.ToString()).Border(bor=>bor.Color(ConsoleColor.Red.ToString())).Add();
                        ran.Size(5).DistanceFromScale(-30).StartValue(110).EndValue(120).BackgroundColor(ConsoleColor.Yellow.ToString()).Border(bor=>bor.Color(ConsoleColor.Yellow.ToString())).Add();
                    })
                    .Pointers(po =>
                    {
                        po.Value(60)
                        .Length(90)
                        .Width(8)
                        .ShowBackNeedle(true)
                        .BackNeedleLength(15).Add();
                    }).Add();
                })
                .Radius(140)
                .Height(360)
                .Width(500)
                )
</div>
}





@section PropertiesSection{
<div class="row">
                        <div class="col-md-3">
                            ScaleBar Size
                        </div>
                        <div class="col-md-3 aligntop">
                           @(Html.EJ().Slider("scalesize").SliderType(SlideType.MinRange).Value("1").Height("10").Width("120").MinValue(0).MaxValue(10).EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange").Slide("onchange"); }))
                        </div>
                        <div class="col-md-3">
                            Scale Radius
                        </div>
                        <div class="col-md-3 aligntop">
                           @(Html.EJ().Slider("scaleradius").SliderType(SlideType.MinRange).Value("130").Height("10").Width("120").MinValue(120).MaxValue(131).EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange").Slide("onchange"); }))
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            Border Width
                        </div>
                        <div class="col-md-3 aligntop">
                           @(Html.EJ().Slider("borderwidth").SliderType(SlideType.MinRange).Value("0.5").Height("10").Width("120").MinValue(0).MaxValue(5).EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange").Slide("onchange"); }))
                        </div>
                        <div class="col-md-3">
                            Pointer Value
                        </div>
                        <div class="col-md-3 aligntop">
                           @(Html.EJ().Slider("pointervalue").SliderType(SlideType.MinRange).Value("60").Height("10").Width("120").MinValue(0).MaxValue(120).EnableAnimation(true).ClientSideEvents(events => { events.Change("pointerchange"); }))
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            Scale Direction
                        </div>
                        <div class="col-md-3">
                            @(Html.EJ().DropDownList("scaleDirection").Datasource((IEnumerable<MVCSampleBrowser.Models.CircularGauge.Directions>)ViewBag.datasource).DropDownListFields(df => df.ID("Direction").Text("Direction").Value("Direction")).SelectedItemIndex(0).Width("120").ClientSideEvents(cli => { cli.Select("onchange"); }))
                        </div>
                    </div>
}
@section StyleSection{
<style>
        .col-md-3 .e-ddl .e-input {
            line-height:20px;
        }
    </style>

}

@section MetaTags{
   <meta name="description" content="This sample illustrates the scale of the circular gauge in the Syncfusion ASP.NET Web Forms Circular gauge control.">
}



  <script>
      $(document).ready(function () {
          $("#sampleProperties").ejPropertiesPanel();
      });
        function onchange(args) {
            var gaugeval = $("#circulargaugescale").data("ejCircularGauge");
            if (args.id == "scalesize") {
                gaugeval.setScaleBarSize(0, args.value);
            }
            else if (args.id == "scaleradius") {
                gaugeval.setScaleRadius(0, args.value);
            }
            else if (args.id == "borderwidth") {
                gaugeval.setScaleBorderWidth(0, args.value);
            }
            else if (args.text == "clockwise") {
                gaugeval.setScaleDirection(0, args.text);
            }
            else if (args.text == "counterclockwise") {
                gaugeval.setScaleDirection(0, args.text);
            }
        }

        function pointerchange(args) {
            var pointerval = $("#circulargaugescale").data("ejCircularGauge");
            pointerval.setPointerValue(0,0,args.value);
        }
    </script>




