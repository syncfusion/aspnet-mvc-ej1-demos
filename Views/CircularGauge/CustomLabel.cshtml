@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">CircularGauge-Custom Label-ASP.NET MVC-SYNCFUSION</span>
	}
@section ControlsSection{
 <div style="width:450px" id="gradientFrame" align="center">
 @(Html.EJ().CircularGauge("circularGaugeTooltip")
                    .ClientSideEvents(cli=>cli.Load("loadGaugeTheme"))
                .BackgroundColor("transparent")
                .OuterCustomLabelPosition(OuterCustomLabelPosition.Left)
                .Tooltip(ttp=>ttp.ShowCustomLabelTooltip(true))
                .Scales(sc =>
                {
                    sc.Radius(130)
                    .PointerCap(cap => cap.Radius(10))
                    .Minimum(0)
                    .Maximum(120)
                    .MajorIntervalValue(20)
                    .MinorIntervalValue(10)
                    .ShowScaleBar(true)
                    .Size(1)
                    .ShowRanges(true)
                    .CustomLabels(cl => {
                        cl.CustomLabelPositionType(CustomLabelPositionType.Inner).Color("Green").Value("KM / H").Position(pos => pos.X(180).Y(260)).Font(fon => fon.Size("14px")).Add();
                        cl.CustomLabelPositionType(CustomLabelPositionType.Outer).Color("Red").Value("Average Speed").Font(fnt => fnt.Size("20px")).Add();
                    })
                    .Ranges(ran =>
                    {
                        ran.Size(5).DistanceFromScale(-30).StartValue(0).EndValue(70).Add();
                        ran.Size(5).DistanceFromScale(-30).StartValue(70).EndValue(110).BackgroundColor(ConsoleColor.Red.ToString()).Border(bor => bor.Color(ConsoleColor.Red.ToString())).Add();
                        ran.Size(5).DistanceFromScale(-30).StartValue(110).EndValue(120).BackgroundColor(ConsoleColor.Yellow.ToString()).Border(bor => bor.Color(ConsoleColor.Yellow.ToString())).Add();
                    })
                    .Pointers(po =>
                    {
                        po.Value(60)
                        .Length(90)
                        .Width(8)
                        .ShowBackNeedle(true)
                        .BackNeedleLength(15).Add();
                    }).Add();
                })
                .Radius(140)
                )
     <div>
         <h5>Hover the mouse on custom label text</h5>
     </div>
</div>
}
@section StyleSection{

    <style>
        .col-md-3 .e-ddl .e-input
        {
            line-height: 20px;
        }
        #gradientFrame
        {
            background:none;
        }
    </style>
}
@section MetaTags{
   <meta name="description" content="This sample demonstrates the custom labels in the Syncfusion ASP.NET Web Forms Circular gauge control.">
}










