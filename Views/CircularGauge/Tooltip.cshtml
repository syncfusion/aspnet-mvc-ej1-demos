@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">CircularGauge-Tooltip-ASP.NET MVC-SYNCFUSION</span>
	}
@section ControlsSection{
 <div align="center">
         <div id="Tooltip" style="height: 60px; display: none;">
        <div id="icon">
            <div id="eficon"></div>
        </div>
        <div id="value">
            <div>
                <label id="efpercentage">&nbsp;#label#</label>
            </div>
        </div>
    </div>
@(Html.EJ().CircularGauge("circularGaugeTooltip")
    .IsResponsive(true)
                .BackgroundColor("transparent").EnableAnimation(false)
                    .ClientSideEvents(cli=>cli.Load("loadGaugeTheme"))
                .Tooltip(ttp=>ttp.ShowLabelTooltip(true).ShowCustomLabelTooltip(true).TemplateID("Tooltip"))
                .Scales(sc =>
                {
                    sc.Radius(130)
                    .PointerCap(cap => cap.Radius(10))
                    .Minimum(0)
                    .Maximum(120)
                    .MajorIntervalValue(20)
                    .MinorIntervalValue(10)
                    .ShowScaleBar(true)
                    .Size(1)
                    .ShowRanges(true)
                    .CustomLabels(cl => {
                        cl.CustomLabelPositionType(CustomLabelPositionType.Inner).Color("Red").Value("093547").Position(pos => pos.X(250).Y(230)).Font(fon=>fon.Size("20px")).Add();
                    })
                    .Ranges(ran =>
                    {
                        ran.Size(5).DistanceFromScale(-30).StartValue(0).EndValue(70).Add();
                        ran.Size(5).DistanceFromScale(-30).StartValue(70).EndValue(110).BackgroundColor(ConsoleColor.Red.ToString()).Border(bor => bor.Color(ConsoleColor.Red.ToString())).Add();
                        ran.Size(5).DistanceFromScale(-30).StartValue(110).EndValue(120).BackgroundColor(ConsoleColor.Yellow.ToString()).Border(bor => bor.Color(ConsoleColor.Yellow.ToString())).Add();
                    })
                    .Pointers(po =>
                    {
                        po.Value(60)
                        .Length(90)
                        .Width(8)
                        .ShowBackNeedle(true)
                        .BackNeedleLength(15).Add();
                    }).Add();
                })
                .Radius(140)
                .Height(360)
                .Width(500)
                )
</div>
}



@section PropertiesSection{

                    <div class="row">
                        <div class="col-md-3">
                            Enable Label tooltip
                        </div>
                        <div class="col-md-3 aligntop">
                            @Html.EJ().CheckBox("chkEnableLabelTooltip").ClientSideEvents(cli => cli.Change("onLabelTooltipChange")).Checked(true)
                        </div>
                        <div class="col-md-3">
                            Enable Custom Label tooltip
                        </div>
                        <div class="col-md-3 aligntop">
                            @Html.EJ().CheckBox("chkEnableCustomLabelTooltip").ClientSideEvents(cli => cli.Change("onCustomLabelTooltipChange")).Checked(true)
                        </div>
                    </div>



                    <div class="row">
                        <div class="col-md-3">
                            Enable tooltip template
                        </div>
                        <div class="col-md-3 aligntop">
                            @Html.EJ().CheckBox("chkEnableTooltipTemplate").ClientSideEvents(cli => cli.Change("onTooltipTemplateChange")).Checked(true)
                        </div>
                    </div>
}


@section StyleSection{

    <style type="text/css">
        .col-md-3 .e-ddl .e-input {
            line-height:20px;
        }
        label{
		margin-bottom : -25px !important ;
		text-align :center !important;
		}
        .tooltipDiv {
            background-color:#E94649;        
            color: white;
        }
        #Tooltip >div:first-child {
            float: left;
        }
        #Tooltip #value {
            float: right;
            height: 50px;
            width: auto;
            font-stretch:condensed;
            text-align:left !important;
        }
        #Tooltip #value >div {
            margin: 5px 5px 5px 5px;
            text-align:left !important;
            
        }
        #Tooltip #efpercentage {
            font-size: 20px;
            font-family: segoe ui;
			padding-left: 2px;
            width:auto;
            font-stretch:condensed;
            text-align:left !important;
        }
         #Tooltip #ef {
             font-size: 12px;
             font-family: segoe ui;
             text-align:left !important;
        }
        #eficon {
            background-image: url("../images/chart/eficon.png");
            height: 60px;
            width: 60px;
            background-repeat: no-repeat;
        }
    </style>
}
@section MetaTags{
   <meta name="description" content="This sample displays the ranges value in the tooltip of Syncfusion ASP.NET Web Forms Circular gauge control.">
}

    <script>
            $(document).ready(function () {
            $("#sampleProperties").ejPropertiesPanel();
        });
        function onLabelTooltipChange(args) {
            if (args.isChecked)
                $("#circularGaugeTooltip").ejCircularGauge("option", "tooltip", { showLabelTooltip: true });
            else
                $("#circularGaugeTooltip").ejCircularGauge("option", "tooltip", { showLabelTooltip: false });
        };
        function onCustomLabelTooltipChange(args) {
            if (args.isChecked)
                $("#circularGaugeTooltip").ejCircularGauge("option", "tooltip", { showCustomLabelTooltip: true });
            else
                $("#circularGaugeTooltip").ejCircularGauge("option", "tooltip", { showCustomLabelTooltip: false });
        };
        function onTooltipTemplateChange(args) {
            if (args.isChecked)
                $("#circularGaugeTooltip").ejCircularGauge("option", "tooltip", { templateID: "Tooltip" });
            else
                $("#circularGaugeTooltip").ejCircularGauge("option", "tooltip", { templateID: null });
        };
        </script>



