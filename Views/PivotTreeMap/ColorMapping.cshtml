@section SampleHeading{ <span class="sampleName">PivotTreeMap-Color Mapping-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot tree map describes how to differentiate the leaf nodes using various color codes.">
}

@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;
@section StyleSection{
    <style>
            #PivotTreeMap1 {
                min-height: 275px;
                min-width: 525px;
                height: 460px;
                width: 100%;
            }
           #CodeViewTab ul > li:first-child + li{
            display:none;
        }
        .row .cols-prop-area {min-height:130px!important}
        .mapping {margin-top:15px}
    </style>
}
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section ScriptSection{
<script>
    var ddlTarget, treemapTarget;
    $(function () {
        $("#mapping").ejDropDownList({
            fields: { text: "option" },
            width: "100px", selectedIndices: [0]
        });
        ddlTarget = $('#mapping').data("ejDropDownList");
        ddlTarget.selectItemByText(ddlTarget.items[0].innerHTML);
        $("#mapping").ejDropDownList("option", "change", "onTypeChange");
        renderTreeMap = $('#PivotTreeMap1').data("ejPivotTreeMap");
    });
    function onTypeChange(args) {
        treemapTarget = $('#PivotTreeMap1TreeMapContainer').data("ejTreeMap");
        treemapTarget.model.colorValuePath = "";
        treemapTarget.model.enableGradient = false;
        treemapTarget.model.showLegend = false;
        treemapTarget.model.legendSettings.leftLabel = "";
        treemapTarget.model.legendSettings.rightLabel = "";
        treemapTarget.model.rangeColorMapping = [];
        if ((!ej.isNullOrUndefined(ddlTarget)) && ddlTarget._currentText.toLocaleLowerCase() == "range") {
            treemapTarget.model.colorValuePath = "Value";
            treemapTarget.model.rangeColorMapping.push(
            { color: "#a2e2fe", from: "0", to: "10" },
            { color: "#9de24f", from: "11", to: "250" },
            { color: "#ffff66", from: "251", to: "1000" },
            { color: "#C4C24A", from: "1001", to: "3000" },
            { color: "#f6b53f", from: "3001", to: "5000" },
            { color: "#6FAAB0", from: "5001", to: "10000" },
            { color: "#FF0040", from: "10001", to: "20000" }
            )
        }
        else {
            treemapTarget.model.colorValuePath = "Index";
            treemapTarget.model.rangeColorMapping.push(
            { color: "#9de24f", from: "0", to: "0" },
            { color: "#a2e2fe", from: "1", to: "1" },
            { color: "#ffff66", from: "2", to: "2" },
            { color: "#FF0040", from: "3", to: "3" },
            { color: "#f6b53f", from: "4", to: "4" },
            { color: "#6FAAB0", from: "5", to: "5" },
            { color: "#C4C24A", from: "6", to: "6" }
            )
        }
        treemapTarget.refresh();
    }
</script>



    <!--Tooltip labels can be localized here-->
    <script id="tooltipTemplate" type="application/jsrender"> 
        <div style="background:White; color:black; font-size:12px; font-weight:normal; border: 1px solid #4D4D4D; white-space: nowrap;border-radius: 2px; margin-right: 25px; min-width: 110px;padding-right: 5px; padding-left: 5px; padding-bottom: 2px ;width: auto; height: auto;">
            <div>Measure(s) : {{:~Measures(#data)}}</div><div>Row : {{:~Row(#data)}}</div><div>Column : {{:~Column(#data)}}</div><div>Value : {{:~Value(#data)}}</div>
        </div>
    </script>  
}
@section ControlsSection{
    <div style="height:auto; min-width: 200px; width:auto ;white-space:nowrap; overflow:hidden">PivotTreeMap showingÂ customer count over different customer geographic locations across a period of fiscal years.</div>
    @Html.EJ().Pivot().PivotTreeMap("PivotTreeMap1").DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("[Date].[Fiscal]").Add(); }).Columns(columns => { columns.FieldName("[Customer].[Customer Geography]").Add(); }).Values(values => { values.Measures(measures => { measures.FieldName("[Measures].[Customer Count]").Add(); }).Axis(AxisName.Column).Add(); })
                        .Data("//bi.syncfusion.com/olap/msmdpump.dll").Catalog("Adventure Works DW 2008 SE").Cube("Adventure Works")).ClientSideEvents(oEve => { oEve.RenderSuccess("onTypeChange"); }).IsResponsive(true)
}

@section PropertiesSection{
<div class="cols-prop-area event-tracer" style=" float:left;margin-left:20px;width: 230px;">
    <div>
        <div class="heading">
            <span>Properties</span>
        </div>
        <div class="prop-grid content" style="padding-top:8px">
            <div class="mapping">
                <div class="row" style="float:left;padding:4px;line-height: 25px;">
                    Color Mapping
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <select id="mapping">
                            <option value="normal">Normal</option>
                            <option value="range">Range</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}

