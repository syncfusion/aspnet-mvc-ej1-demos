@section MetaTags{
   <meta name="description" content="This example demonstrates how to enable the spell check for the content in a ASP.NET MVC RichTextEditor control."" >
}

@section SampleHeading{ <span class="sampleName">RTE-RTESpellcheck-ASP.NET MVC-SYNCFUSION</span>}
@section ControlsSection{

    <div style="height: 440px">
        @{List<String> toolsList = new List<string>() { "customTools" }; }


        @{Html.EJ().RTE("rteSample").ContentTemplate(@<div>
            <p><b>Description:</b></p>
        <p>The Rich Text Editor (RTE) control is an easy to render in
        client side. Customer easy to edit the contents and get the HTML content for
        the displayed content. A rich text editor control provides users with a toolbar
        that helps them to apply rich text formats to the text entered in the text
        area. </p>
       <p><b>Functional
        Specifications/Requirements:</b></p>
        <ol><li><p>Provide
        the tool bar support, itâ€™s also customizable.</p></li><li><p>Options
        to get the HTML elements with styles.</p></li><li><p>Support
        to insert image from a defined path.</p></li><li><p>Footer
        elements and styles(tag / Element information , Action button (Upload, Cancel))</p></li><li><p>Re-size
        the editor support.</p></li><li><p>Provide
        efficient public methods and client side events.</p></li><li><p>Keyboard
        navigation support.</p></li></ol>
        </div>).MinWidth("100px").Width("100%").ToolsList(toolsList).Tools(tool => tool.CustomTools(custom =>
        custom.Name("dialog").Tooltip("Click to SpellCheck").Css("RTESpellcheck e-rte-toolbar-icon e-spell").Action("showDialog").Add())).ExternalCSS(Url.Content("~/Content/RTE_spellcheck.css")).Render();}

        @{Html.EJ().SpellCheck("rteSample_Iframe").DictionarySettings(dic => dic.CustomDictionaryUrl("../api/SpellCheck/AddToDictionary").DictionaryUrl("../api/SpellCheck/CheckWords")).ContextMenuSettings(e => e.Enable(true)).EnableValidateOnType(true).AjaxDataType("json").EnableAsync(false).ClientSideEvents(evt => evt.DialogBeforeOpen("dialogBeforeOpen").ContextOpen("contextOpen").ActionSuccess("actionSuccess").Validating("validating").Start("start").ActionBegin("begin")).Render();}


    </div>

}
@section ScriptSection{
    <script type="text/javascript">
        function showDialog() {
            var spellObj = $("#rteSample_Iframe").data("ejSpellCheck");
            spellObj.showInDialog();
        }
        function dialogBeforeOpen(args) {
            if (args.requestType === "alertBeforeOpen") {
                args.cancel = true;
            }
        }
        function contextOpen(args){
            args.cancel = true;
        }
         function actionSuccess(args) {   
            if (args.requestType === "addToDictionary") {
                var rteObj = $("#rteSample").data("ejRTE");
                rteObj.setHtml(args.resultHTML);
            }
        }
    </script>
} 

@section StyleSection{

    <style>
    .e-rte-toolbar-icon.e-spell {
         background: url(../../Content/images/RTE/Icon_Spellchecker.svg) no-repeat;
        background-position: 3px 5px;
    }
    </style>

}

