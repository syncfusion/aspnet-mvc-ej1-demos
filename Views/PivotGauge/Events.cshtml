@section SampleHeading{ <span class="sampleName">PivotGauge-Events-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot gauge control demonstrates the events that are triggered during the rendering operation">
}
@using Syncfusion.JavaScript;


@section StyleSection{
    <style>
		#PivotGauge1 {
            height: 350px;
            width: 100%;
            float: left;
            overflow: auto;
        }

        .row .cols-sample-area {
            width: 72%;
        }

        .row .cols-prop-area {
            width: 25%;
        }
        .EventLog {
            height: 300px !important;
        }
        .circulardarkgradient, .circularlightgradient
        {
            width: 360px;
            position: relative;
        }
           #CodeViewTab ul > li:first-child + li{
            display:none;
        }
    </style>
}
@section ScriptReferenceSection{
<script src="@Url.Content("~/Scripts/excanvas.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section ScriptSection{
    <script>
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
        });
    function onClientSuccess() {
            jQuery.addEventLog("Gauge rendering succeeded");
        }
        function onLabelDraw(args) {
            jQuery.addEventLog("Label drawn for " + this._id + " Label value: " + args.pointerValue);
        }
        function onClear() {
            jQuery.clearEventLog();
        }
        function onLoad(args) {
            args.model.dataSource.rows[0].filterItems = { values: ["[Date].[Fiscal].[Fiscal Year].&amp;[2004]"] };
        }
        </script>
}

@section ControlsSection{
@Html.EJ().Pivot().PivotGauge("PivotGauge1").DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("[Date].[Fiscal]").Add(); }).Columns(columns => { columns.FieldName("[Customer].[Customer Geography]").Add(); }).Values(values => { values.Measures(measures => { measures.FieldName("[Measures].[Internet Sales Amount]").Add(); measures.FieldName("[Measures].[Internet Revenue Status]").Add(); measures.FieldName("[Measures].[Internet Revenue Trend]").Add(); measures.FieldName("[Measures].[Internet Revenue Goal]").Add(); }).Axis(AxisName.Column).Add(); })
    .Data("//bi.syncfusion.com/olap/msmdpump.dll").Catalog("Adventure Works DW 2008 SE").Cube("Adventure Works")).IsResponsive(true).BackgroundColor("transparent").ClientSideEvents(oCli => { oCli.RenderSuccess("loadPivotGaugeTheme"); oCli.Load("onLoad"); }).EnableTooltip(true).Scales(scale =>
{
    scale.ShowRanges(true).Radius(150).ShowScaleBar(true).Size(1).Border(bor => bor.Width(0.5)).ShowIndicators(true).ShowLabels(true).
        Pointers(pointer =>
        {
            pointer.ShowBackNeedle(true).BackNeedleLength(20).Length(120).Width(7).Add();
			pointer.Type(PointerType.Marker).DistanceFromScale(5).Placement(PointerPlacement.Center).BackgroundColor("#29A4D9").Length(25).Width(15).MarkerType(MarkerType.Diamond).Add();
        }).
    Ticks(ticks =>
    {
        ticks.Type(CircularTickTypes.Major).DistanceFromScale(2).Height(16).Width(1).Color("#8c8c8c").Add();
        ticks.Type(CircularTickTypes.Minor).Height(6).Width(1).DistanceFromScale(2).Color("#8c8c8c").Add();
    })
    .Labels(labels => { labels.Color("#8c8c8c").Add(); })
    .Ranges(ranges =>
    {
        ranges.DistanceFromScale(-5).BackgroundColor("#fc0606").Border(bor => bor.Color("#fc0606")).Add();
        ranges.DistanceFromScale(-5).Add();
    })
    .CustomLabels(customLabel =>
    {
        customLabel.Position(location => location.X(180).Y(290)).Font(font => font.Size("10px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
        customLabel.Position(location => location.X(180).Y(320)).Font(font => font.Size("10px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
        customLabel.Position(location => location.X(180).Y(150)).Font(font => font.Size("12px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
    }).Add();
}).ClientSideEvents(events => { events.RenderSuccess("onClientSuccess").DrawLabels("onLabelDraw").RenderSuccess("loadPivotGaugeTheme"); }).IsResponsive(true).LabelFormatSettings(labelFormatSettings => labelFormatSettings.DecimalPlaces(2))
}

@section PropertiesSection{
							<div class="EventLog" id="EventLog"></div>						
						<div class="evtbtn">
							<input type="button" class="eventclear e-btn" value="Clear" onclick="onClear()" />
						</div>				
    }


