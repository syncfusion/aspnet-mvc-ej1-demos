@section SampleHeading{
    <span class="sampleName">PivotGauge-Layout Options-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot gauge control describes options such as frame type and header labels to customize control layout.">
}
@using Syncfusion.JavaScript;
@section StyleSection{
    <style>
        .cols-sample-area
        {
            height:450px;
            width:69% !important;
            overflow: auto;
        }
        .drop-down {
            line-height:20px !important;
        }
         .row .cols-prop-area  {
            min-height: 216px;
            width:27%;
        }
        #check1, #check2
        {
            visibility:hidden;
        }

        #PivotGauge1 {
            width: 100%;
            height: 360px;
            float: left;
            overflow: auto;
        }

        .circulardarkgradient, .circularlightgradient
        {
            width: 360px;
            position: relative;
        }
           #CodeViewTab ul > li:first-child + li{
            display:none;
        }
    </style>
}
@section ScriptReferenceSection{
<script src="@Url.Content("~/Scripts/excanvas.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section ScriptSection{
    <script>
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
        });
        var rows = [{ option: "1", value: "1" }, { option: "2", value: "2" }, { option: "3", value: "3" }];
        var frames = [{ option: "Full - Circular", value: "Full - Circular" }, { option: "Semi - Circular", value: "Semi - Circular" }];
        $(function () {
            $("#check1").ejCheckBox({ change: "onchange", checked: true });
            $("#check2").ejCheckBox({ change: "onchange", checked: true });
            $('#frameType').ejDropDownList({
                dataSource: frames,
                fields: { text: "option", value: "value" },
                select: "onchange", width: "110px", selectedItemIndex: 0
            });

            $('#rowscount').ejDropDownList({
                dataSource: rows,
                fields: { text: "option", value: "value" },
                width: "60px", selectedIndices : [1] 
            });
            $('#columnscount').ejDropDownList({
                dataSource: rows,
                fields: { text: "option", value: "value" },
                width: "60px", selectedIndices : [2]
            });
            var ddlTarget = $('#columnscount').data("ejDropDownList");
            $("#columnscount").ejDropDownList("option", "change", "onchange1");
            var ddlTarget1 = $('#rowscount').data("ejDropDownList");
            $("#rowscount").ejDropDownList("option", "change", "onchange1");
        });
        function onchange1(args) {
            pivotGauge = $("#PivotGauge1").data("ejPivotGauge");
            rowsCount = $("#rowscount").data("ejDropDownList");
            columnsCount = $("#columnscount").data("ejDropDownList");
            if (this._id == "rowscount" && (args.text != "0" || (columnsCount != undefined && columnsCount.model.text != 0))) {
                pivotGauge.model.rowsCount = args.text;
                pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
            }
            else if (this._id == "columnscount" && (args.text != "0" || rowsCount.model.text != 0)) {
                pivotGauge.model.columnsCount = args.text;
                pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
            }
            else if (args.text == "0" && (columnsCount != undefined && columnsCount.model.text == 0) && (rowsCount != undefined && rowsCount.model.text == 0)) {
                pivotGauge.model.columnsCount = 0;
                pivotGauge.model.rowsCount = 0;
                if (pivotGauge.getJSONRecords())
                    pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
            }
        }

        function onchange(args) {
            pivotGauge = $("#PivotGauge1").data("ejPivotGauge");
            if (this._id == "frameType") {
                if (args.type == "select" && args.text == "Semi - Circular") {
                    pivotGauge.model.frame.frameType = "halfcircle";
                    pivotGauge.model.frame.halfCircleFrameStartAngle = 180;
                    pivotGauge.model.scales[0].startAngle = 180;
                    pivotGauge.model.scales[0].sweepAngle = 180;
                    pivotGauge.model.scales[0].customLabels[2].position.y = 210
                    pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
                }
                else {
                    pivotGauge.model.frame.frameType = "fullcircle";
                    pivotGauge.model.scales[0].startAngle = 122;
                    pivotGauge.model.scales[0].sweepAngle = 296;
                    pivotGauge.model.scales[0].customLabels[2].position.y = 150
                    pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
                }
            }
            if (this._id == "check1" && !args.model.checked) {
                pivotGauge.model.enableTooltip = false;
                pivotGauge.refresh();
            }
            else if (this._id == "check1" && args.model.checked) {
                pivotGauge.model.enableTooltip = true;
                pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
            }
            else if (this._id == "check2" && !args.model.checked) {
                pivotGauge.model.showHeaderLabel = false;
                pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
            }
            else if (this._id == "check2" && args.model.checked) {
                pivotGauge.model.showHeaderLabel = true;
                pivotGauge._renderControlSuccess({ "PivotRecords": JSON.stringify(pivotGauge.getJSONRecords()), "OlapReport": pivotGauge.getOlapReport() });
            }
        }
        function onLoad(args) {
            args.model.dataSource.rows[0].filterItems = { values: ["[Date].[Fiscal].[Fiscal Year].&amp;[2004]"] };
        }
    </script>
}
@section ControlsSection{
@Html.EJ().Pivot().PivotGauge("PivotGauge1").DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("[Date].[Fiscal]").Add(); }).Columns(columns => { columns.FieldName("[Customer].[Customer Geography]").Add(); }).Values(values => { values.Measures(measures => { measures.FieldName("[Measures].[Internet Sales Amount]").Add(); measures.FieldName("[Measures].[Internet Revenue Status]").Add(); measures.FieldName("[Measures].[Internet Revenue Trend]").Add(); measures.FieldName("[Measures].[Internet Revenue Goal]").Add(); }).Axis(AxisName.Column).Add(); })
    .Data("//bi.syncfusion.com/olap/msmdpump.dll").Catalog("Adventure Works DW 2008 SE").Cube("Adventure Works")).IsResponsive(true).BackgroundColor("transparent").ClientSideEvents(oCli => { oCli.RenderSuccess("loadPivotGaugeTheme"); oCli.Load("onLoad"); }).EnableTooltip(true).Scales(scale =>
{
    scale.ShowRanges(true).Radius(150).ShowScaleBar(true).Size(1).Border(bor => bor.Width(0.5)).ShowIndicators(true).ShowLabels(true).
        Pointers(pointer =>
        {
            pointer.ShowBackNeedle(true).BackNeedleLength(20).Length(120).Width(7).Add();
			pointer.Type(PointerType.Marker).DistanceFromScale(5).Placement(PointerPlacement.Center).BackgroundColor("#29A4D9").Length(25).Width(15).MarkerType(MarkerType.Diamond).Add();
        }).
    Ticks(ticks =>
    {
        ticks.Type(CircularTickTypes.Major).DistanceFromScale(2).Height(16).Width(1).Color("#8c8c8c").Add();
        ticks.Type(CircularTickTypes.Minor).Height(6).Width(1).DistanceFromScale(2).Color("#8c8c8c").Add();
    })
    .Labels(labels => { labels.Color("#8c8c8c").Add(); })
    .Ranges(ranges =>
    {
        ranges.DistanceFromScale(-5).BackgroundColor("#fc0606").Border(bor => bor.Color("#fc0606")).Add();
        ranges.DistanceFromScale(-5).Add();
    })
    .CustomLabels(customLabel =>
    {
        customLabel.Position(location => location.X(180).Y(290)).Font(font => font.Size("10px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
        customLabel.Position(location => location.X(180).Y(320)).Font(font => font.Size("10px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
        customLabel.Position(location => location.X(180).Y(150)).Font(font => font.Size("12px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
    }).Add();
}).ClientSideEvents(oCli => { oCli.RenderSuccess("loadPivotGaugeTheme"); }).IsResponsive(true).LabelFormatSettings(labelFormatSettings => labelFormatSettings.DecimalPlaces(2))
}
@section PropertiesSection{
                <div class="row">
                    <div class="col-md-3"style="width:120px">
                        Show Tooltip
                    </div>
                    <div class="col-md-3 aligntop" style="width:120px">
                        @Html.EJ().CheckBox("check1").ClientSideEvents(c => c.Change("onchange")).Checked(true)
                    </div>
                    <div class="col-md-3"style="width:120px">
                        Show Header Labels
                    </div>
                    <div class="col-md-3 aligntop" style="width:120px">
                        @Html.EJ().CheckBox("check2").ClientSideEvents(c => c.Change("onchange")).Checked(true)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        Frame Type
                    </div>
                    <div class="col-md-3" style="margin-top: 8px;">
                        <input type="text" id="frameType" />
                    </div>
                    </div>
                <div class="row">
                    <div class="col-md-3" style="line-height: 2;width:120px">
                        Rows Count
                    </div>
                    <div class="col-md-3" style="margin-top: 4px">
                        <input type="text" id="rowscount" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3" style="margin-top: 11px;width:120px">
                        Columns Count
                    </div>
                    <div class="col-md-3 aligntop"style="width:120px">
                        <input type="text" id="columnscount" />
                    </div>
                </div>
}

