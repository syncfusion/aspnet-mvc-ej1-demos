@section SampleHeading{ <span class="sampleName">PivotGauge-WCF-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot gauge control shows how to bind the OLAP cube data from SSAS (XML/A) through WCF service">
}
@using Syncfusion.JavaScript;

@section StyleSection{
    <style>
        #PivotGauge1 {
            height: 350px;
            width: 100%;
            float: left;
            overflow: auto;
        }

        .row .cols-prop-area {
            min-height: 220px;
            width: 25%;
        }

        .row .cols-sample-area {
            width: 72%;
        }

        .circulardarkgradient, .circularlightgradient {
            width: 360px;
            position: relative;
        }
           #CodeViewTab ul > li:first-child + li{
            display:none;
        }
    </style>
}

@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}

@section ControlsSection{
    @Html.EJ().Pivot().PivotGauge("PivotGauge1").Url("../wcf/OlapGaugeService.svc").IsResponsive(true).BackgroundColor("transparent").EnableTooltip(true).Scales(scale =>
{
    scale.ShowRanges(true).Radius(150).ShowScaleBar(true).Size(1).Border(bor => bor.Width(0.5)).ShowIndicators(true).ShowLabels(true).
        Pointers(pointer =>
        {
            pointer.ShowBackNeedle(true).BackNeedleLength(20).Length(120).Width(7).Add();
            pointer.Type(PointerType.Marker).DistanceFromScale(5).Placement(PointerPlacement.Center).BackgroundColor("#29A4D9").Length(25).Width(15).MarkerType(MarkerType.Diamond).Add();
        }).
    Ticks(ticks =>
    {
        ticks.Type(CircularTickTypes.Major).DistanceFromScale(2).Height(16).Width(1).Color("#8c8c8c").Add();
        ticks.Type(CircularTickTypes.Minor).Height(6).Width(1).DistanceFromScale(2).Color("#8c8c8c").Add();
    })
    .Labels(labels => { labels.Color("#8c8c8c").Add(); })
    .Ranges(ranges =>
    {
        ranges.DistanceFromScale(-5).BackgroundColor("#fc0606").Border(bor => bor.Color("#fc0606")).Add();
        ranges.DistanceFromScale(-5).Add();
    })
    .CustomLabels(customLabel =>
    {
        customLabel.Position(location => location.X(180).Y(290)).Font(font => font.Size("10px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
        customLabel.Position(location => location.X(180).Y(320)).Font(font => font.Size("10px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
        customLabel.Position(location => location.X(180).Y(150)).Font(font => font.Size("12px").FontFamily("Segoe UI").FontStyle("Normal")).Color("#666666").Add();
    }).Add();
}).ClientSideEvents(oCli => { oCli.RenderSuccess("loadPivotGaugeTheme"); }).LabelFormatSettings(labelFormatSettings=> labelFormatSettings.DecimalPlaces(2))
}

