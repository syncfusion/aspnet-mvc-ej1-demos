@section SampleHeading{<span class="sampleName">Spreadsheet-FIFA Template-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
   <meta name="description" content="This demo shows templates using  Syncfusion ASP.NET MVC Spreadsheet control">
}

<link href="@Url.Content("~/Content/Samples/SpreadsheetStyles.css")" rel="stylesheet" />
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
}
@section ControlsSection{
    @(Html.EJ().Spreadsheet<object>("Spreadsheet")
    .SheetCount(4)
    .AllowFormulaBar(false)
    .AllowFreezing(true)
    .ScrollSettings(scroll =>
    {
        scroll.Height(540);
    })
	.ImportSettings(import =>
    {
        import.ImportMapper("Import");
    })
    .ExportSettings(export => export.AllowExporting(false))
    .Sheets(sheet =>
    {
        sheet.RangeSettings(range =>
        {
            range.Datasource((IEnumerable<object>)ViewBag.Datasource[0]).StartCell("B7").ShowHeader(false).Add();
        }).ShowGridlines(false).Add();
        sheet.RangeSettings(range =>
        {
            range.Datasource((IEnumerable<object>)ViewBag.Datasource[1]).StartCell("A4").ShowHeader(false).Add();
	}).ShowGridlines(false).Add();
	sheet.RangeSettings(range =>
        {
            range.Datasource((IEnumerable<object>)ViewBag.Datasource[2]).StartCell("B4").ShowHeader(false).Add();
	}).ShowGridlines(false).Add();
	sheet.RangeSettings(range =>
        {
            range.Datasource((IEnumerable<object>)ViewBag.Datasource[3]).StartCell("B4").ShowHeader(false).Add();
        }).ShowGridlines(false).Add();        
    })
    .ClientSideEvents(events => events.LoadComplete("loadComplete").OpenFailure("openfailure").ActionBegin("actionBegin"))
    )
}
@section ScriptSection{
    <script type="text/javascript">

        function loadComplete(args) {
		if (this.model.isImport)
			return;
            var i,xlFormat=this.XLFormat,sheetIdx = 1, bcolor = "#F2F2F2", hbcolor = "#FFFFFF", hstyle = { "font-weight": "bold", "color": "#000000", "text-align": "center" }, formatName = ["TableStyleLight8", "TableStyleLight9", "TableStyleLight10", "TableStyleLight12"], formatObj = [], xlFormat = xlFormat;
            for (i = 0; i < formatName.length; i++)
                formatObj[i] = { "header": true, "name": "Table" + (i + 1), "formatName": formatName[i], hideTab: true };
            this.setWidthToColumns([ 55, 200, 80, 80, 180, 200, 80 ]);
            xlFormat.format({ "style": { "background-color": bcolor } }, "B8:G71");
            xlFormat.format({ "style": { "background-color": "#3b2f8d" } }, "B1:G6");            
            this.XLShape.setPicture('B1', "../images/spreadsheet/fifa.png", 817, 117);
            xlFormat.format({ "style": { "font-weight": "bold" } }, "B8:B71");
            xlFormat.format({ "style": { "color": "#996600" } }, "C8:C71");
            xlFormat.format({ "style": { "color": "#3333FF" } }, "D8:D71");
            this.XLFreeze.freezeRows(7);
            xlFormat.createTable(formatObj[0], "B7:G71");
            sheetIdx = 2;             //sheet 2
            this.gotoPage(sheetIdx, false);
            this.setWidthToColumns([ 42, 130, 50, 82, 50, 62 ]);
            xlFormat.format({ "style": { "background-color": bcolor } }, "A5:F19");
            this.mergeCells("B2:E2", true);
            this.XLEdit.updateValue("B2", "TOP GOAL SCORERS");
            xlFormat.format({ "style": hstyle }, "B2:B2");
            xlFormat.format({ "style": { "text-align": "center" } }, "A5:A19");
            xlFormat.format({ "style": { "text-align": "center" } }, "C5:C19");
            xlFormat.createTable(formatObj[1], "A4:F19");
            this.XLSelection.selectRange("H4");
            this.XLChart.createChart("B5:C19", { type: "bar", enable3D: false, marker: { visible: false }, top: 61, left: 600, hideTab: true });
            sheetIdx = 3;            //sheet 3
            this.gotoPage(sheetIdx, false);            
            this.setWidthToColumns([75, 100, 195, 175, 235, 100, 75 ]);
            xlFormat.format({ "style": { "background-color": bcolor } }, "B5:F42");          
            xlFormat.format({ "style": { "text-align": "center" } }, "B5:B45");
            xlFormat.format({ "style": { "background-color": "#ca6828" } }, "B1:F3");
            this.XLShape.setPicture('B1', "../images/spreadsheet/m-o-m.png", 803, 117);
            this.XLResize.setRowHeight(0, 81);            
            this.XLFreeze.freezeRows(4);
            xlFormat.createTable(formatObj[2], "B4:F42");
            sheetIdx = 4;            //sheet 4
            this.gotoPage(sheetIdx, false);
            this.setWidthToColumns([ 70, 95, 133, 100, 100, 110, 132, 135, 70 ]);
            xlFormat.format({ "style": { "background-color": bcolor } }, "B5:H36");
            this.XLShape.setPicture('B1', "../images/spreadsheet/rankings.png", 803, 117);
            this.XLResize.setRowHeight(0, 81);
            xlFormat.format({ "style": { "text-align": "center" } }, "B5:B36");
            xlFormat.format({ "style": { "background-color": "#f7971d" } }, "B1:H3");
            this.XLFreeze.freezeRows(4);
            xlFormat.createTable(formatObj[3], "B4:H36");
            this.gotoPage(1, false);
            this.performSelection("B8");
        }

        function actionBegin(args) {
            if (args.reqType === "gotoSheet" && !args.newSheet) {
                var charts, len, i = 0, xlObj = $("#Spreadsheet").data("ejSpreadsheet");
                charts = xlObj.getSheetElement(args.gotoIndex).find(".e-datavisualization-chart");
                len = charts.length;
                while (i < len) {
                    $(charts[i]).ejChart("redraw");
                    i++;
                }
            }
        }

        function openfailure(args) {
            var xlObj = $("#Spreadsheet").data("ejSpreadsheet");
            xlObj.alert(args.statusText);
        }

    </script>
}

