@section MetaTags{
   <meta name="description" content="This sample demonstrates the various client side events like created, select, change, open and close events etc in a ASP.NET MVC ComboBox control.">
}

@section SampleHeading{
    <span class="sampleName">ComboBox-Events-ASP.NET MVC-SYNCFUSION</span>}
@section ControlsSection{
    <div class="frame">
        <div class="control">
            @{
                Html.EJ()
                    .ComboBox("selectColor")
                    .Width("100%")
                    .Datasource((IEnumerable<Colors>)ViewBag.datasource)
                    .ComboBoxFields(f=>f.Text("text"))
                    .ClientSideEvents(e => e.Create("onCreate")
                        .Change("onChange")
                        .Focus("onFocus")
                        .Blur("onBlur")
                        .Select("onSelect")
                        .Open("onOpen")
                        .Close("onClose"))
                    .Placeholder("Choose a color")
                    .Render();
            }
        </div>
    </div>
}
@section EventsDropdown{
    @{
        Html.EJ()
            .DropDownList("selectControls_input")
            .TargetID("evntname")
            .ShowCheckbox(true)
            .CheckAll(true)
            .ClientSideEvents(e => e.Change("evtpropscheckedevent"))
            .Render();
    }
    <div id="evntname">
        <ul>
            <li>focus</li>
            <li>blur</li>
            <li>select</li>
            <li>change</li>
            <li>open</li>
            <li>close</li>
        </ul>
    </div>
}
@section ScriptSection{
    <script type="text/javascript" class="jsScript">
        var comboboxObj;
        function evtpropscheckedevent(args) {
            comboboxObj = $("#selectColor").data("ejComboBox");
            if (args.isChecked) {
                switch (args.selectedText) {
                    case "focus": comboboxObj.option(args.selectedText, "onFocus"); break;
                    case "blur": comboboxObj.option(args.selectedText, "onBlur"); break;
                    case "select": comboboxObj.option(args.selectedText, "onSelect"); break;
                    case "change": comboboxObj.option(args.selectedText, "onChange"); break;
                    case "open": comboboxObj.option(args.selectedText, "onOpen"); break;
                    case "close": comboboxObj.option(args.selectedText, "onClose"); break;
                }
            }
            else comboboxObj.option(args.selectedText, null);
        }
        // Client side Events
        function onCreate(args) {
            jQuery.addEventLog("ComboBox has been <span class='eventTitle'>created</span>.");
        }
        function onFocus(args) {
            jQuery.addEventLog("ComboBox  is in <span class='eventTitle'>focus</span>. ");
        }
        function onBlur(args) {
            jQuery.addEventLog("ComboBox  is out of <span class='eventTitle'>focus</span>.");
        }
        function onSelect(args) {
            jQuery.addEventLog("The value '" + args.value + "' has been <span class='eventTitle'>selected</span>.");
        }
        function onChange(args) {
            jQuery.addEventLog("The value has been <span class='eventTitle'>changed</span> to '" + args.value + "'.");
        }
        function onOpen(args) {
            jQuery.addEventLog("Suggestion List has been <span class='eventTitle'>opened</span>.");
        }
        function onClose(args) {
            jQuery.addEventLog("Suggestion List has been <span class='eventTitle'>closed</span>.");
        }
        function onClear() {
            jQuery.clearEventLog();
        }
    </script>
}

