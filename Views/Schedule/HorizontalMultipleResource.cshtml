@section MetaTags{
    <meta name="description" content="This example shows how grouping resource calendars in timeline views works in the ASP.NET MVC Scheduler.">
}
@section SampleHeading{<span class="sampleName">Schedule-Timeline View-ASP.NET MVC-SYNCFUSION</span>}
@section ControlsSection{
    <div>
        @(Html.EJ().Schedule("Schedule1")
        .Width("100%")
        .Height("525px")
        .CellWidth("40px")
        .Orientation(Orientation.Horizontal)
        .ShowCurrentTimeIndicator(false)
        .CurrentDate(new DateTime(2017, 6, 5))
        .Resources(res=> {
            res.Field("OwnerId").Title("Owner").Name("Owners").AllowMultiple(true)
            .ResourceSettings(flds => flds.Datasource((IEnumerable)ViewBag.Owners).Text("text").Id("id").Color("color")).Add();
        })
        .Group(gr=> {
            gr.Resources(ViewBag.Resources);
        })
        .AppointmentSettings(fields => fields.Datasource((IEnumerable)ViewBag.datasource)
            .Id("Id")
            .Subject("Subject")
            .StartTime("StartTime")
            .EndTime("EndTime")
            .Description("Description")
            .AllDay("AllDay")
            .Recurrence("Recurrence")
            .RecurrenceRule("RecurrenceRule")
            .ResourceFields("OwnerId"))

        )
    </div>
    </br>
    <div id="sampleProperties">
        <div class="prop-grid">
            <div class="row">
                <div class="col-md-3">
                    <label style="font-weight:700">Add/Remove resources</label>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.EJ().CheckBox("nancy").Checked(true).ClientSideEvents(eve => { eve.Change("onChange"); })
                    <span>Nancy</span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.EJ().CheckBox("steven").Checked(true).ClientSideEvents(eve => { eve.Change("onChange"); })
                    <span>Steven</span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.EJ().CheckBox("michael").Checked(true).ClientSideEvents(eve => { eve.Change("onChange"); })
                    <span>Michael</span>
                </div>
            </div>
        </div>
    </div>
}
@section ScriptSection{
    <script>
        $(document).ready(function () {
            $("#sampleProperties").ejPropertiesPanel();
        });
        function onChange(args) {
            var obj, resId, index;
            var schObj = $("#Schedule1").data("ejSchedule");
            switch (args.model.id) {
                case "nancy":
                    obj = { text: "Nancy", id: 1, groupId: 1, color: "#f8a398" };
                    resId = 1;
                    index = 0;
                    break;
                case "steven":
                    obj = { text: "Steven", id: 3, groupId: 2, color: "#56ca85" };
                    resId = 3;
                    index = 1;
                    break;
                case "michael":
                    obj = { text: "Michael", id: 5, groupId: 1, color: "#51a0ed" };
                    resId = 5;
                    index = 2;
                    break;
            }
            if (args.isChecked) {
                schObj.addResource(obj, "Owners", index);
            } else {
                schObj.removeResource(resId, "Owners");
            }
        }
    </script>
    <style>
        #ejnancy div > span.e-chk-act > span.e-icon.e-checkmark {
            background: #f8a398;
            color: white;
        }

        #ejsteven div > span.e-chk-act > span.e-icon.e-checkmark {
            background: #56ca85;
            color: white;
        }

        #ejmichael div > span.e-chk-act > span.e-icon.e-checkmark {
            background: #51a0ed;
            color: white;
        }

        .row .cols-prop-area {
            margin-left: 0px;
            width: 100%;
        }
    </style>
}


