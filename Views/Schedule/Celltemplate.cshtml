@section MetaTags{
    <meta name="description" content="This example shows how the ASP.NET MVC Scheduler cells can be customized with templates.">
}
@section SampleHeading{<span class="sampleName">Schedule-Cell-ASP.NET MVC-SYNCFUSION</span>}

@using Syncfusion.JavaScript.Models;
@{
    List<ResourceFields> Room = new List<ResourceFields>();
    Room.Add(new ResourceFields { Text = "Star Hotel", Id = "1", Color = "#cb6bb2" });

    List<ResourceFields> Owner = new List<ResourceFields>();
    Owner.Add(new ResourceFields { Text = "Party Hall-A", Id = "1", GroupId = "1", Color = "#ffaa00" });
    Owner.Add(new ResourceFields { Text = "Party Hall-B", Id = "3", GroupId = "1", Color = "#f8a398" });

    List<String> Resources = new List<String>();
    Resources.Add("Rooms");
    Resources.Add("Owners");

    List<string> view = new List<string>() { "Week", "Month" };
}
@section ControlsSection{
    <div>
        @(Html.EJ().Schedule("Schedule1")
        .Width("100%")
        .Height("525px")
        .Views(view)
        .CurrentDate(new DateTime(2017, 12, 10))
        .CurrentView(CurrentView.Month)
        .ShowAppointmentNavigator(false)
        .WorkCellsTemplateId("#workTemplate")
        .Resources(res =>
        {
            res.Field("RoomId").Title("Room").Name("Rooms").AllowMultiple(false).ResourceSettings(flds => flds.Datasource(Room).Text("Text").Id("Id").Color("Color")).Add();
            res.Field("OwnerId").Title("Owner").Name("Owners").AllowMultiple(true).ResourceSettings(flds => flds.Datasource(Owner).Text("Text").Id("Id").GroupId("GroupId").Color("Color")).Add();
        })
        .Group(gr => { gr.Resources(Resources); })
        .AppointmentSettings(fields => fields.Datasource((IEnumerable)ViewBag.datasource)
            .Id("Id")
            .Subject("Subject")
            .StartTime("StartTime")
            .EndTime("EndTime")
            .Description("Description")
            .AllDay("AllDay")
            .Recurrence("Recurrence")
            .RecurrenceRule("RecurrenceRule")
            .ResourceFields("RoomId,OwnerId"))

        )
    </div>
}
<div id="orientation1">
    <ul>
        <li>Vertical</li>
        <li>Horizontal</li>
    </ul>
</div>
@section TemplateSection{
    <div class="row">
        <div class="col-md-3">Orientation</div>
        <div class="col-md-3">
            @Html.EJ().DropDownList("orientation").TargetID("orientation1").Width("100px").SelectedItemIndex(0).ClientSideEvents(evt => evt.Change("onOrientation"))
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-md-3">Disable TimeScale</div>
        <div class="col-md-3">
            @Html.EJ().CheckBox("timescale").Checked(false).ClientSideEvents(eve => { eve.Change("onTimeScale"); })
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-md-3">AllDayCells Customization</div>
        <div class="col-md-3">
            @Html.EJ().CheckBox("allDayCells").Checked(false).ClientSideEvents(eve => { eve.Change("onAllDayCells"); })
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-md-3">DateHeader Customization</div>
        <div class="col-md-3">
            @Html.EJ().CheckBox("dateHeader").Checked(false).ClientSideEvents(eve => { eve.Change("onDateHeader"); })
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-md-3">WorkCells Customization</div>
        <div class="col-md-3">
            @Html.EJ().CheckBox("workCells").Checked(true).ClientSideEvents(eve => { eve.Change("onWorkCells"); })
        </div>
    </div>
}

@section StyleSection {
    <style>
        div.image {
            text-align: center;
            width: 100%;
        }

        img {
            width: 30px;
            height: 30px;
            opacity: 0.5;
        }

        .caption {
            display: block;
            opacity: 0.5;
            overflow: hidden;
			text-overflow: ellipsis; 
			height: 18px;
        }
    </style>
}

@section ScriptSection{
    <script id="allDayTemplate" type="text/x-jsrender">
        <div class="e-icon e-scheduleallday" style="opacity:0.5"></div>
        <span style="opacity:0.5">AllDay</span>
    </script>
    <script id="dateTemplate" type="text/x-jsrender">
        <div>{{:~dTemplate(date)}}</div>
    </script>
    <script id="workTemplate" type="text/x-jsrender">
        {{if resource.classname == 'e-parentnode'}}
            {{:resource.text}}
        {{else}}
            {{if date.getDay() == 0 || date.getDay() == 6}}
                <div class="image"><img src='../images/schedule/weekend.png' /><br /><span class="caption">Weekend</span></div>
            {{else}}
                {{if view == 'month' && resource.text == 'Party Hall-A' && date.getDay() == 5}}
                    <div class="image"><img src='../images/schedule/meeting.png' /><br /><span class="caption">Meeting</span></div>
                {{else resource.text != 'Party Hall-B' && date.getDate() == 15}}
                    <div class="image"><img src='../images/schedule/holiday.png' /><br /><span class="caption">Holiday</span></div>
                {{else view != 'month' && resource.text == 'Party Hall-A' && date.getDay() == 5 && date.getHours() == 10}}
                    <div class="image"><img src='../images/schedule/meeting.png' /><br /><span class="caption">Meeting</span></div>
                {{else view == 'month' && resource.text == 'Party Hall-B' && date.getDay() == 5}}
                    <div class="image"><img src='../images/schedule/conference.png' /><br /><span class="caption">Conf.</span></div>
                {{else resource.text == 'Party Hall-B' && date.getDate() == 16}}
                    <div class="image"><img src='../images/schedule/happyday.png' /><br /><span class="caption">Happyday</span></div>
                {{else view != 'month' && resource.text == 'Party Hall-B' && date.getDay() == 5 && date.getHours() == 12}}
                    <div class="image"><img src='../images/schedule/conference.png' /><br /><span class="caption">Conf.</span></div>
                {{else date.getDate() == 10 && date.getMonth() == 11}}
                    <div class="image"><img src='../images/schedule/wednesday.png' /><br /><span class="caption">Day Spl</span></div>
                {{else date.getDate() == 25 && date.getMonth() == 11}}
                    <div class="image"><img src='../images/schedule/christmas.png' /><br /><span class="caption">Christmas</span></div>
                {{/if}}
            {{/if}}
        {{/if}}
    </script>
    <script>
        var schObj;
        $(document).ready(function () {
            $("#sampleProperties").ejPropertiesPanel();
            schObj = $("#Schedule1").data("ejSchedule");
        });

        function _dateFormat(date) {
            var dFormat = ej.globalize.format(new Date(date), "dd/MM");
            return dFormat;
        }
        $.views.helpers({ dTemplate: _dateFormat });

        function onOrientation(args) {
            if (args.value == "Horizontal") {
                $("#Schedule1").ejSchedule({ orientation: args.value.toLowerCase(), cellWidth: "70px" });
                $("#allDayCells").ejCheckBox({ enabled: false });
            }
            else {
                $("#Schedule1").ejSchedule({ orientation: args.value.toLowerCase(), cellWidth: "" });
                $("#allDayCells").ejCheckBox({ enabled: true });
            }
        }
        function onTimeScale(args) {
            if (args.isChecked) { $("#Schedule1").ejSchedule({ timeScale: { enable: false } }); $("#allDayCells").ejCheckBox({ enabled: false }); }
            else { $("#Schedule1").ejSchedule({ timeScale: { enable: true } }); $("#allDayCells").ejCheckBox({ enabled: true }); }
        }
        function onAllDayCells(args) {
            if (args.isChecked) { $("#Schedule1").ejSchedule({ allDayCellsTemplateId: "#allDayTemplate" }); }
            else { $("#Schedule1").ejSchedule({ allDayCellsTemplateId: null }); }
        }

        function onDateHeader(args) {
            if (args.isChecked) { $("#Schedule1").ejSchedule({ dateHeaderTemplateId: "#dateTemplate" }); }
            else { $("#Schedule1").ejSchedule({ dateHeaderTemplateId: null }); }
        }

        function onWorkCells(args) {
            if (args.isChecked) { $("#Schedule1").ejSchedule({ workCellsTemplateId: "#workTemplate" }); }
            else { $("#Schedule1").ejSchedule({ workCellsTemplateId: null }); }
        }
    </script>
}

