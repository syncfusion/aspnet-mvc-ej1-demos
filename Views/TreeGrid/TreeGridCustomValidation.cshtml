@section MetaTags{
   <meta name="description" content="This example illustrates how to define editing validations for the column fields in the tree grid control.">
}

@section SampleHeading{<span class="sampleName">TreeGrid-Column Validation-ASP.NET MVC-SYNCFUSION</span>}
@using Syncfusion.JavaScript.Models;
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
}
@section ControlsSection{


    <style>
        .cols-sample-area {
            height: 440px;
        }
    </style>

    @(Html.EJ().TreeGrid("TreeGridContainer")
              .ChildMapping("Children")
              .TreeColumnIndex(1)
              .Columns(co =>
              {
                  co.Field("TaskId").HeaderText("Task Id").EditType(TreeGridEditingType.Numeric).Width(45).ValidationRules(v => v.AddRule("required", true).AddRule("CheckNegative", true)).Add();
                  co.Field("TaskName").HeaderText("Task Name").EditType(TreeGridEditingType.String).ValidationRules(v => v.AddRule("minlength", 2).AddRule("required", true)).Add();
                  co.Field("StartDate").HeaderText("Start Date").EditType(TreeGridEditingType.Datepicker).ValidationRules(v => v.AddRule("validateStartDate", true).AddRule("required", true)).Add();
                  co.Field("EndDate").HeaderText("End Date").EditType(TreeGridEditingType.Datepicker).ValidationRules(v => v.AddRule("validateEndDate", true).AddRule("required", true)).Add();
                  co.Field("Progress").HeaderText("Progress").EditType(TreeGridEditingType.Numeric).ValidationRules(v => v.AddRule("compareRegex", new List<object>() { -1, 101 }).AddRule("required", true)).Add();
              }
       )
              .SizeSettings(ss => ss.Width("100%").Height("350px"))
              .IsResponsive(true)
              .EditSettings(edit =>
              {
                  edit.AllowEditing(true);
                  edit.AllowAdding(true);
                  edit.AllowDeleting(true);
                  edit.EditMode(TreeGridEditMode.CellEditing);
                  edit.RowPosition(TreeGridRowPosition.AboveSelectedRow);
              })
             .ToolbarSettings(tool =>
             {
                 tool.ShowToolbar(true);
                 tool.ToolbarItems(new List<TreeGridToolBarItems>()
                {
                                     TreeGridToolBarItems.Add,
                                     TreeGridToolBarItems.Edit,
                                     TreeGridToolBarItems.Delete,
                                     TreeGridToolBarItems.Update,
                                     TreeGridToolBarItems.Cancel,
                                     TreeGridToolBarItems.ExpandAll,
                                     TreeGridToolBarItems.CollapseAll,
                                  });
             })
       .Datasource(ViewBag.datasource)
    )
}

@section ScriptSection{
    <script type="text/javascript">
        $(function () {
            var startdatevalue, enddatevalue;
            $.validator.addMethod("validateEndDate", function (value, element, params) {
                var obj = $("#TreeGridContainer").ejTreeGrid("instance");
                enddatevalue = value;
                startDate = obj.model.selectedItem.StartDate == "" ? startdatevalue : obj.model.selectedItem.StartDate;
                if (!ej.isNullOrUndefined(startDate) && new Date(value) >= new Date(startDate))
                    return true;
                return false;
            }, "EndDate must be more than startDate");
            $.validator.addMethod("CheckNegative", function (value, element, params) {
                return value >= 0
            }, "Please enter valid number");
            $.validator.addMethod("compareRegex", function (value, element, params) {
                return element.value > params[0] && element.value < params[1]
            }, "Progress value must be between 0 and 100");
            $.validator.addMethod("validateStartDate", function (value, element, params) {
                var obj = $("#TreeGridContainer").ejTreeGrid("instance");
                startdatevalue = value;
                var endDate = obj.model.selectedItem.EndDate == "" ? enddatevalue : obj.model.selectedItem.EndDate;
                if (!ej.isNullOrUndefined(endDate) && new Date(value) <= new Date(endDate))
                    return true;
                return false;
            }, "StartDate must be less than EndDate");
        });
    </script>
}
    

