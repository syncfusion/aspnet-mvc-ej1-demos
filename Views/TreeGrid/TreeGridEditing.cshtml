@section MetaTags{
   <meta name="description" content="This example illustrates editing records in the tree grid control using inline cell and row editing options.">
}

@section SampleHeading{<span class="sampleName">TreeGrid-Inline Editing-ASP.NET MVC-SYNCFUSION</span>}
@using Syncfusion.JavaScript.Models;
@section ControlsSection{


    <style>
        .cols-sample-area {
            height: 440px;
        }
    </style>

    @(Html.EJ().TreeGrid("TreeGridContainer")
              .ChildMapping("Children")
              .TreeColumnIndex(1)
              .AllowSearching(true)
              .Columns(co =>
              {
                  co.Field("TaskId").HeaderText("Task Id").EditType(TreeGridEditingType.Numeric).Width(45).Add();
                  co.Field("TaskName").HeaderText("Task Name").EditType(TreeGridEditingType.String).Add();
                  co.Field("StartDate").HeaderText("Start Date").EditType(TreeGridEditingType.Datepicker).Add();
                  co.Field("EndDate").HeaderText("End Date").EditType(TreeGridEditingType.Datepicker).DropDownEditOptions(new DropDownListProperties(){ DropDownListFields = new DropDownListFields(){ Text=""} }).Add();
                  co.Field("Duration").HeaderText("Duration").EditType(TreeGridEditingType.Numeric).Add();
                  co.Field("Progress").HeaderText("Progress").EditType(TreeGridEditingType.Numeric).Add();
              }
       )
              .SizeSettings(ss => ss.Width("100%").Height("350px"))
              .IsResponsive(true)
              .EditSettings(edit =>
              {
                  edit.AllowEditing(true);
                  edit.AllowAdding(true);
                  edit.AllowDeleting(true);
                  edit.ShowDeleteConfirmDialog(true);
                  edit.EditMode(TreeGridEditMode.CellEditing);
                  edit.RowPosition(TreeGridRowPosition.AboveSelectedRow);
              })
             .ToolbarSettings(tool =>
             {
                 tool.ShowToolbar(true);
                 tool.ToolbarItems(new List<TreeGridToolBarItems>()
                {
                                     TreeGridToolBarItems.Add,
                                     TreeGridToolBarItems.Edit,
                                     TreeGridToolBarItems.Delete,
                                     TreeGridToolBarItems.Update,
                                     TreeGridToolBarItems.Cancel,
                                     TreeGridToolBarItems.ExpandAll,
                                     TreeGridToolBarItems.CollapseAll,
                                     TreeGridToolBarItems.Search
                                  });
             })
       .Datasource(ViewBag.datasource)
    )
}
@section PropertiesSection{
    <div class="prop-grid">
        <div class="row">
            <div class="col-md-3">
                Edit Mode
            </div>
            <div class="col-md-3">
                <div id="editMode">
                    <ul>
                        <li>CellEditing</li>
                        <li>RowEditing</li>
                    </ul>
                </div>
                <div style="float:right;padding-bottom:5px; padding-left:1px;">
                    @(Html.EJ().DropDownList("editing")
                        .TargetID("editMode")
                        .SelectedItemIndex(0)
                        .Value("CellEditing")
                        .Text("CellEditing")
                        .ClientSideEvents(eve => eve.Change("onModeChange"))
                   .Width("120px")
                    )
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                Begin Edit Action
            </div>
            <div class="col-md-3">
                <div id="editAction">
                    <ul>
                        <li>Double Click</li>
                        <li>Click</li>
                    </ul>
                </div>
                <div style="float:right;padding-bottom:5px; padding-left:1px;">
                    @(Html.EJ().DropDownList("actionClick")
                        .TargetID("editAction")
                        .Value("Double Click")
                        .ClientSideEvents(eve => eve.Change("onActionChange"))
                        .Width("120px")
                    )
                </div>
            </div>
        </div>
    </div>
}
@section ScriptSection{
    <script type="text/javascript">
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
        });
        function onActionChange(args) {
            var treeObject = $("#TreeGridContainer").data("ejTreeGrid");
            var value = args.text == "Double Click" ? ej.TreeGrid.BeginEditAction.DblClick : ej.TreeGrid.BeginEditAction.Click;
            var setting = {
                beginEditAction: value
            }
            treeObject.option("editSettings", setting);
        }
        function onModeChange(args) {
            var treeObject = $("#TreeGridContainer").data("ejTreeGrid");
            var value = args.text == "CellEditing" ? ej.TreeGrid.EditMode.CellEditing : ej.TreeGrid.EditMode.RowEditing;
            var setting = {
                editMode: value
            }
            treeObject.option("editSettings", setting);
        }
    </script>
}
    

