@section MetaTags{
   <meta name="description" content="This example illustrates custom edit templates for editing records in the tree grid control.">
}
@section SampleHeading{<span class="sampleName">TreeGrid-Edit Template-ASP.NET MVC-SYNCFUSION</span>}
@using Syncfusion.JavaScript.Models;
@section ControlsSection{


    <style>
        .cols-sample-area {
            height: 440px;
        }
    </style>

    @(Html.EJ().TreeGrid("TreeGridContainer")
              .ChildMapping("Children")
              .TreeColumnIndex(1)
              .Columns(co =>
              {
                  co.Field("TaskId").HeaderText("Task Id").EditType(TreeGridEditingType.Numeric).Width(45).Add();
                  co.Field("TaskName").HeaderText("Task Name").EditType(TreeGridEditingType.String).EditTemplate(new TreeGridEditTemplate() { Create = "create", Write = "write", Read = "read" }).Add();
                  co.Field("StartDate").HeaderText("Start Date").EditType(TreeGridEditingType.Datepicker).Add();
                  co.Field("EndDate").HeaderText("End Date").EditType(TreeGridEditingType.Datepicker).DropDownEditOptions(new DropDownListProperties() { DropDownListFields = new DropDownListFields() { Text = "" } }).Add();
                  co.Field("Duration").HeaderText("Duration").EditType(TreeGridEditingType.Numeric).Add();
              }
       )
              .SizeSettings(ss => ss.Width("100%").Height("350px"))
              .IsResponsive(true)
              .EditSettings(edit =>
              {
                  edit.AllowEditing(true);
                  edit.AllowAdding(true);
                  edit.AllowDeleting(true);
                  edit.EditMode(TreeGridEditMode.RowEditing);
                  edit.RowPosition(TreeGridRowPosition.AboveSelectedRow);
              })
             .ToolbarSettings(tool =>
             {
                 tool.ShowToolbar(true);
                 tool.ToolbarItems(new List<TreeGridToolBarItems>()
                {
                                     TreeGridToolBarItems.Add,
                                     TreeGridToolBarItems.Edit,
                                     TreeGridToolBarItems.Delete,
                                     TreeGridToolBarItems.Update,
                                     TreeGridToolBarItems.Cancel,
                                     TreeGridToolBarItems.ExpandAll,
                                     TreeGridToolBarItems.CollapseAll,
                                  });
             })
       .Datasource(ViewBag.datasource)
    )
}

@section ScriptSection{
    <script type="text/javascript">
        function create()
        {
            return "<input>";
        }
        function write(args)
        {
            obj = $('#TreeGridContainer').ejTreeGrid('instance');
            var data = ej.DataManager(obj.model.flatRecords).executeLocal(new ej.Query().select("TaskName"));
            args.element.ejAutocomplete({ width: "100%", height: "100%", dataSource: data, enableDistinct: true, value: args.rowdata !== undefined ? args.rowdata["TaskName"] : "" });
        }
        function read(args)
        {
            args.ejAutocomplete('suggestionList').css('display', 'none');
            var e = $.Event("keyup", { keyCode: 13 });
            args.trigger(e);
            return args.ejAutocomplete("getValue");
        }
        $(function () {
            $("#TreeGridContainer").keyup(function (e) {
                if ((e.keyCode == 40 || e.keyCode == 38) && $(e.target).hasClass("e-autocomplete")) {
                    var autocomp = $("#TreeGridContainerTaskName").ejAutocomplete("instance")
                    if (autocomp.getValue() != "" && autocomp.getActiveText() != "No suggestions")
                        $(e.target).val(autocomp.getActiveText());
                }
            });
        });
    </script>
}

