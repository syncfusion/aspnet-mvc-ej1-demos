@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">LinearGauge-Thermometer-ASP.NET MVC-SYNCFUSION</span>
	}

@section ControlsSection{
<div id="linearframe" align="center">
@(Html.EJ().LinearGauge("thermoLinear").LabelColor("#8c8c8c").ClientSideEvents(cli=>cli.DrawLabels("DrawLabel").DrawCustomLabel("DrawCustomLabel").Load("loadGaugeTheme")).EnableAnimation(false).Height(550).Width(500)
                    .Scales(s =>
                    {
                        s.Width(30)
                         .Type(ScaleType.Thermometer)
                         .BackgroundColor("transparent")
                         .Minimum(-10)
                         .Maximum(110).MinorIntervalValue(5)
                         .Length(335)
                         .Border(bor=>bor.Width(1))
                         .ShowCustomLabels(true)
                         .Position(pos => { pos.X(50).Y(18); })
                         .MarkerPointers(mp => { mp.MarkerOpacity(0).Add(); })
                         .BarPointers(bp => { bp.Width(10).BarPointerDistanceFromScale(0).BarPointerValue(100).BarPointerBackgroundColor("#DB3738").Add(); })
                         .Labels(lbl =>
                         {
                             lbl.Placement(LabelPlacement.Near).Font(fnt => { fnt.Size("10px").FontFamily("Segoe UI").FontStyle("Normal"); }).Add();
                             lbl.Placement(LabelPlacement.Far).DistanceFromScale(dfs => dfs.X(10)).Add();
                         })
                         .Ticks(tic =>
                         {
                             tic.Type(TickType.MajorInterval).Height(8).Width(1).Color("#8c8c8c").Add();
                             tic.Type(TickType.MinorInterval).Height(4).Width(1).Color("#8c8c8c").Add();
                             tic.Type(TickType.MajorInterval).Placement(TickPlacement.Far).Height(8).Width(1).Color("#8c8c8c").Add();
                             tic.Type(TickType.MinorInterval).Placement(TickPlacement.Far).Height(4).Width(1).Color("#8c8c8c").Add();
                         })
                         .CustomLabels(clbl => {
                             clbl.Value("(° C)").Position(pos => pos.X(44).Y(78)).Font(f => { f.FontStyle("bold").FontFamily("Segoe UI").Size("12px"); }).Color("#666666").Add();
                             clbl.Value("(° F)").Position(pos => pos.X(56).Y(78)).Font(f => { f.FontStyle("bold").FontFamily("Segoe UI").Size("12px"); }).Color("#666666").Add();
                             clbl.Position(pos => pos.X(51).Y(85)).Font(f => { f.FontStyle("bold").FontFamily("Segoe UI").Size("13px"); }).Color("#666666").Add();
                             
                         })
                         .Add();
                    }))
</div>
}


@section PropertiesSection{
     <div class="row">
                        <div class="col-md-3">
                            Temperature
                        </div>
                        <div class="col-md-3">
                             @Html.EJ().DropDownList("temperaturetype").Datasource((IEnumerable<MVCSampleBrowser.Models.LinearGauge.TempType>)ViewBag.datasource4).DropDownListFields(df=>df.ID("Temp").Text("Temp").Value("Temp")).SelectedItemIndex(0).Width("110").ClientSideEvents(cli => { cli.Select("onchange"); })
                        </div>
                        <div class="col-md-3">
                            Value (° C)
                        </div>
                        <div class="col-md-3 aligntop">
                           @(Html.EJ().Slider("pointervalue").SliderType(SlideType.MinRange).Value("100").Height("10").Width("110").MinValue(-10).MaxValue(110).EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange").Slide("onchange"); }))
                        </div>
                    </div>


}
@section StyleSection{
 <style>
        .col-md-3 .e-ddl .e-input {
            line-height:20px;
        }
    </style>
}

@section MetaTags{
   <meta name="description" content="This sample depicts a thermometer in the Syncfusion ASP.NET Web Forms Linear gauge control.">
}

<script>
    $(document).ready(function () {
        $("#sampleProperties").ejPropertiesPanel();
    });
        function DrawLabel(args) {
            if (args.label.index == 1) {
                args.style.textValue = (args.label.value * (9 / 5)) + 32;
                args.style.font = "Normal 10px Segoe UI";
            }
        }

        function DrawCustomLabel(args) {
            if (args.customLabelIndex == 2) {
                var temp = args.scaleElement.barPointers[0].value;
                var fahValue = (temp * (9 / 5)) + 32;
                if (temp == -10) {
                    args.style.textValue = "Very Cold Weather" + "(" + fahValue.toFixed(1) + "° F)";
                }
                else if ((temp > -10 && temp < 0) || (temp > 0 && temp < 15)) {
                    args.style.textValue = "Cool Weather" + " (" + fahValue.toFixed(1) + "° F)";
                }
                else if (temp == 0) {
                    args.style.textValue = "Freezing point of Water" + " (" + fahValue.toFixed(1) + "° F)";
                }
                else if (temp >= 15 && temp < 30) {
                    args.style.textValue = "Room Temperature" + " (" + fahValue.toFixed(1) + "° F)";
                }
                else if (temp == 30) {
                    args.style.textValue = "Beach Weather" + " (" + fahValue.toFixed(1) + "° F)";
                }
                else if (temp == 37) {
                    args.style.textValue = "Body Temperature" + " (" + fahValue.toFixed(1) + "° F)";
                }
                else if (temp == 40) {
                    args.style.textValue = "Hot Bath Temperature" + " (" + fahValue.toFixed(1) + "° F)";
                }
                else if (temp > 40 && temp < 100) {
                    args.style.textValue = "Very Hot Temperature" + " (" + fahValue.toFixed(1) + "° F)";
                }
                else if (temp == 100) {
                    args.style.textValue = "Boiling point of Water" + " (" + fahValue.toFixed(1) + "° F)";
                }
            }
        }
        function onchange(args) {
		    var slider=$("#pointervalue").data("ejSlider");
            var thermotarget = $("#thermoLinear").data("ejLinearGauge");
            if (args.id == "pointervalue") {
                thermotarget.setBarPointerValue(0, 0, args.value);
            }
            else if (args.text == "Boiling Point") {
                thermotarget.setBarPointerValue(0, 0, 100);
            }

            else if (args.text == "Hot Bath") {
                thermotarget.setBarPointerValue(0, 0, 40);
            }

            else if (args.text == "Body Temp") {
                thermotarget.setBarPointerValue(0, 0, 37);
            }

            else if (args.text == "Beach Weather") {
                thermotarget.setBarPointerValue(0, 0, 30);
            }

            else if (args.text == "Cool Day") {
                thermotarget.setBarPointerValue(0, 0, 10);
            }

            else if (args.text == "Freezing Point") {
                thermotarget.setBarPointerValue(0, 0, 0);
            }

            else if (args.text == "Extreme Cold") {
                thermotarget.setBarPointerValue(0, 0, -10);
            }
            slider.option({ value: thermotarget.getBarPointerValue(0, 0) });
        }
    </script>




