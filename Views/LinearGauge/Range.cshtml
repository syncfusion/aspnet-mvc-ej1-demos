@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">LinearGauge-Range-ASP.NET MVC-SYNCFUSION</span>
	}

@section ControlsSection{
   <div id="linearframe" align="center">
@(Html.EJ().LinearGauge("RangeGauge").LabelColor("#8c8c8c").Width(500)
    .IsResponsive(true)
                    .ClientSideEvents(cli=>cli.Load("loadGaugeTheme"))
                    .Scales(s =>
                    {
                        s.Width(4)
                            .BackgroundColor("transparent")
                         .Border(bor=>bor.Color("transparent").Width(0))
                         .ShowRanges(true)
                         .ShowMarkerPointers(false)
                         .Length(310)
                         .Position(pos => { pos.X(50).Y(50); })
                         .Labels(lbl => { lbl.Font(fnt => { fnt.Size("11px").FontFamily("Segoe UI").FontStyle("bold"); }).DistanceFromScale(dfs=>dfs.X(-12)).Add(); })
                         .BarPointers(barptr => { barptr.BarPointerValue(100).Width(4).BarPointerBackgroundColor("#6FAAB0").Add(); })
                         .Ticks(tic => { tic.Type(TickType.MajorInterval).Width(1).Color("#8c8c8c").Add(); })
                            .Ranges(rng =>
                            {
                                rng.EndValue(50).StartValue(0).DistanceFromScale(16).RangeBackgroundColor("#F6B53F").Border(bor=>bor.Color("#F6B53F")).StartWidth(3).EndWidth(18).Add();
                                rng.EndValue(100).StartValue(70).DistanceFromScale(16).RangeBackgroundColor("#E94649").Border(bor=>bor.Color("#E94649")).StartWidth(18).EndWidth(3).Add();
                            })
                         .Add();
                    }))
        </div>

}


@section PropertiesSection{
                    <div class="row">
                        <div class="col-md-3">
                            Select Range
                        </div>
                        <div class="col-md-3">
                            @(Html.EJ().DropDownList("rangeid").SelectedItemIndex(0).Datasource((IEnumerable<MVCSampleBrowser.Models.LinearGauge.GaugeRange>)ViewBag.datasource3).DropDownListFields(df=>df.ID("RangesValue").Text("RangesValue").Value("RangesValue")).Width("110").Height("22").ClientSideEvents(cli => { cli.Select("onchange1"); }))
                        </div>
                        <div class="col-md-3 aligntop1">
                            Start Width
                        </div>
                        <div class="col-md-3" style="margin-top:12px;">
                           @(Html.EJ().Slider("startwidth").Value("3").MinValue(0).MaxValue(20).SliderType(SlideType.MinRange).Height("10").Width("110").EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange"); }))
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            End Width
                        </div>
                        <div class="col-md-3 aligntop1">
                           @(Html.EJ().Slider("endwidth").Value("18").MinValue(0).MaxValue(20).SliderType(SlideType.MinRange).Height("10").Width("110").EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange"); }))
                        </div>
                        <div class="col-md-3">
                            Start Value
                        </div>
                        <div class="col-md-3 aligntop1">
                           @(Html.EJ().Slider("startvalue").Value("0").MinValue(0).MaxValue(50).SliderType(SlideType.MinRange).Height("10").Width("110").EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange"); }))
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            End Value
                        </div>
                        <div class="col-md-3 aligntop1">
                           @(Html.EJ().Slider("endvalue").Value("50").MinValue(0).MaxValue(100).SliderType(SlideType.MinRange).Height("10").Width("110").EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange"); }))
                        </div>
                        <div class="col-md-3">
                            Pointer Value
                        </div>
                        <div class="col-md-3 aligntop1">
                           @(Html.EJ().Slider("pointervalue").SliderType(SlideType.MinRange).Value("100").Height("10").Width("110").MinValue(0).MaxValue(100).EnableAnimation(true).ClientSideEvents(events => { events.Change("onchange"); }))
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            Placement
                        </div>
                        <div class="col-md-3">
                            @Html.EJ().DropDownList("rangeplacement").SelectedItemIndex(2).Datasource((IEnumerable<MVCSampleBrowser.Models.LinearGauge.PoniterPlacement>)ViewBag.datasource).DropDownListFields(df=>df.ID("Placement").Text("Placement").Value("Placement")).Width("110").ClientSideEvents(cli => { cli.Select("onchange"); })
                        </div>
                        <div>
                            <input type="submit" id="Refresh" value="Refresh" style="display: none" />
                        </div>
                    </div>
}

@section StyleSection{
<style>
        .col-md-3 .e-ddl .e-input {
            line-height:20px;
        }
    </style>
}


@section ScriptSection{
  <script>
      $(document).ready(function () {
          $("#sampleProperties").ejPropertiesPanel();
         });
     
      function onchange1(args) {
          var startslide = $("#startvalue").data("ejSlider");
          var endslide = $("#endvalue").data("ejSlider");
          var startwidth = $("#startwidth").data("ejSlider");
          var endwidth = $("#endwidth").data("ejSlider");
          var gaugestart = $("#RangeGauge").data("ejLinearGauge");
          startslide.setModel({ maxValue: gaugestart.model.scales[0].ranges[args.itemId].endValue, value: gaugestart.model.scales[0].ranges[args.itemId].startValue });
          endslide.setModel({ minValue: gaugestart.model.scales[0].ranges[args.itemId].startValue, value: gaugestart.model.scales[0].ranges[args.itemId].endValue });
          startwidth.setModel({ value: gaugestart.model.scales[0].ranges[args.itemId].startWidth });
          endwidth.setModel({ value: gaugestart.model.scales[0].ranges[args.itemId].endWidth });
      }

      function onchange(args) {
          var gaugetarget = $("#RangeGauge").data("ejLinearGauge");
          var target1 = $("#rangeid").data("ejDropDownList");
          var endslide = $("#endvalue").data("ejSlider");
          var startslide = $("#startvalue").data("ejSlider");
          if (args.id == "startvalue") {
              endslide.setModel({ minValue: args.value });
              gaugetarget.setRangeStartValue(0, target1.selectedIndexValue, args.value);
          }
          else if (args.id == "endvalue") {
              startslide.setModel({ maxValue: args.value });
              gaugetarget.setRangeEndValue(0, target1.selectedIndexValue, args.value);
          }
          if (args.id == "startwidth")
              gaugetarget.setRangeStartWidth(0, target1.selectedIndexValue, args.value);
          if (args.id == "endwidth")
              gaugetarget.setRangeEndWidth(0, target1.selectedIndexValue, args.value);
          if (args.id == "pointervalue") {
              gaugetarget.setBarPointerValue(0, 0, args.value);
          }
          if (args.text == "far" || args.text == "near" || args.text == "center") {
              gaugetarget.setRangePosition(0, 0, args.text);
              gaugetarget.setRangePosition(0, 1, args.text);
          }
      }
    </script>
}
@section MetaTags{
   <meta name="description" content="This sample demonstrates the ranges behavior in the Syncfusion ASP.NET Web Forms Linear gauge control.">
}



