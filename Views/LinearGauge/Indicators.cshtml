@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/excanvas.min.js")"></script>
    }
@section SampleHeading{
	<span class="sampleName">LinearGauge-Indicators-ASP.NET MVC-SYNCFUSION</span>
	}


@section ControlsSection{

<div style="color:#8c8c8c;width:100%" >
 <label id="lbl" style="margin-left:35%">Loan Amount = $ 5 Mills</label>

@(Html.EJ()
  .LinearGauge("CoreLinearGauge")
  .LabelColor("#8c8c8c").Orientation(Orientation.Horizontal).ReadOnly(false).EnableAnimation(false).Width(900).Height(180)
  .ClientSideEvents(cli => cli.DrawLabels("DrawLabel").DrawMarkerPointers("DrawMarkerPointers").DrawIndicators("DrawIndicators"))
  .Scales(scl => {
      scl.Direction(Directions.Clockwise).Type(ScaleType.RoundedRectangle).Width(50)
         .Border(bor => bor.Color("#8c8c8c").Width(2)).ShowIndicators(true).ShowBarPointers(false)
         .Length(810).Minimum(10000).Maximum(25000000).MinorIntervalValue(178500).MajorIntervalValue(1785000)
         .Position(pos => pos.X(52).Y(50))
         .MarkerPointers(mp =>
         {
             mp.Value(7000000).MarkerDistanceFromScale(20).Type(MarkerType.Circle).Length(120).Width(100)
               .Placement(PointerPlacement.Center).MarkerBackgroundColor("#FFFFFF").MarkerOpacity(0.8)
               .Border(bor => bor.Color("#8c8c8c").Width(1)).Add();
         })
         .Labels(lbl =>
         {
             lbl.Font(font => font.FontFamily("Arial").FontStyle("Normal").Size("16px"))
                 .DistanceFromScale(dfs => dfs.X(0).Y(30)).Placement(LabelPlacement.Far).Angle(90).Add();
         })
         .Ticks(tic =>
         {
             tic.Type(TickType.MajorInterval).Height(30).Width(0.3).Color("#8c8c8c").Placement(TickPlacement.Far).Add();
             tic.Type(TickType.MinorInterval).Height(15).Width(0.3).Color("#8c8c8c").Placement(TickPlacement.Far).Add();
         })
         .Indicators(ind => {
             ind.IndicatorFont(fon => fon.Size("15px").FontStyle("Bold").FontFamily("Arial")).Type(IndicatorType.text)
                 .IndicatorTextLocation(loc => loc.X(6).Y(53)).StateRanges(sr =>
                 {
                     sr.StateRangeEndValue(25000000).StateRangeStartValue(10000).StateRangetext("1 Mill").StateRangetextColor("#8c8c8c").Add();
                 }).Add();
             ind.IndicatorFont(fon => fon.Size("15px").FontStyle("Bold").FontFamily("Arial")).Type(IndicatorType.Rectangle).Position(pos=>pos.X(40).Y(115))
                 .IndicatorTextLocation(loc => loc.X(52).Y(95)).Height(20).Width(20).StateRanges(sr =>
                 {
                     sr.StateRangeEndValue(8000000).StateRangeStartValue(10000).StateRangetext("9.8 % interest per Annum").StateRangetextColor("#8c8c8c").StateRangeBackgroundColor("Green").StateRangeBorderColor("#8c8c8c").Add();
                     sr.StateRangeEndValue(15000000).StateRangeStartValue(8000000).StateRangetext("10.5 % interest per Annum").StateRangetextColor("#8c8c8c").StateRangeBackgroundColor("Yellow").StateRangeBorderColor("#8c8c8c").Add();
                     sr.StateRangeEndValue(25000000).StateRangeStartValue(15000000).StateRangetext("12.2 % interest per Annum").StateRangetextColor("#8c8c8c").StateRangeBackgroundColor("Red").StateRangeBorderColor("#8c8c8c").Add();
                 }).Add();
         })
         .Add();
  })



)
</div>

}

@section ScriptSection{
 <script type="text/javascript">
     var text = "";
     var XPosition;
     function DrawLabel(args) {
         args.style.textValue = Math.round(args.label.value) == 25000000 ? "$ 25 Mills" : Math.round(args.label.value) == 10000 ? "$ 10,000" : "";
     }
     function DrawMarkerPointers(args) {
         XPosition = args.position.startX;
         text = Math.round(args.pointerValue) == 1000000 ? "1 Mill" : Math.round(args.pointerValue) > 1000000 ? (Math.round(args.pointerValue) / 1000000).toFixed(3) == 1 ? "1 Mill" : (Math.round(args.pointerValue) / 1000000).toFixed(3) + " Mills" : (Math.round(args.pointerValue) / 1000).toFixed(3).toString().replace(".", ",");
         var label = "Loan Amount = $ " + text;
         $("#lbl").text(label);
     }
     function DrawIndicators(args) {
         if (args.indicatorIndex == 0) {
             args.position.textLocation.x = XPosition;
             args.indicatorEl.stateRanges[0].text = text;
         }
     }
 </script>
}

@section MetaTags{
   <meta name="description" content="This sample indicates the interest based on loan amount in the Syncfusion ASP.NET Web Forms Linear gauge control.">
}





