@section SampleHeading{ <span class="sampleName">PivotGrid-Conditional Formatting-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot grid control describes how to format the appearance of value cells based on applied conditions">
}
@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;

@section ScriptReferenceSection{
<script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}

@section ScriptSection{
    <script type="text/javascript">
        function onLoad(args) {
            args.model.dataSource.data = pivot_dataset;
        }
        $(function () {
	    $("#sampleProperties").ejPropertiesPanel();
            $("#Btn1").ejButton({
                roundedCorner: true,
                size: "small",
                type: ej.ButtonType.Button,
                click: "ApplyChanges"
            });
            $("#Btn2").ejButton({
                roundedCorner: true,
                size: "small",
                type: ej.ButtonType.Button,
                click: "Reset"
            });
            $('#drpdwn').ejDropDownList({
                selectedIndex: null,
                change: "exportPivotGrid"
            });

        });
        function ApplyChanges() {
            var pivotGridObj = $('#PivotGrid1').data("ejPivotGrid");
            if (pivotGridObj.model.enableConditionalFormatting) {
                pivotGridObj.openConditionalFormattingDialog();
            }
            else {
                alert("Please set conditional Formatting as True");
            }
        }
        function exportPivotGrid(args) {
            var pGridObj = $('#PivotGrid1').data("ejPivotGrid");
            var dropDownObj = $('#drpdwn').data("ejDropDownList");
            var exportOption = dropDownObj.model.value;
                if (exportOption == "excel")
                    pGridObj.exportPivotGrid("ExcelExport", "fileName");
                else if (exportOption == "word")
                    pGridObj.exportPivotGrid("WordExport", "fileName");
                else if (exportOption == "pdf")
                    pGridObj.exportPivotGrid("PDFExport", "fileName");
        }
        function Reset() {
                        var pivotGridObj = $('#PivotGrid1').data("ejPivotGrid");
                        pivotGridObj._removeCellFormatting(true, false);
                        pivotGridObj._list = ["Add New"];
        }
        window.loadPivotGridFrameTheme = function () {
            window.setTimeout(function () {
                var pivotGridElement = $("#PivotGrid1").data("ejPivotGrid");
                if (pivotGridElement && pivotGridElement.model.enableGroupingBar && pivotGridElement.getJSONRecords() != null)
                    pivotGridElement.renderControlFromJSON();
            }, 2500);
        }
    </script>
}


@section StyleSection{
    <style>
        #PivotGrid1 {
            width:100%;
            height:350px;
            overflow:auto;
        }
        .row .cols-sample-area {
            width:72% !important;
        }
        .row .cols-prop-area {
            width:25% !important;
            min-height:140px;
        }
        .row .col-md-3, .cusBtn {
            margin-top: 18px;
        }
        #CodeViewTab ul > li:first-child + li{
            display:none;
        }
		@@media (min-width: 1920px) { .chkrad { width: 179px !important; } }
    </style>
}

@section ControlsSection{
    @Html.EJ().Pivot().PivotGrid("PivotGrid1").IsResponsive(true).EnableConditionalFormatting(true).ClientSideEvents(clientSideEvents => clientSideEvents.Load("onLoad")).DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("Country").FieldCaption("Country").Add(); rows.FieldName("State").FieldCaption("State").Add(); }).Columns(columns => { columns.FieldName("Product").FieldCaption("Product").Add(); }).Values(values => { values.FieldName("Amount").Add(); values.FieldName("Quantity").Add(); })) 

    
}

@section PropertiesSection{
                <div class="row">
                    <div class="col-md-3">
                        Conditional Formatting:
                    </div>
                    <button class="cusBtn" id="Btn1">Apply</button>
                    <button class="cusBtn" id="Btn2">Reset</button>
                </div>
                <div class="row" style="margin-top: 5px;">
                <table>
                    <tr>
                        <td class="chkrad">
                        Export To :
                        </td>
                        <td class="chkrad" colspan="2">
                            <select id="drpdwn">
                                <option value="excel">Excel</option>
                                <option value="word">Word</option>
                                <option value="pdf">PDF</option>
                            </select>
                        </td>
                    </tr>
                </table>
            </div>
}

