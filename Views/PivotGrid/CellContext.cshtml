@section SampleHeading{ <span class="sampleName">PivotGrid-Cell Context-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot grid control describes how to retrieve the cell information when right-clicking on it">
}
@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;
@section ScriptReferenceSection{
<script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section StyleSection{
    <style>
        #PivotGrid1 {
            width:100%;
            height:350px;
            overflow:auto;
        }
        .menuItem {
            padding:5px 50px 5px 20px;
        }
        .contextMenuPopup {
            position: absolute;
            background-color: #e6e6e6;
            border: #BBBCBB solid 1px;
            padding: 1px;
            color:#565656;
        }
        #CodeViewTab ul > li:first-child + li{
            display:none;
        }
           .row .cols-sample-area
         {
             float:left;
             width:72%;
         }
                    .row .cols-prop-area {
            width: 25%;
            float:right;
        }
    </style>
}

@section ScriptSection{
    <script type="text/javascript">
        function onLoad(args) {
            args.model.dataSource.data = pivot_dataset;
        }
        $(function () {
            onClear = function () {
                jQuery.clearEventLog();
            },
            $(document).bind("click", function () {
                $(".contextMenuPopup").remove();
            });
        });
        cell_RightClick = function (evt) {
            jQuery.addEventLog("Cell Context Menu is opened");
            $(".contextMenuPopup").remove();
            var contextMenu = $('<div class="contextMenuPopup"></div>');
            $(contextMenu[0]).html('<div class="menuItem">Cell Type</div><div class="menuItem">Position</div><div class="menuItem">Value</div>');
            $(contextMenu[0]).css("left", evt.args.args.clientX + 10).css("top", evt.args.args.clientY + 10);
            $("#PivotGrid1").append(contextMenu[0]);
            $(".menuItem").click(function (e) {
                if (e.target.innerHTML == "Value")
                    jQuery.addEventLog("Cell Value: " + evt.args.cellValue);
                else if (e.target.innerHTML == "Cell Type") {
                    var cellType = evt.args.cellType == "value" ? "Value Cell" : (evt.args.cellType == "colheader" ? "Column Header" : (evt.args.cellType == "rowheader" ? "Row Header" : ((evt.args.role == "rowheader" || evt.args.role == "columnheader") ? "Summary Header" : "Summary Cell")));
                    jQuery.addEventLog("Cell Type: " + cellType);
                }
                else if (e.target.innerHTML == "Position")
                    jQuery.addEventLog("Cell Position: Column-" + (parseInt(evt.args.cellPosition.split(',')[0]) + 1) + " Row-" + (parseInt(evt.args.cellPosition.split(',')[1]) + 1));
            });
        }
        window.loadPivotGridFrameTheme = function () {
            window.setTimeout(function () {
                var pivotGridElement = $("#PivotGrid1").data("ejPivotGrid");
                if (pivotGridElement && pivotGridElement.model.enableGroupingBar && pivotGridElement.getJSONRecords() != null)
                    pivotGridElement.renderControlFromJSON();
            }, 2500);
        }
    </script>
}

@section ControlsSection{
    @Html.EJ().Pivot().PivotGrid("PivotGrid1").EnableCellContext(true).ClientSideEvents(events=>events.Load("onLoad").CellContext("cell_RightClick")).IsResponsive(true).DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("Country").FieldCaption("Country").Add(); rows.FieldName("State").FieldCaption("State").Add(); }).Columns(columns => { columns.FieldName("Product").FieldCaption("Product").Add(); }).Values(values => { values.FieldName("Amount").Add(); values.FieldName("Quantity").Add(); })) 
}

@section EventsDropDown{

}

