@section SampleHeading{ <span class="sampleName">PivotGrid-Column Resizing-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot grid control shows column resizing through a simple drag operation at run time">
}
@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section StyleSection{
    <style>
        #PivotGrid1 {
            width: 100%;
            height: 350px;
            overflow: auto;
        }

        .samplecontent {
            padding: 4px;
        }

        .clslab {
            margin-left: 1px !important;
        }

        .row .cols-prop-area {
            min-height: 130px;
            width: 20%;
            float: left;
        }

        .row {
            margin-left: 20px;
        }

            .row .cols-sample-area {
                overflow: auto;
                width: 100%;
            }

        #CodeViewTab ul > li:first-child + li {
            display: none;
        }
		
		@@media (min-width: 1920px) {.row .cols-prop-area { width: 13% !important; } }
    </style>
}

@section ScriptSection{
    <script type="text/javascript">
        var pivotGrid;
        $(function () {
            $("#rdbRelational, #rdbOlap").ejRadioButton({ change: "renderGrid" });
            pivotGrid = $("#PivotGrid1").data("ejPivotGrid");
            $("#sampleProperties").ejPropertiesPanel();
        });
        function onLoad(args) {
            if (args.model.dataSource.data == null)
                args.model.dataSource.data = pivot_dataset;
        }
        function renderGrid(args) {
            $(pivotGrid.element).html("");
            if (args.model.id == "rdbRelational") {
                pivotGrid.model.dataSource = {
                    data: pivot_dataset, cube: "",
                    rows: [{ fieldName: "Country", fieldCaption: "Country", sortOrder: ej.PivotAnalysis.SortOrder.Ascending }, { fieldName: "State", fieldCaption: "State", sortOrder: ej.PivotAnalysis.SortOrder.Descending }],
                    columns: [{ fieldName: "Product", fieldCaption: "Product" }],
                    values: [{ fieldName: "Amount", fieldCaption: "Amount" }, { fieldName: "Quantity", fieldCaption: "Quantity" }],
                    filters: [{ fieldName: "Date", fieldCaption: "Date", filterItems: { filterType: ej.PivotAnalysis.FilterType.Exclude, values: ["FY 2005"] } }]
                };
            }
            else {
                 pivotGrid.model.dataSource = {
                    data: "//bi.syncfusion.com/olap/msmdpump.dll", catalog: "Adventure Works DW 2008 SE", cube: "Adventure Works",
                    rows: [{ fieldName: "[Date].[Fiscal]" }],
                    columns: [{ fieldName: "[Customer].[Customer Geography]" }],
                    values: [{ measures: [{ fieldName: "[Measures].[Internet Sales Amount]" }], axis: "columns" }], filters: []
                };
            }
            pivotGrid._currentReportItems = [];
            pivotGrid._load();
        }
        window.loadPivotGridFrameTheme = function () {
            window.setTimeout(function () {
                var pivotGridElement = $("#PivotGrid1").data("ejPivotGrid");
                if (pivotGridElement && pivotGridElement.model.enableGroupingBar && pivotGridElement.getJSONRecords() != null)
                    pivotGridElement.renderControlFromJSON();
            }, 2500);
        }
    </script>
}
@section ControlsSection{
    @Html.EJ().Pivot().PivotGrid("PivotGrid1").EnableGroupingBar(true).EnableColumnResizing(true).ClientSideEvents(clientSideEvents => clientSideEvents.Load("onLoad")).DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("Country").FieldCaption("Country").Add(); rows.FieldName("State").FieldCaption("State").Add(); }).Columns(columns => { columns.FieldName("Product").FieldCaption("Product").Add(); }).Values(values => { values.FieldName("Amount").Add(); values.FieldName("Quantity").Add(); }).Filters(filters => { filters.FieldName("Date").FieldCaption("Date").Add(); }))

}

@section PropertiesSection{
    <div id="sampleProperties">
        <div class="prop-grid content">
            <div class="row">
                <div>
                    Data Source
                </div>
            </div>
            <br />
            <div class="row">
                <div class="chkrad">
                    <input type="radio" name="dftView" id="rdbRelational" checked="checked" /><label for="rdbRelational" class="clslab">Relational</label>
                    <input type="radio" name="dftView" id="rdbOlap" /><label for="rdbOlap" class="clslab">OLAP</label>
                </div>
            </div>
        </div>
    </div>
    </div>
}

