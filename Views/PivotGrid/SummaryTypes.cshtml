@section SampleHeading{ <span class="sampleName">PivotGrid-Summary Types-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo for Syncfusion Essential JS1 for ASP.NET MVC pivot grid control allows changing of aggregation types like maximum, minimum, sum, and average">
}


@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.Olap;
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/ej.web.all.min.js")" type="text/javascript"></script>
}
@section StyleSection{
    <style>
        #PivotGrid1 {
            width: 100%;
            height: 350px;
            overflow: auto;
        }
        .row .cols-prop-area {
            min-height: 140px;
            width: 20%;
        }
                 .row .cols-sample-area
         {
             float:left;
             width:75%;
         }
        .summarTypes {
            float: left;
            margin-left: -6px;
        }

        #drpdwn_input_wrapper {
            width: 60px;
        }
        #CodeViewTab ul > li:first-child + li{
            display:none;
        }
    </style>
}

@section ScriptSection{
    <script type="text/javascript">
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
            $("#Amount,#Quantity").ejDropDownList({
                width: "80px"
            });
            ddlTarget = $('#Amount').data("ejDropDownList");
            ddlTarget.selectItemByText(ddlTarget.items[0].innerHTML);
            ddlTarget1 = $('#Quantity').data("ejDropDownList");
            ddlTarget1.selectItemByText(ddlTarget1.items[0].innerHTML);
            $("#Amount,#Quantity").ejDropDownList("option", "change", "onChange");
            pivotGrid = $('#PivotGrid1').data("ejPivotGrid");

        });
        function onLoad(args) {
            args.model.dataSource.data = pivot_dataset;
        }

        function onChange(args) {
            var selectedValue = this._id;
            $.grep(pivotGrid.model.dataSource.values, function (item) { return item.fieldName == selectedValue; })[0]["summaryType"] = args.text.toLowerCase();
            pivotGrid._populatePivotGrid();
        }
        window.loadPivotGridFrameTheme = function () {
            window.setTimeout(function () {
                var pivotGridElement = $("#PivotGrid1").data("ejPivotGrid");
                if (pivotGridElement && pivotGridElement.model.enableGroupingBar && pivotGridElement.getJSONRecords() != null)
                    pivotGridElement.renderControlFromJSON();
            }, 2500);
        }
    </script>
}
@section ControlsSection{
    @Html.EJ().Pivot().PivotGrid("PivotGrid1").ClientSideEvents(clientSideEvents => clientSideEvents.Load("onLoad")).DataSource(dataSource => dataSource.Rows(rows => { rows.FieldName("Country").FieldCaption("Country").Add(); rows.FieldName("State").FieldCaption("State").Add(); }).Columns(columns => { columns.FieldName("Product").FieldCaption("Product").Add(); }).Values(values => { values.FieldName("Amount").Add(); values.FieldName("Quantity").Add(); }))

}

@section PropertiesSection{
<div id="sampleProperties">
    <div class="prop-grid content">
        <div class="row" style=" margin-right: 5px !important;">
            <div class="col-md-3 aligntop; margin-top:15px">
                Amount
            </div>
            <div class="summarTypes">
                <select id="Amount">
                    <option>Sum</option>
                    <option>Average</option>
                    <option>Count</option>
                    <option>Min</option>
                    <option>Max</option>
                </select>
            </div>

        </div>
        <div class="row" style=" margin-right: 5px !important;">
            <div class="col-md-3 aligntop; margin-top:15px">
                Quantity
            </div>
            <div class="summarTypes">
                <select id="Quantity">
                    <option>Sum</option>
                    <option>Average</option>
                    <option>Count</option>
                    <option>Min</option>
                    <option>Max</option>
                </select>
            </div>

        </div>
    </div>
</div>



}

