@section SampleHeading{
    <span class="sampleName">KanbanBoard-Dialog-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
   <meta name="description" content="This example demonstrates how to edit data using a dialog box and insert, update, and delete cards in the Syncfusion ASP.NET MVC Kanban component.">
}
@using Syncfusion.JavaScript.Models;
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
}
    @section ControlsSection{
    @(Html.EJ().Kanban("Kanban")
                   .DataSource((IEnumerable<object>)ViewBag.datasource)
                   .Columns(col =>
                   {
                       col.HeaderText("Backlog").Key("Open").ShowAddButton(true).Add();
                       col.HeaderText("In Progress").Key("InProgress").Add();
                       col.HeaderText("Testing").Key("Testing").Add();
                       col.HeaderText("Done").Key("Close").Add();
                   })
                   .CustomToolbarItems(cus =>
                               {
                                   cus.Template("#Delete").Add();
                               })
                               .EnableTouch(true)

                                  .EditSettings(edit =>
                          {
                              edit.AllowAdding(true)
                                  .AllowEditing(true)                                  
                                  .EditItems(e =>
                                  {
                                      e.Field("Id").ValidationRules(rule => { rule.AddRule("required", true).AddRule("number", true); }).Add();
                                      e.Field("Status").EditType(KanbanEditingType.Dropdown).Add();
                                      e.Field("Assignee").EditType(KanbanEditingType.Dropdown).Add();
                                      e.Field("Estimate").EditType(KanbanEditingType.Numeric).NumericEditOptions(new EditorProperties() { DecimalPlaces = 2 }).ValidationRules(rule => { rule.AddRule("range", "[0,1000]"); }).Add();
                                      e.Field("Summary").EditType(KanbanEditingType.TextArea).ValidationRules(rule => { rule.AddRule("required", true); }).Add();
                                  }).EditMode(KanbanEditMode.Dialog);
                          })
                  .AllowTitle(true)
                  .AllowSelection(true)
                  .KeyField("Status")
                         .ClientSideEvents(eve => { 
                                    eve
                                 .ToolBarClick("toolbarClick")
                                 .ActionComplete("complete");
                         })
                         
                  .Fields(field =>
                  {
                      field.Color("Type")
                           .Content("Summary")
                           .ImageUrl("ImgUrl")
                           .PrimaryKey("Id");

                  })
    )

}
@section PropertiesSection{
<div class="row">
    <div class="col-md-3">
        Edit mode
    </div>
    <div id="ddl1">
        <ul>
            <li value="dialog">Dialog Mode</li>
            <li value="dialogtemplate">Template Mode</li>
        </ul>
    </div>
    <div class="col-md-3">
        @(Html.EJ().DropDownList("kanbanEditMode")
                .TargetID("ddl1")
                .Width("120px")
                .SelectedItemIndex(0)
                .ClientSideEvents(eve => { eve.Change("selectChange"); })
        )
    </div>
</div>
}
@section ScriptSection{
<script id="Delete" type="text/template">
    <a class="e-customdelete  e-icon" />
</script>
    <script id="template" style="display: none" type="text/template">

   <table cellspacing="10" style="border-spacing: 11px;">
        <tr>
            <td style="text-align: right;">
                Id
            </td>
            <td style="text-align: left">
                <input id="Id" name="Id" value="{{: Id}}" class="e-field e-ejinputtext valid e-disable" style="text-align: right; width: 175px; height: 28px" disabled="disabled" />
            </td>
            <td style="text-align: right;">
                Status
            </td>
            <td style="text-align: left">
                <select id="Status" name="Status">
                    <option value="Close">Close</option>
                    <option value="InProgress">InProgress</option>
                    <option value="Open">Open</option>
                    <option value="Testing">Testing</option>
                </select>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">
                Estimate
            </td>
            <td style="text-align: left">
                <input type="text" id="Estimate" name="Estimate" value="{{:Estimate}}" />
            </td>
            <td style="text-align: right;">
                Assignee
            </td>
            <td style="text-align: left">
                <select id="Assignee" name="Assignee">
                    <option value="Nancy Davloio">Nancy Davloio</option>
                    <option value="Andrew Fuller">Andrew Fuller</option>
                    <option value="Janet Leverling">Janet Leverling</option>
                    <option value="Margaret hamilt">Margaret hamilt</option>
                    <option value="Steven walker">Steven walker</option>
                    <option value="Michael Suyama">Michael Suyama</option>
                    <option value="Robert King">Robert King</option>
                    <option value="Laura Callahan">Laura Callahan</option>
                </select>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">
                Tags
            </td>
            <td style="text-align: left">
                <input id="Tags" name="Tags" value="{{: Tags}}" class="e-field e-ejinputtext valid" style="width: 175px; height: 28px" />
            </td>
            <td style="text-align: right;">
                Priority
            </td>
            <td style="text-align: left">
                <select id="Priority" name="Priority">
                    <option value="Low">Low</option>
                    <option value="High">High</option>
                    <option value="Critical">Critical</option>
                    <option value="Normal">Normal</option>
                    <option value="Release Breaker">Release Breaker</option>
                </select>
            </td>
        </tr>
        <tr>
            <td style="text-align: right;">
                Summary
            </td>
            <td style="text-align: left">
                <textarea id="Summary" name="Summary" class="e-ejinputtext" value="{{: Summary}}" style="width: 270px; height: 95px">{{: Summary}}</textarea>
            </td>
        </tr>
    </table>
    
</script>

    <script type="text/javascript">
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
        });
        function selectChange(args) {
            if (this.getSelectedValue() == "dialogtemplate")
                $("#Kanban").ejKanban("option", { "editSettings": { editMode: this.getSelectedValue(), dialogTemplate: "#template" } });
            else
                $("#Kanban").ejKanban("option", { "editSettings": { editMode: this.getSelectedValue() } });
        }
        function complete(args) {
            if ((args.requestType == "beginedit" || args.requestType == "add") && args.model.editSettings.editMode == "dialogtemplate") {
                $("#Estimate").ejNumericTextbox({ value: parseFloat($("#Estimate").val()), width: "175px", height: "34px", decimalPlaces: 2 });
                $("#Assignee").ejDropDownList({ width: '175px' });
                $("#Status").ejDropDownList({ width: '175px' });
                $("#Priority").ejDropDownList({ width: '175px' });
                if (args.requestType == "beginedit" || args.requestType == "add") {
                    $("#Assignee").ejDropDownList("setSelectedValue", args.data['Assignee']);
                    $("#Priority").ejDropDownList("setSelectedValue", args.data['Priority']);
                    $("#Status").ejDropDownList("setSelectedValue", args.data['Status']);
                }
                $(".e-field").css({ 'width': '175px', 'text-align': 'left' });
            }
        }
        
        function toolbarClick(args) {
            if (args.itemName == "Delete" && this.element.find(".e-kanbancard").hasClass("e-cardselection")) {
                var selectedcard = this.element.find(".e-cardselection");
                this.KanbanEdit.deleteCard(selectedcard.attr("id"));
            }
                       
        }
    </script>
}
@section StyleSection{
    <style type="text/css" class="cssStyles">
       .e-customdelete:before {
            content: "\e800";
            line-height: 26px;
            min-height: 26px;
            min-width: 14px;
            display: inline-block;
        }
    </style>
}
 

