@using Syncfusion.JavaScript.Models
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
}
@section MetaTags{
    <meta name="description" content="This demo explains how to update bulk data changes to data source using Batch Edit mode in Syncfusion ASP.NET MVC DataGrid control.">
}
@section SampleHeading{<span class="sampleName">Grid-Batch Editing-ASP.NET MVC-SYNCFUSION</span>}
@section ControlsSection{
    @(Html.EJ().Grid<object>("Editing")
        .Datasource(ds=>ds.URL("BatchDataSource").BatchURL("BatchUpdate").Adaptor(AdaptorType.UrlAdaptor))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.Batch); })
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
            });
        })
        .AllowPaging()
        .Columns(col =>
        {
            col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(90).ValidationRules(v => v.AddRule("required", true).AddRule("number", true)).Add();
            col.Field("CustomerID").HeaderText("Customer ID").Width(90).ValidationRules(v => v.AddRule("required", true).AddRule("minlength", 3)).Add();
            col.Field("EmployeeID").HeaderText("Employee ID").EditType(EditingType.DropdownEdit).DataSource((List<object>)ViewData["EmployeeID"]).TextAlign(TextAlign.Right).Width(80).Add();
            col.Field("Freight").HeaderText("Freight").TextAlign(TextAlign.Right).Width(80).EditType(EditingType.NumericEdit).Format("{0:C}").NumericEditOptions(new EditorProperties() { DecimalPlaces = 2 }).ValidationRules(v => v.AddRule("range", "[0,1000]")).ValidationRules(v => v.AddRule("required", true).AddRule("range", "[0,1000]")).Add();
            col.Field("ShipName").HeaderText("ShipName").Width(150).ValidationRules(v => v.AddRule("required", true)).Add();
            col.Field("ShipCountry").HeaderText("ShipCountry").EditType(EditingType.DropdownEdit).DataSource((List<object>)ViewData["ShipCountry"]).Width(90).Add();
            col.Field("Employee.Address").HeaderText("Address").Width(110).Add();
        }))
    
}

