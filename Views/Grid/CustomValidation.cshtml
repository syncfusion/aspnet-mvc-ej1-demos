@using Syncfusion.JavaScript.Models
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
   
}
@section SampleHeading{<span class="sampleName">Grid-Custom Validation-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo explains how to show custom validation message for a column when saving an added or edited record in Syncfusion ASP.NET MVC DataGrid control.">
}
@section ControlsSection{
    @(Html.EJ().Grid<EditableOrder>("CustomValidation")
        .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.dataSource).UpdateURL("CustomUpdate").InsertURL("CustomInsert").RemoveURL("CustomDelete").Adaptor(AdaptorType.RemoteSaveAdaptor))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing(); })
        .ToolbarSettings(toolbar =>
         {
             toolbar.ShowToolbar().ToolbarItems(items =>
               {
                   items.AddTool(ToolBarItems.Add);
                   items.AddTool(ToolBarItems.Edit);
                   items.AddTool(ToolBarItems.Delete);
                   items.AddTool(ToolBarItems.Update);
                   items.AddTool(ToolBarItems.Cancel);
               });
         })
         .AllowPaging()
         .Columns(col =>
            {
                col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(85).ValidationRules(v => v.AddRule("required", true).AddRule("number", true)).Add();
                col.Field("CustomerID").HeaderText("Customer ID").Width(90).EditType(EditingType.StringEdit).ValidationRules(v => v.AddRule("customRegex", 5)).Add();
                col.Field("EmployeeID").HeaderText("Employee ID").TextAlign(TextAlign.Right).EditType(EditingType.DropdownEdit).Width(80).Add();
                col.Field("Freight").HeaderText("Freight").TextAlign(TextAlign.Right).Width(80).EditType(EditingType.NumericEdit).Format("{0:C}").ValidationRules(rule => rule.AddRule("customCompare", new List<object>() { 0, 1000 })).NumericEditOptions(new EditorProperties() { DecimalPlaces = 2 }).Add();
                col.Field("ShipCity").HeaderText("Ship City").Width(90).Add();
                col.Field("ShipName").HeaderText("Ship Name").Width(130).Add();
            })
         )
}

@section ScriptSection{
    <script type="text/javascript">
    $(function () {
        $.validator.addMethod("customCompare", function (value, element, params) {
            return element.value > params[0] && element.value < params[1];
        }, "Freight value must be between 0 and 1000");

        $.validator.addMethod("customRegex", function (value, element, params) {
            if (element.value.length == params)
                return true;
            return false;
        }, "Customer ID must be 5 characters");
    });
</script>
    }

