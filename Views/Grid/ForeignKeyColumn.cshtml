@using Syncfusion.JavaScript.Models
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

}
@section SampleHeading{<span class="sampleName">Grid-Foreign Key Column-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo explains how to bind look up dataSource for a column in Syncfusion ASP.NET MVC DataGrid control.">
}
@section ControlsSection{
    @(Html.EJ().Grid<OrdersView>("ForeignKey")
        .Datasource((IEnumerable<object>)ViewBag.dataSource1)
        .AllowPaging()
        .AllowGrouping()
        .AllowFiltering()
        .FilterSettings(filter => { filter.FilterType(FilterType.Menu); })
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing(); })
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
            });
        })
        .Columns(col =>
        {
            col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).ValidationRules(v=> v.AddRule("required",true).AddRule("number",true)).Width(90).Add();
            col.Field("CustomerID").HeaderText("Customer ID").Width(80).ValidationRules(v => v.AddRule("required", true).AddRule("minlength",3)).Add();
            col.Field("EmployeeID").HeaderText("Employee Name").ForeignKeyField("EmployeeID")
               .ForeignKeyValue("FirstName").DataSource((IEnumerable<object>)ViewBag.dataSource2)
               .TextAlign(TextAlign.Left).Width(90).Add();
            col.Field("Freight").HeaderText("Freight").TextAlign(TextAlign.Right).Width(75).Format("{0:C}").EditType(EditingType.NumericEdit).NumericEditOptions(new EditorProperties() { DecimalPlaces = 2 }).ValidationRules(v=>v.AddRule("required",true).AddRule("range","[0,1000]")).Add();
            col.Field("ShipCity").HeaderText("Ship City").Width(80).ValidationRules(v => v.AddRule("required", true)).Add();
            col.Field("ShipCountry").HeaderText("Ship Country").Width(80).Add();
        }).ClientSideEvents(eve =>
        {
            eve.Create("create");
        })
    )
}
@section ScriptSection{
    <script type="text/javascript">
        function create(args) {
            $("#ForeignKey").find(".e-filterDialoge").ejDialog({
                beforeOpen: function open(args) {
                    if ($("#controlarea").width() < this.model.position.X)
                        $("#" + this._id + "_wrapper").css("margin-left", -30);
                    else
                        $("#" + this._id + "_wrapper").css("margin-left", 0)
                }
            });
        }
    </script>
    }

