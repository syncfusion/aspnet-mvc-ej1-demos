@using Syncfusion.JavaScript.Models
@section ScriptReferenceSection{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
}
@section SampleHeading{<span class="sampleName">Grid-Edit Template-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo explains how create a custom editor control for the datagrid cells when a row is edited in Syncfusion ASP.NET MVC DataGrid">
}
@section ControlsSection{
    @(Html.EJ().Grid<OrdersView>("Edittemplate")
        .Datasource((IEnumerable<object>)ViewBag.datasource)
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing(); })
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
            });
        })
        .AllowPaging()
        .Columns(col =>
        {
            col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(90).ValidationRules(v => v.AddRule("required", true).AddRule("number", true)).Add();
            col.Field("CustomerID").HeaderText("Customer ID").EditTemplate(a => { a.Create("create").Read("read").Write("write"); }).TextAlign(TextAlign.Right).Width(90).ValidationRules(v => v.AddRule("required", true)).Add();
            col.Field("EmployeeID").HeaderText("Employee ID").Width(90).EditType(EditingType.DropdownEdit).Add();
            col.Field("Freight").HeaderText("Freight").TextAlign(TextAlign.Right).Width(80).EditType(EditingType.NumericEdit).Format("{0:C}").NumericEditOptions(new EditorProperties() { DecimalPlaces = 2 }).ValidationRules(v => v.AddRule("range", "[0,1000]")).Add();
            col.Field("ShipName").HeaderText("ShipName").Width(90).Add();
            col.Field("ShipCountry").HeaderText("ShipCountry").Width(90).EditType(EditingType.DropdownEdit).Add();
        })
    )
}
@section ScriptSection{
 <script type="text/javascript">
    function create() {
        return $("<input>");
    }

    function write(args) {
        obj = $('#Edittemplate').ejGrid('instance');
        var data = ej.DataManager(obj.model.dataSource).executeLocal(new ej.Query().select("CustomerID"));
        args.element.ejAutocomplete({ width: "100%", dataSource: data, enableDistinct: true, value: args.rowdata !== undefined ? args.rowdata["CustomerID"] : "" });
    }

    function read(args) {
		args.ejAutocomplete('suggestionList').css('display', 'none');
        return args.ejAutocomplete("getValue");
    }
    $("#Edittemplate").keyup(function (e) {
        if (e.keyCode == 40 && $(e.target).hasClass("e-autocomplete")) {
            var autocomp = $("#EdittemplateCustomerID").ejAutocomplete("instance")
            if (autocomp.getValue() != "" && autocomp.getActiveText() != "No suggestions")
                $(e.target).val(autocomp.getActiveText());
        }
    });
</script>
}

