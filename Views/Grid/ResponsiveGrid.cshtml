@using Syncfusion.JavaScript.Models
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
        <link href="@Url.Content("~/Content/ejthemes/ej.widgets.core.min.css")" rel="stylesheet" />
        <link href="@Url.Content("~/Content/ejthemes/flat-saffron/ej.theme.min.css")" rel="stylesheet" />
        <link href="@Url.Content("~/Content/ejthemes/responsive-css/ej.responsive.css")" rel="stylesheet" />
        <link href="@Url.Content("~/Content/ejthemes/responsive-css/ejgrid.responsive.css")" rel="stylesheet" />
        <script src="@Url.Content("~/Scripts/jquery-1.11.3.min.js")"></script>
		<script src="@Url.Content("~/Scripts/jquery.easing-1.3.min.js")"></script>
        <script src="@Url.Content("~/Scripts/jsrender.min.js")"></script>
		 <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
        <script src="@Url.Content("~/Scripts/jquery.globalize.min.js")"></script>
        <script src="@Url.Content("~/Scripts/ej.web.all.min.js")"></script>
		  <script type="text/javascript">
        $(function () {
            var browserDetails = ej.browserInfo();
            if (!(browserDetails.name == "msie" && parseInt(browserDetails.version, 10) < 9)) {
                window.addEventListener('message', function (e) {
                    if (typeof e.data == "boolean") {
                        var gridObj = $("#FlatGrid").data('ejGrid');
                        $("#FlatGrid").ejGrid("model.enableResponsiveRow", e.data);
						var obj = $("#FlatGrid").ejGrid("instance");
						if(obj.model.isEdit)
							obj.cancelEdit();
                                 $("#FlatGrid").ejGrid("model.enableResponsiveRow", e.data);
                    }
                    else {
                        var links = $(document.head || document.getElementsByTagName('head')[0]).find("link");
                        for (var i = 0; i < links.length; i++) {
                            if (links[i].href.indexOf("ej.theme.min.css") != -1) {
                                var cssref = links[i].href,
                                    serverconfig = cssref.substr(0, cssref.indexOf("Content") - 1),
                                    fileref = $('<link rel="stylesheet" type="text/css" href="' + serverconfig + window.parent.themes[e.data.split('_')[1]] + '" />');
                                $(fileref).insertAfter(links[i]);
                                $(links[i]).remove();
                                break;
                            }
                        }

                    }
                });
            }
        });
        function ActionComplete() {
            var gridObj = $("#FlatGrid").ejGrid("instance");
			this.getContent().addClass("e-widget"); 
            var browserDetails = gridObj.getBrowserDetails();
            if (browserDetails.browser == "msie" && parseInt(browserDetails.version, 10) <= 9)
                $("#FlatGrid").ejGrid("model.enableResponsiveRow", false);
        }
    </script>
  
</head>
<body>
    @(Html.EJ().Grid<OrdersView>("FlatGrid")
              .Datasource((IEnumerable<object>)ViewBag.datasource)
              .AllowPaging()
              .IsResponsive(true)
              .EnableResponsiveRow(true)
			  .ScrollSettings(sc=>sc.Height(307))
              .ClientSideEvents(eve=>eve.ActionComplete("ActionComplete"))
              .MinWidth(700)
              .PageSettings(p => p.PageCount(3).PageSize(7))
			  .EditSettings(d => d.AllowAdding(true).AllowDeleting(true).AllowEditing(true).EditMode(EditMode.Normal))
              .ToolbarSettings(toolbar =>
              {
                  toolbar.ShowToolbar().ToolbarItems(items =>
                  {
                      items.AddTool(ToolBarItems.Add);
                      items.AddTool(ToolBarItems.Edit);
                      items.AddTool(ToolBarItems.Delete);
                      items.AddTool(ToolBarItems.Update);
                      items.AddTool(ToolBarItems.Cancel);
                  });
              })
              .Columns(col =>
              {
                  col.Field("OrderID").HeaderText("Order ID").Width("90").IsPrimaryKey(true).ValidationRules(v => v.AddRule("required", true).AddRule("number", true)).TextAlign(TextAlign.Right).Add();
                  col.Field("CustomerID").HeaderText("Customer ID").Width("100").ValidationRules(v => v.AddRule("required", true).AddRule("minlength", 3)).Add();
                  col.Field("EmployeeID").HeaderText("Employee ID").EditType(EditingType.DropdownEdit).TextAlign(TextAlign.Right).Width("100").Add();           
                  col.Field("Freight").HeaderText("Freight").TextAlign(TextAlign.Right).Width("120").EditType(EditingType.NumericEdit).Format("{0:C}").NumericEditOptions(new EditorProperties() { DecimalPlaces = 2 }).Add();
				  col.Field("ShipCountry").HeaderText("Ship Country").Width("130").EditType(EditingType.DropdownEdit).Add();
				  
              }))
    @Html.EJ().ScriptManager()
</body>
</html>
