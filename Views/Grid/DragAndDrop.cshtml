@section SampleHeading{<span class="sampleName">Grid-Drag-and-Drop-ASP.NET MVC-SYNCFUSION</span>}
@section MetaTags{
    <meta name="description" content="This demo explains how to drag and drop rows from one datagrid to another datagrid or any other custom control using Syncfusion ASP.NET MVC DataGrid control.">
}
@section ControlsSection{
<script type="text/x-jsrender" id="pagerTemplate">
    <div class="e-pagercontainer">
        <div class="e-first e-icon e-mediaback e-firstpagedisabled e-disable" title="Go to first page"></div><div class="e-prev e-icon e-arrowheadleft-2x e-prevpagedisabled e-disable" style="border-right:none" title="Go to previous page"></div>
    </div>
    <div class="e-pagercontainer" style="border-radius:0px">
        <input id="currentPage" class="e-pagercontainer" type="text" style="text-align:center; margin:0px;border:none;width:32px;height:23px" />
    </div>
    <div id="totalPages" class="e-pagercontainer" style="margin-left:2px; margin-bottom:5px;border:none">
        <span></span>
    </div>
    <div class="e-pagercontainer">
        <div class="e-nextpage e-icon e-arrowheadright-2x e-default" title="Go to next page"></div><div class="e-lastpage e-icon e-mediaforward e-default" title="Go to last page"></div>
    </div>
</script>

<div style="float:left;width:50%">
    @(Html.EJ().Grid<OrdersView>("Grid")
        .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.datasource).Adaptor(AdaptorType.RemoteSaveAdaptor))
        .AllowSorting()
        .AllowPaging()
        .SelectionType(SelectionType.Multiple)
        .PageSettings(page=>page.EnableTemplates().Template("#pagerTemplate"))
        .AllowRowDragAndDrop()
        .RowDropSettings(drop => drop.RowDropMapper("RowDropHandler").DropTargetID("#DestGrid"))
        .Columns(col =>
        {
            col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(55).Add();
            col.Field("CustomerID").HeaderText("Customer ID").Width(70).Add();
            col.Field("EmployeeID").HeaderText("Employee ID").TextAlign(TextAlign.Right).Width(70).Add();
            col.Field("Freight").HeaderText("Freight").TextAlign(TextAlign.Right).Width(55).Add();
        })
        .ClientSideEvents(eve => { eve.RowDrag("rowDrag").RowDragStart("rowDragStart").RowDrop("rowDrop").ActionComplete("complete"); })
)
    </div>
<div style="float:right;width:49%">
    @(Html.EJ().Grid<OrdersView>("DestGrid")
        .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.datasource2).Adaptor(AdaptorType.RemoteSaveAdaptor))
        .AllowSorting()
        .AllowPaging()
        .SelectionType(SelectionType.Multiple)
        .PageSettings(page=>page.EnableTemplates().Template("#pagerTemplate"))
        .ClientSideEvents(eve => { eve.RowDrag("rowDrag").RowDragStart("rowDragStart").RowDrop("rowDrop").ActionComplete("complete"); })
        .AllowRowDragAndDrop()
        .RowDropSettings(drop => drop.RowDropMapper("RowDropHandler").DropTargetID("#Grid"))
        .Columns(col =>
        {
            col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).TextAlign(TextAlign.Right).Width(50).Add();
            col.Field("CustomerID").HeaderText("Customer ID").Width(70).Add();
            col.Field("EmployeeID").HeaderText("Employee ID").TextAlign(TextAlign.Right).Width(70).Add();
            col.Field("Freight").HeaderText("Freight").TextAlign(TextAlign.Right).Width(50).Add();
        }))
    </div>
}
<style>
  .e-pager a {
     display: inline-block;
   }
   #currentPage
   {
     background-color: white;
   }
  .darktheme #currentPage {
     background-color: black;
   }
  .e-pager .e-pagercontainer {
     margin: 0px;
     margin-left: 6px;
   } 
  .e-pagercontainer .e-icon {
     display: inline-block;
     height: 8px;
   }
</style>
@section EventsDropDown{
    
}

@section ScriptSection{
    <script type="text/javascript">
        function complete(args) {
            this.element.find("#totalPages").find('span').text('of ' + this.model.pageSettings.totalPages);
            if (this.initialRender)
                this.element.find("#currentPage").val(1);
            this.element.find(".e-pagercontainer:first").css('border-style', 'none');
            if (args.requestType == 'paging') {
                if (this.model.pageSettings.currentPage == this.model.pageSettings.totalPages) {
                    this.element.find('.e-nextpage').addClass('e-nextpagedisabled').removeClass('e-nextpage');
                    this.element.find('.e-lastpage').addClass('e-lastpagedisabled').removeClass('e-lastpage');
                }
                else {
                    this.element.find('.e-nextpagedisabled').addClass('e-nextpage').removeClass('e-nextpagedisabled');
                    this.element.find('.e-lastpagedisabled').addClass('e-lastpage').removeClass('e-lastpagedisabled');
                }
                if (this.model.pageSettings.currentPage == 1) {
                    this.element.find('.e-prevpage').addClass('e-prevpagedisabled e-disable').removeClass('e-prevpage');
                    this.element.find('.e-firstpage').addClass('e-firstpagedisabled e-disable').removeClass('e-firstpage');
                }
                else {
                    this.element.find('.e-prevpagedisabled').addClass('e-prevpage').removeClass('e-prevpagedisabled e-disable');
                    this.element.find('.e-firstpagedisabled').addClass('e-firstpage').removeClass('e-firstpagedisabled e-disable');
                }
                this.element.find("#currentPage").val(this.model.pageSettings.currentPage);
            }
            if (this.model.pageSettings.totalPages!= null)
                this.element.find(".e-pager").css("display", "block");
            else
                this.element.find(".e-pager").css("display", "none");
        }
        function rowDrag(args) {
            jQuery.addEventLog("Grid <span class='eventTitle'>rowDrag</span> event called");
        }
        function rowDragStart(args) {
            jQuery.addEventLog("Grid <span class='eventTitle'>rowDragStart</span> event called");
        }
        function rowDrop(args) {
            jQuery.addEventLog("Grid <span class='eventTitle'>rowDrop</span> event called");
        }
        function onClear() {
            $("#EventLog").html("");
        }
    </script>
}

