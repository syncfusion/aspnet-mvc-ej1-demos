@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">Chart-Data Editing-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
    <meta name="description" content="This sample demonstrates how to perform drag and drop in chart using Syncfusion ASP.NET MVC Chart Control">
}

@section ControlsSection{
<div>
    @(Html.EJ().Chart("Chart1")
            .PrimaryXAxis(pr => pr.ValueType(AxisValueType.Datetime).LabelFormat("MMM/yyyy").Title(tit => tit.Text("Months"))
                                 .IntervalType(ChartIntervalType.Months).EdgeLabelPlacement(EdgeLabelPlacement.Shift).
                                 Range(ra => ra.Min(new DateTime(2015, 01, 01)).Max(new DateTime(2015, 05, 01)).Interval(1)))
            .PrimaryYAxis(yaxis => yaxis.Title(tit => tit.Text("Sales Count")).Range(rn => rn.Min(500).Max(1500).Interval(100)))
            .CommonSeriesOptions(cm => cm.EnableAnimation(true).Type(SeriesType.Line).Marker(mr => mr.Visible(true))
            .Tooltip(tt => tt.Visible(true)).DragSettings(dr => dr.Enable(true)))
            .Series(sr =>
                {
                    sr.Points(pt =>
                        {
                            pt.X("2015/ 01/ 01").Y(950).Size(9.5).Add();
                            pt.X("2015/ 02/ 01").Y(1200).Size(12).Add();
                            pt.X("2015/ 03/ 01").Y(1000).Size(10).Add();
                            pt.X("2015/ 04/ 01").Y(1350).Size(13.5).Add();
                            pt.X("2015/ 05/ 01").Y(1150).Size(11.5).Add();                            
                        }).Name("Product 1").Add();
						sr.Points(pt =>
                        {
                            pt.X("2015/ 01/ 01").Y(700).Size(7).Add();
                            pt.X("2015/ 02/ 01").Y(900).Size(9).Add();
                            pt.X("2015/ 03/ 01").Y(800).Size(8).Add();
                            pt.X("2015/ 04/ 01").Y(1050).Size(10.5).Add();
                            pt.X("2015/ 05/ 01").Y(950).Size(9.5).Add();
                        }).Name("Product 2").Add();
                        
                })
            .Title(title => title.Text("Sales Prediction of Products"))
            .IsResponsive(true)
            .Load("loadTheme")
            .Size(sz => sz.Height("600"))
            .Legend(lg => {lg.Visible(true);})
    )
</div>
   }
@section PropertiesSection
{
    <div class="prop-grid">

        <div class="row" style="margin: 10px 0;">
            <div class="col-md-3">
                Allow Drag
            </div>
            <div class="col-md-3 aligntop">
                <input type="checkbox" checked="checked" id="enabledrag" />
            </div>
        </div>
        <div class="row" style="margin: 10px 0;">
            <div class="col-md-3">
                Drag Type
            </div>
            <div class="col-md-3 aligntop">
                <select name="selectIndex" autocomplete="off" id="dragtype" style="width:100px;">
                    <option value="XY">XY</option>
                    <option value="X">X</option>
                    <option value="Y">Y</option>
                </select>
            </div>

        </div>

        <div class="row" style="margin: 10px 0;">
            <div class="col-md-3">
                Series Type
            </div>
            <div class="col-md-3 aligntop">
                <select name="selectIndex" autocomplete="off" id="charttype">
                    <option value=0>Line</option>
                    <option value=1>Spline</option>
                    <option value=2>Area</option>
                    <option value=3>Column</option>
                    <option value=4>Bar</option>
                    <option value=5>Bubble</option>
                    <option value=6>Scatter</option>
                    <option value=7>Step Area</option>
                    <option value=8>Step Line</option>
                    <option value=9>Spline Area</option>
                </select>
            </div>
        </div>

    </div>
}
@section ScriptSection
{
    <script>
       $('#enabledrag').change(function () {
        var chart = $("#Chart1").ejChart("instance");
        for (var i = 0; i < chart.model.series.length; i++) {
            if ($("#enabledrag").is(":checked"))
                chart.model.series[i].dragSettings.enable = true;
            else
                chart.model.series[i].dragSettings.enable = false;
        }
        chart.redraw();
    });
        $('#dragtype').change(function () {
            var option = $("#dragtype option:selected").text();
            $("#Chart1").ejChart("option", { "commonSeriesOptions": { dragSettings: { type: option } } });
        });
        $('#charttype').change(function () {
            var option = $("#charttype option:selected").text();
            option = option.replace(/\s/g, '');
            var seriestype = option.toLowerCase();
            $("#Chart1").ejChart("option", { "commonSeriesOptions": { type: option } });
            if (seriestype == "bar" || seriestype == "column" || seriestype == "bubble")
                $("#Chart1").ejChart("option", { "commonSeriesOptions": { marker: { visible: false } } });
            else if (seriestype == "scatter")
                $("#Chart1").ejChart("option", { "commonSeriesOptions": { marker: { size: { height: 10, width: 10 } } } });
            else
                $("#Chart1").ejChart("option", { "commonSeriesOptions": { marker: { visible: true, size: { height: 6, width: 6 } } } });
        });
        $("#sampleProperties").ejPropertiesPanel();
    </script>


}



