@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">Chart-Stacked Column-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
    <meta name="description" content="This sample demonstrates how to render 3D stacked column series using Syncfusion ASP.NET MVC Chart Control">
}

@section ControlsSection{
    <div>
        @(Html.EJ().Chart("container")
              .PrimaryXAxis(pr => pr.Range(rg => rg.Min(2005).Max(2013).Interval(1))
              .AxisLine(ax => ax.Visible(false)).MajorGridLines(mgl => mgl.Visible(true).Color("#a9a9a9").Opacity(0.12)))
              .PrimaryYAxis(pr => pr.Title(tl => tl.Text("Millions")).MajorGridLines(mgl => mgl.Visible(true).Color("#a9a9a9").Opacity(0.12)))
              .CommonSeriesOptions(cr => cr.Type(SeriesType.StackingColumn).Tooltip(tt => tt.Visible(true)
              .Format(" #series.name#  <br/> Year #point.x# : #point.y# Millions")))
              .Series(sr =>
            {
                sr.Points(pt =>
                    {
                        pt.X("2006").Y(8).Add();
                        pt.X("2007").Y(5).Add();
                        pt.X("2008").Y(4).Add();
                        pt.X("2009").Y(12).Add();
                        pt.X("2010").Y(16).Add();
                        pt.X("2011").Y(6).Add();
                        pt.X("2012").Y(13).Add();
                    }).Name("India").StackingGroup("Asia Continent").Add();
                sr.Points(pt =>
                {
                    pt.X("2006").Y(5).Add();
                    pt.X("2007").Y(6).Add();
                    pt.X("2008").Y(7).Add();
                    pt.X("2009").Y(10).Add();
                    pt.X("2010").Y(14).Add();
                    pt.X("2011").Y(14).Add();
                    pt.X("2012").Y(15).Add();
                }).Name("China").StackingGroup("Asia Continent").Add();
                sr.Points(pt =>
                {
                    pt.X("2006").Y(14).Add();
                    pt.X("2007").Y(14).Add();
                    pt.X("2008").Y(13).Add();
                    pt.X("2009").Y(13).Add();
                    pt.X("2010").Y(13).Add();
                    pt.X("2011").Y(13).Add();
                    pt.X("2012").Y(12).Add();
                }).Name("Canada").StackingGroup("North America Continent").Add();
                sr.Points(pt =>
                {
                    pt.X("2006").Y(17).Add();
                    pt.X("2007").Y(16).Add();
                    pt.X("2008").Y(13).Add();
                    pt.X("2009").Y(10).Add();
                    pt.X("2010").Y(12).Add();
                    pt.X("2011").Y(13).Add();
                    pt.X("2012").Y(14).Add();
                }).Name("USA").StackingGroup("North America Continent").Add();
            })
        .Load("onchartload")
        .Title(t => t.Text("Passenger Car Sales"))
        .Depth(100)
        .WallSize(2)
        .Tilt(0)
        .Rotation(34)
        .PerspectiveAngle(90)
        .SideBySideSeriesPlacement(true)
        .IsResponsive(true)
        .EnableRotation(true)
        .Enable3D(true)
        .Size(sz => sz.Height("600"))
        .Legend(lg => { lg.Visible(true); })
        )
    </div>
}
@section ScriptSection
{
    <script>
        function onchartload(sender) {
            loadTheme(sender);
            sender.model.primaryXAxis.majorGridLines.color = "#a9a9a9";
            sender.model.primaryXAxis.majorGridLines.opacity = 0.12;
            sender.model.primaryYAxis.majorGridLines.color = "#a9a9a9";
            sender.model.primaryYAxis.majorGridLines.opacity = 0.12;
        }
        $("#controlarea").css("visibility", "visible");
    </script>
}

