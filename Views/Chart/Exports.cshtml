@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">Chart-Export and Print-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
    <meta name="description" content="This sample demonstrates how to export using Syncfusion ASP.NET MVC Chart Control">
}

@section ControlsSection{
    <div style="height:100%;">
        @(Html.EJ().Chart("container").ChartArea(cr => cr.Border(ab => ab.Color("transparent")))
              .Border(border=>border.Opacity(1))
              .ChartArea(chartarea=>chartarea.Border(border=>border.Opacity(1)))
              .PrimaryXAxis(ax => ax.MajorGridLines(mr => mr.Visible(false)).Title(tl => tl.Text("Manager")))
              .PrimaryYAxis(pr => pr.AxisLine(ax => ax.Visible(false)).Title(tl => tl.Text("Sales")).RangePadding(ChartRangePadding.None)
              .Range(ra => ra.Max(20).Min(0).Interval(2)))
              .Series(sr =>
                  {
                      sr.Points(pt =>
                          {
                              pt.X("John").Y(10).Add();
                              pt.X("Jake").Y(12).Add();
                              pt.X("Peter").Y(18).Add();
                              pt.X("James").Y(11).Add();
                              pt.X("Mary").Y(9.7).Add();
                          }).Name("Person").Type(SeriesType.Column).XName("Xvalue").YName("YValue1").EnableAnimation(true).Tooltip(tl => tl.Visible(true)).Add();
                  })
              .IsResponsive(true)
              .Load("loadTheme")
              .PreRender("preRender")
              .Title(title => title.Text("Sales Comparison"))
              .Size(sz => sz.Height("600"))
              .Legend(lg => { lg.Visible(false); })
              .EnableCanvasRendering(true))

    </div>
}

@section PropertiesSection
{
    <div id="sampleProperties">
        <div class="prop-grid">
            <div class="row">
                <table>
                    <b>Chart properties</b>
                    <tr>
                        <td>Render as Canvas
                        <td />
                        <td><input type="checkbox" checked="checked" id="canvas" /></td>
                    </tr>
                </table>
                <br />
                <table>
                    <b>Exporting options</b>
                    <tr>
                        <td>File name</td>
                        <td><input type="text" id="filename" value="Chart" style="width:100px" size="10"/></td>
                    </tr>
                    <tr>
                        <td>Mode</td>
                        <td>
                            <select id="mode">
                                <option label="Server side" value="server">Server side</option>
                                <option label="Client side" value="client">Client side</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td>Angle</td>
                        <td>
                            <select id="angle">
                                <option label="0" value="0">0</option>
                                <option label="90" value="90">90</option>
                                <option label="-90" value="-90">-90</option>
                                <option label="180" value="180">180</option>
                            </select>
                        </td>
                    <tr />
                    <tr>
                        <td>Orientation</td>
                        <td>
                            <select id="orientation1">
                                <option label="Portrait" value="portrait">Portrait</option>
                                <option label="Landscape" value="landscape">Landscape</option>
                            </select>
                        </td>
                    <tr />
                </table>
                <br />
                <b>Export chart as</b>
                <table>
                    <tr>
                        <td>
                            <a id="downloadpng"><img src="~/Images/chart/export_active/png.png" class="active" id="png" /></a>
                        </td>
                        <td>
                            <a id="downloadjpg"><img src="~/Images/chart/export_active/jpg.png" class="active" id="jpg" /></a>
                        </td>
                        <td>
                            <img src="~/Images/chart/export_active/pdf.png" class="active" id="pdf" onclick="download(this.id)" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <img src="~/Images/chart/export_active/docx.png" class="active" id="docx" onclick="download(this.id)" />
                        </td>
                        <td>
                            <img src="~/Images/chart/export_active/xlsx.png" class="active" id="xlsx" onclick="download(this.id)" />
                        </td>
                        <td>
                            <a id="downloadsvg"><img src="~/Images/chart/export_disabled/svg.png" class="disabled" id="svg" /></a>
                        </td>
                    </tr>
                </table>
				<br />
				<b>Print the chart</b>
				<table>
					<tr>
                        <td>
                            <img src="~/Images/chart/print.png" class="active" id="printChart" onclick="chartPrint()" />
                        </td>
					</tr>
				</table>


            </div>
        </div>
    </div>

}

@section ScriptSection
{
    <script>
        function preRender(sender) {
            if (sender.model.theme.indexOf("light") > -1 || sender.model.theme == "bootstrap" || sender.model.theme == "material" > -1) {
                sender.model.background = "white";
                sender.model.chartArea.background = "white";
            }
            else {
                sender.model.background = "black";
                sender.model.chartArea.background = "black"
            }
        }
        var clientPng = document.getElementById('downloadpng');
        if (clientPng.addEventListener)
            clientPng.addEventListener('click', downloadClient, false);
        else
            clientPng.attachEvent('onclick', downloadClient, false);

        clientPng = document.getElementById('downloadsvg');
        if (clientPng.addEventListener)
            clientPng.addEventListener('click', downloadClient, false);
        else
            clientPng.attachEvent('onclick', downloadClient, false);

        clientPng = document.getElementById('downloadjpg');
        if (clientPng.addEventListener)
            clientPng.addEventListener('click', downloadClient, false);
        else
            clientPng.attachEvent('onclick', downloadClient, false);

        $("#png, #svg, #pdf, #jpg, #xlsx, #docx, #printChart").mouseover(function (e) {
            if ($("#" + e.target.id).hasClass("active"))
                $("#" + e.target.id).css("background-color", "lightgray").css("cursor", "pointer").css("border", "solid 1px black");
            else
                $(".active").css("background-color", "transparent").css("cursor", "default").css("border", "solid 1px transparent");
        }).mouseout(function (e) {
            $(".active").css("background-color", "transparent").css("cursor", "default").css("border", "solid 1px transparent");
        });

        $("#canvas, #mode").change(function () {
            var chart = $("#container").ejChart("instance");
            var mode = $("#mode")[0].value;
            if ($("#canvas").is(":checked")) {
                chart.model.enableCanvasRendering = true;
                if (mode == "server") {
                    $("#svg").attr("src", "../Images/chart/export_disabled/svg.png").removeClass("active").addClass("disabled");
                    $("#png").attr("src", "../Images/chart/export_active/png.png").removeClass("disabled").addClass("active");
                    $("#pdf").attr("src", "../Images/chart/export_active/pdf.png").removeClass("disabled").addClass("active");
                    $("#jpg").attr("src", "../Images/chart/export_active/jpg.png").removeClass("disabled").addClass("active");
                    $("#xlsx").attr("src", "../Images/chart/export_active/xlsx.png").removeClass("disabled").addClass("active");
                    $("#docx").attr("src", "../Images/chart/export_active/docx.png").removeClass("disabled").addClass("active");
                } else {
                    $("#svg").attr("src", "../Images/chart/export_disabled/svg.png").removeClass("active").addClass("disabled");
                    $("#pdf").attr("src", "../Images/chart/export_disabled/pdf.png").removeClass("active").addClass("disabled");
                    $("#xlsx").attr("src", "../Images/chart/export_disabled/xlsx.png").removeClass("active").addClass("disabled");
                    $("#docx").attr("src", "../Images/chart/export_disabled/docx.png").removeClass("active").addClass("disabled");
                    $("#jpg").attr("src", "../Images/chart/export_active/jpg.png").removeClass("disabled").addClass("active");
                    $("#png").attr("src", "../Images/chart/export_active/png.png").removeClass("disabled").addClass("active");
                }
            }
            else {
                chart.model.enableCanvasRendering = false;
                if ($("#mode")[0].value == "server") {
                    $("#svg").attr("src", "../Images/chart/export_active/svg.png").removeClass("disabled").addClass("active");
                    $("#pdf").attr("src", "../Images/chart/export_disabled/pdf.png").removeClass("active").addClass("disabled");
                    $("#xlsx").attr("src", "../Images/chart/export_active/xlsx.png").removeClass("disabled").addClass("active");
                    $("#docx").attr("src", "../Images/chart/export_disabled/docx.png").removeClass("active").addClass("disabled");
                    $("#jpg").attr("src", "../Images/chart/export_disabled/jpg.png").removeClass("active").addClass("disabled");
                    $("#png").attr("src", "../Images/chart/export_disabled/png.png").removeClass("active").addClass("disabled");
                }
                else {
                    $("#svg").attr("src", "../Images/chart/export_active/svg.png").removeClass("disabled").addClass("active");
                    $("#pdf").attr("src", "../Images/chart/export_disabled/pdf.png").removeClass("active").addClass("disabled");
                    $("#xlsx").attr("src", "../Images/chart/export_disabled/xlsx.png").removeClass("active").addClass("disabled");
                    $("#docx").attr("src", "../Images/chart/export_disabled/docx.png").removeClass("active").addClass("disabled");
                    $("#jpg").attr("src", "../Images/chart/export_disabled/jpg.png").removeClass("active").addClass("disabled");
                    $("#png").attr("src", "../Images/chart/export_disabled/png.png").removeClass("active").addClass("disabled");
                }
            }
            chart.redraw();
        });

        function downloadClient() {         // to download chart in client side
            var type = this.id;
            type = (type).indexOf("download") >= 0 ? type.replace("download", "") : type;
            if ($('#mode')[0].value == "client") {
                var chart = $("#container").ejChart("instance"),
                    exporting = chart.model.exportSettings, data, type;
                exporting.fileName = $("#filename").val();
                exporting.angle = $("#angle")[0].value;
                exporting.type = type;
                exporting.mode = $('#mode')[0].value;
                data = chart.export();
                if (window.navigator.msSaveOrOpenBlob) {     // for IE
                    var blob;
                    if (type == "png")
                        blob = data.msToBlob();
                    else if(type == "jpg")
                        blob = data.msToBlob(null, "image/jpeg");
                    else if (type == "svg") {
                        data = decodeURIComponent(data);
                        blob = new Blob([data], { type: "image/svg-xml" });
                    }
                    window.navigator.msSaveOrOpenBlob(blob, exporting.fileName + "." + type);
                }
                else {
                    this.download = exporting.fileName + "." + type;
                    if (type == "png")
                        this.href = data.toDataURL();
                    else if (type == "jpg")
                        this.href = data.toDataURL("image/jpeg");
                    else
                        this.href = "data:text/plain;charset=utf-8," + data;
                }
            } else
                download(type);
        }
        function download(args) {
            var id = args;
            if ($("#" + id).hasClass("active")) {
                var mode = $('#mode')[0].value,
                chart = $("#container").ejChart("instance"),
                exporting = chart.model.exportSettings, data, type;
                exporting.fileName = $("#filename").val();
                exporting.orientation = $('#orientation1')[0].value;
                exporting.angle = $("#angle")[0].value;
                exporting.action = "ExportChart";
                type = exporting.type = id;
                exporting.mode = mode;

                if (mode == "server")
                    chart.export();           // to call export - public method
            }
            return true;
        }
		function chartPrint()
		{
			var chart = $("#container").ejChart("instance");
			chart.print("container");
		}

        $("#sampleProperties").ejPropertiesPanel();
    </script>
}
<style>
    td {
        padding-top: .5em;
        padding-bottom: .5em;
        padding-right: .5em;
    }

    .active, .disabled {
        width: 40px;
        height: 40px;
        border: solid 1px transparent;
    }
</style>

