@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">Chart-Multicolor Line-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
    <meta name="description" content="This sample demonstrates how to render line series with multiple colors using Syncfusion ASP.NET MVC Chart Control">
}

@section ControlsSection{
    <div>
        @(Html.EJ().Chart("container")
      .PrimaryXAxis(prx =>
      {
          prx.Title(tl => { tl.Text("Year"); }) 
              .ValueType(AxisValueType.Datetime);
      })
      .PrimaryYAxis(pry =>
      {
          pry.Title(tl => { tl.Text("Particulate Matter(PM)"); });
              
      })
      .Crosshair(cr =>
      {
          cr.Visible(true).Type(CrosshairType.Trackball).Line(ln => ln.Color("transparent"))
              .Marker(mr => { mr.Shape(ChartShape.Circle).Visible(true).Border(st => { st.Width(1); }); });
      })
      .Series(sr =>
      {
          sr.Type(SeriesType.Line).Name("Rainfall").EnableAnimation(true).Tooltip(tn => tn.Format("#point.x#  : ej.format(#point.y#,n2)")).Add();
          
      })
      .Load("onchartload")
      .IsResponsive(true)
      .Size(sz => sz.Height("600"))
              .Title(title => title.Text("Particulate levels in Rainfall"))
      .Legend(lg => { lg.Visible(false); })
        )
    </div>
}
<script type="text/javascript">
    function onchartload(sender) {
        loadTheme(sender);
        var data = GetData();
        sender.model.series[0].dataSource = data.Open;
        sender.model.series[0].xName = "XValue";
        sender.model.series[0].yName = "YValue";
        sender.model.series[0].pointColorMappingName = "color";
    }
    function GetData() {
        var series1 = [];
        var value = 0;
        var color = ["red", "green", "fuchsia", "crimson", "blue", "darkorange", "deepskyblue", "mediumvioletred", "violet", "peru", "gray", "deeppink", "navy"];
        for (var i = 0	; i < 201; i++) {
            if (Math.random() > .5) {
                value += Math.random();
            } else {
                value -= Math.random();
            }
            var point = { XValue: new Date(1998, i + 10, i), YValue: value, color: color[Math.floor(i / 16)] };
            series1.push(point);
        }
        var data = { Open: series1 };
        return data;
    }
    $("#controlarea").css("visibility", "visible");
</script>




