
@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">Chart-Multi-level Labels-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
    <meta name="description" content="This sample demonstrates how to render multi level labels using Syncfusion ASP.NET MVC Chart Control">
}

@section ControlsSection{ 
<div>
@(Html.EJ().Chart("container")
    .PrimaryXAxis(prx =>
    prx.Title(title => title.Text("Months")).MajorTickLines(major => major.Visible(false)).LabelBorder(label=>label.Width(1))
    .MultiLevelLabels(multiLevelLabels=> {
        multiLevelLabels.Visible(true).Text("Quater 1").Start(-0.5).End(2.5).Add();
        multiLevelLabels.Visible(true).Text("Quater 2").Start(2.5).End(5.5).Add();
        multiLevelLabels.Visible(true).Text("Quater 3").Start(5.5).End(8.5).Add();
        multiLevelLabels.Visible(true).Text("Quater 4").Start(8.5).End(11.5).Add();
        multiLevelLabels.Visible(true).Text("Half Yearly 1").Start(-0.5).End(5.5).Level(1).Add();
        multiLevelLabels.Visible(true).Text("Half Yearly 2").Start(5.5).End(11.5).Level(1).Add();
        multiLevelLabels.Visible(true).Text("2015").Start(-0.5).End(11.5).Level(2).Add();
    })
    )
    .PrimaryYAxis(pry =>
    pry.Title(title=>title.Text("Temperature in Celsius")).Range(range=>range.Min(0).Max(40).Interval(5))
    .MultiLevelLabels(multiLevelLabels=> {
        multiLevelLabels.Visible(true).Text("Low").Start(0).End(10).Add();
        multiLevelLabels.Visible(true).Text("Medium").Start(10).End(25).Add();
        multiLevelLabels.Visible(true).Text("High").Start(25).End(40).Add();
    })
    )
    .CommonSeriesOptions(common=>common.Type(SeriesType.Spline).EnableAnimation(true).Tooltip(tooltip=>tooltip.Visible(true)).Marker(marker=>marker.Visible(true).Size(size=>size.Width(8).Height(8))))
    .Series(sr =>
    {
        sr.Points(pt =>
        {
            pt.X("Jan").Y(1).Add();
            pt.X("Feb").Y(5).Add();
            pt.X("Mar").Y(2).Add();
            pt.X("Apr").Y(8).Add();
            pt.X("May").Y(30).Add();
            pt.X("Jun").Y(18).Add();
            pt.X("Jul").Y(32).Add();
            pt.X("Aug").Y(20).Add();
            pt.X("Sep").Y(16).Add();
            pt.X("Oct").Y(10).Add();
            pt.X("Nov").Y(4).Add();
            pt.X("Dec").Y(5).Add();
        }).Name("London").Fill("#e8be33").Add();

    })
     .Title(title=>title.Text("Temperature of London in 2015"))
     .Load("loadTheme")
     .Legend(legend=>legend.Visible(false))
    )
    </div>
    
}

@section PropertiesSection{
<div id="sampleProperties">
    <div class="prop-grid">
        <div class="row">
            <div class="col-md-3">
                Text Alignment
            </div>
            <div class="col-md-3">
                <select id="textalign" style="width:100px">
                    <option value="center">Center</option>
                    <option value="near">Near</option>
                    <option value="far">Far</option>
                </select>
            </div>
            <div class="col-md-3">
                Border Style
            </div>
            <div class="col-md-3">
                <select id="borderstyle" style="width:100px">
                    <option value="rectangle">Rectangle</option>
                    <option value="none">Without border</option>
                    <option value="withouttopandbottomborder">Without top/bottom border</option>
                    <option value="brace">Brace</option>
                    <option value="curlybrace">Curly brace</option>
                </select>
            </div>
            <div class="col-md-3">
                Border Color
            </div>
            <div class="col-md-3">
                <input type="text" id="colorPick" />
            </div>
        </div>     
    </div>
</div>    
}

@section ScriptSection
{
    <script>
        $("#colorPick").ejColorPicker({
            value: '#278787',
            select: "onChange"
        });
        $("#sampleProperties").ejPropertiesPanel();
        $("#borderstyle, #textalign").change(function () {
            var chart = $("#container").ejChart("instance"),
		    borderstyle = $("#borderstyle")[0].value,
			textAlign = $("#textalign")[0].value;
            for (var i = 0; i < 7; i++) {
                chart.model._axes[0].multiLevelLabels[i].border.type = borderstyle;
                chart.model._axes[0].multiLevelLabels[i].textAlignment = textAlign;
            }
            for (var i = 0; i < 3; i++) {
                chart.model._axes[1].multiLevelLabels[i].border.type = borderstyle;
                chart.model._axes[1].multiLevelLabels[i].textAlignment = textAlign;
            }
            chart.redraw();
        });

        function onChange(args) {
            var color = args.value;
            var chart = $("#container").ejChart("instance");
            for (var i = 0; i < 7; i++)
                chart.model._axes[0].multiLevelLabels[i].border.color = color;
            for (var i = 0; i < 3; i++)
                chart.model._axes[1].multiLevelLabels[i].border.color = color;
            chart.redraw();
        }
    </script>
}

