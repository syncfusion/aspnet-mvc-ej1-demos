@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">Chart-Indexed Category Axis-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
    <meta name="description" content="This sample demonstrates how to render indexed axis using Syncfusion ASP.NET MVC Chart Control">
}

@section ControlsSection{
    <div>
        @(Html.EJ().Chart("container")
        .PrimaryXAxis(pr => pr.Title(tl => tl.Text("Days")).IsIndexed(true).LabelIntersectAction(LabelIntersectAction.Trim).LabelPlacement("betweenticks").CrosshairLabel(crl => crl.Visible(true)))
        .PrimaryYAxis(pr => pr.Title(tl => tl.Text("Sales")).LabelFormat("{value}$"))
        .CommonSeriesOptions(cr => cr.Type(SeriesType.Column))
        .Crosshair(ch => ch.Visible(true).Type(CrosshairType.Trackball))
        .Series(sr =>
            {
                sr.Points(pt =>
                    {
                        pt.X("Monday").Y(50).Add();
                        pt.X("Tuesday").Y(40).Add();
                        pt.X("Wednesday").Y(70).Add();
                        pt.X("Thursday").Y(60).Add();
                        pt.X("Friday").Y(50).Add();
                        pt.X("Monday").Y(40).Add();
                        pt.X("Tuesday").Y(50).Add();
                        pt.X("Wednesday").Y(30).Add();
                        pt.X("Thursday").Y(40).Add();
                        pt.X("Friday").Y(70).Add();
                        pt.X("Monday").Y(60).Add();
                        pt.X("Tuesday").Y(30).Add();
                        pt.X("Wednesday").Y(50).Add();
                        pt.X("Thursday").Y(50).Add();
                        pt.X("Friday").Y(40).Add();
                        pt.X("Monday").Y(30).Add();
                        pt.X("Tuesday").Y(55).Add();
                        pt.X("Wednesday").Y(60).Add();
                        pt.X("Thursday").Y(30).Add();
                        pt.X("Friday").Y(60).Add();
                    }).Name("Product X").Opacity(0.8).Add();
                sr.Points(pt =>
                {
                    pt.X("Monday").Y(60).Add();
                    pt.X("Tuesday").Y(30).Add();
                    pt.X("Wednesday").Y(40).Add();
                    pt.X("Thursday").Y(80).Add();
                    pt.X("Friday").Y(70).Add();
                    pt.X("Monday").Y(50).Add();
                    pt.X("Tuesday").Y(40).Add();
                    pt.X("Wednesday").Y(50).Add();
                    pt.X("Thursday").Y(50).Add();
                    pt.X("Friday").Y(50).Add();
                    pt.X("Monday").Y(70).Add();
                    pt.X("Tuesday").Y(50).Add();
                    pt.X("Wednesday").Y(60).Add();
                    pt.X("Thursday").Y(30).Add();
                    pt.X("Friday").Y(60).Add();
                    pt.X("Monday").Y(40).Add();
                    pt.X("Tuesday").Y(65).Add();
                    pt.X("Wednesday").Y(70).Add();
                    pt.X("Thursday").Y(40).Add();
                    pt.X("Friday").Y(40).Add();
                }).Name("Product Y").Add();
                sr.Points(pt =>
                {
                    pt.X("Monday").Y(40).Add();
                    pt.X("Tuesday").Y(60).Add();
                    pt.X("Wednesday").Y(40).Add();
                    pt.X("Thursday").Y(30).Add();
                    pt.X("Friday").Y(80).Add();
                    pt.X("Monday").Y(30).Add();
                    pt.X("Tuesday").Y(30).Add();
                    pt.X("Wednesday").Y(60).Add();
                    pt.X("Thursday").Y(40).Add();
                    pt.X("Friday").Y(40).Add();
                    pt.X("Monday").Y(50).Add();
                    pt.X("Tuesday").Y(20).Add();
                    pt.X("Wednesday").Y(30).Add();
                    pt.X("Thursday").Y(70).Add();
                    pt.X("Friday").Y(60).Add();
                    pt.X("Monday").Y(20).Add();
                    pt.X("Tuesday").Y(35).Add();
                    pt.X("Wednesday").Y(50).Add();
                    pt.X("Thursday").Y(20).Add();
                    pt.X("Friday").Y(30).Add();
                }).Name("Product Z").Add();
            })
        .Load("loadTheme")
        .IsResponsive(true)
        .Title(t => t.Text("Weekly Products Sales Comparison"))
        .Legend(lg => { lg.Visible(true).Position(LegendPosition.Bottom); })
        )

    </div>
}
@section PropertiesSection{
    <div id="sampleProperties">
        <div class=" prop-grid">
            <div class="row">
                <div class="col-md-3 aligntop">
                    Indexed : <input type="checkbox" checked onchange="isindex(this)" />
                </div>
            </div>

        </div>
    </div>
}
@section ScriptSection
{
    <script>
        function isindex(tis) {
            var chart = $("#container").ejChart("instance");
            chart.model.primaryXAxis.isIndexed = tis.checked;
            $("#container").ejChart("redraw");
        }
        $("#controlarea").css("visibility", "visible");
        $("#sampleProperties").ejPropertiesPanel();
    </script>
}

