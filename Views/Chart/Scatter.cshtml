@using Syncfusion.JavaScript.DataVisualization

@section SampleHeading{<span class="sampleName">Chart-Scatter-ASP.NET MVC-SYNCFUSION</span>}

@section MetaTags{
    <meta name="description" content="This sample demonstrates how to render scatter series using Syncfusion ASP.NET MVC Chart Control">
}

@section ControlsSection{
    <div>
  @(Html.EJ().Chart("container")
        .PrimaryXAxis(pr => pr.AxisLine(ax => ax.Visible(false).Width(2).Color("blue")).Title(tl => tl.Text("Length")).Range(ra=>ra.Min(0).Max(105).Interval(5)))
        .PrimaryYAxis(pr => pr.Title(tl => tl.Text("Weight")).RangePadding(ChartRangePadding.Additional))
        .CommonSeriesOptions(cr => cr.Type(SeriesType.Scatter).EnableAnimation(true))
        .Series(sr =>
            {
                sr.Name("Weight").Marker(mr => mr.Size(sz => sz.Height(10).Width(10)).Border(st => st.Width(0).Color("#E94649")).Opacity(0.5)).Add();
                sr.Name("height").Marker(mr => mr.Size(sz => sz.Height(10).Width(10)).Border(st => st.Width(0).Color("#F6B53F")).Opacity(0.5)).Add();
            })
    .Load("onchartload")
    .IsResponsive(true)
    .Title(title => title.Text("Length Vs Weight"))
    .Legend(lg => { lg.Visible(false); })

        )
    </div>
}

<script type="text/javascript">
    function onchartload(sender) {
        loadTheme(sender);
        var data = GetData();
        sender.model.series[0].dataSource = data.Series1;
        sender.model.series[0].xName = "XValue";
        sender.model.series[0].yName = "YValue";
        sender.model.series[1].dataSource = data.Series2;
        sender.model.series[1].xName = "XValue";
        sender.model.series[1].yName = "YValue";
    }
    function GetData() {
        var series1 = [];
        var series2 = [];
        var value = 100;
        var value1 = 100;
        for (var i = 1; i < 100; i++) {
            if (Math.random() > .5) {
                value += Math.random();
            } else {
                value -= Math.random();
            }
            var point = { XValue: i, YValue: value };
            series1.push(point);
        }
        for (var j = 1; j < 100; j = j + 2) {
            if (Math.random() > .5) {
                value1 += Math.random();
            } else {
                value1 -= Math.random();
            }
            var point1 = { XValue: j, YValue: value1 };
            series2.push(point1);
        }
        var data = { Series1: series1, Series2: series2 };
        return data;
    }
    $("#controlarea").css("visibility", "visible");
</script>



