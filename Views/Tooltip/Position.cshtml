@section MetaTags{
   <meta name="description" content="This example demonstrates positioning of a ASP.NET MVC Tooltip." >
}

@section SampleHeading{
    <span class="sampleName">Tooltip-Position-ASP.NET MVC-SYNCFUSION</span>}
@section ControlsSection{
<div class="content-container-fluid">
    <div class="row">
        <div class="cols-sample-area">
            <div id="treeView" style="width: 250px">
                @Html.EJ().TreeView("tree").Items(items =>
                {
                    items.Add().Text("Fiction Book Lists").Expanded(true).Children(child =>
                    {
                        child.Add().Text("To Kill a Mockingbird");
                        child.Add().Text("Pride and Prejudice");
                        child.Add().Text("Harry Potter");
                        child.Add().Text("The Hobbit");
                    });
                    items.Add().Text("Mystery Book Lists").Expanded(true).Children(child =>
                    {
                        child.Add().Text("And Then There Where None");
                        child.Add().Text("Angles & Demons");
                        child.Add().Text("In Cold Blood");
                        child.Add().Text("The Name of the Rose");
                    });
                }).ClientSideEvents(e => e.Create("onCreate"))



            </div>
        </div>
    </div>
</div>


@Html.EJ().Tooltip("treeView").Target(".CanSelect").Containment(".cols-sample-area").Height("65px").Width("230px").Position(pos => pos.Target(target => target.Horizontal("right").Vertical("center")).Stem(stem => stem.Horizontal("left").Vertical("center"))).ClientSideEvents(events => events.Create("onCreate").BeforeOpen("onOpen"))

}

@section PropertiesSection{
           <div id="sampleProperties">
            <div class="prop-grid">
                <div class="row">
                    <div class="col-md-6"> Associate </div>
                    <div class="col-md-6">
                       @Html.EJ().DropDownList("associate").TargetID("list1").Width("110px").SelectedIndex(0).ClientSideEvents(e => e.Change("associateChange"))
                        <div id="list1">
                        <ul >
                            <li value="target">Target</li>
                            <li value="window">Window</li>
                            <li value="mousefollow">Mouse Follow</li>
                            <li value="mouseenter">Mouse Enter</li>
                            <li value="axis">Axis</li>
                        </ul>
                      </div>
                    </div>
                </div>

                <div class="row targetValue">
                    <div class="col-md-6"> Target Position</div>
                    <div class="col-md-6">
                        @Html.EJ().DropDownList("targetHorizontal").TargetID("list2").Width("110px").SelectedIndex(0).ClientSideEvents(e => e.Change("targetHorizontalChange"))
                        <div id="list2">
                        <ul >
                            <li value="right-center">Right Center</li>
                            <li value="right-top">Right Top</li>
                            <li value="right-bottom">Right Bottom</li>
                            <li value="left-center">Left Center</li>
                            <li value="left-top">Left Top</li>
                            <li value="left-bottom">Left Bottom</li>
                            <li value="center-center">Center Center</li>
                            <li value="center-top">Center Top</li>
                            <li value="center-bottom">Center Bottom</li>
                        </ul>
                            </div>
                    </div>
                </div>

                <div class="row stemValue">
                    <div class="col-md-6"> Tooltip Position</div>
                    <div class="col-md-6">
                        @Html.EJ().DropDownList("stemHorizontal").TargetID("list3").Width("110px").SelectedIndex(0).ClientSideEvents(e => e.Change("stemHorizontalChange"))
                        <div id="list3">
                        <ul >
                            <li value="left-center">Left Center</li>
                            <li value="left-top">Left Top</li>
                            <li value="left-bottom">Left Bottom</li>
                            <li value="right-center">Right Center</li>
                            <li value="right-top">Right Top</li>
                            <li value="right-bottom">Right Bottom</li>
                            <li value="center-center">Center Center</li>
                            <li value="center-top">Center Top</li>
                            <li value="center-bottom">Center Bottom</li>
                        </ul>
                    </div>
                </div>
                <div class="row" id="axisValue">
                    <div class="col-md-6"> x-Axis </div>
                    <div class="col-md-6">
                        @Html.EJ().NumericTextbox("xAxis").DecimalPlaces(0).Value(400).Width("100%").ClientSideEvents(e => e.Change("change"))
                       
                    </div>
                    <div class="col-md-6"> y-Axis </div>
                    <div class="col-md-6">
                        @Html.EJ().NumericTextbox("yAxis").DecimalPlaces(0).Value(110).Width("100%").ClientSideEvents(e => e.Change("change"))
                       
                    </div>
                </div>
            </div>
        </div>
               </div>
}
@section ScriptSection{

<script type="text/javascript">
    var target, associate, tHorizontal, tVertical, sHorizontal, sVertical;
    var tipProperty = {
        width: "230px",
        height: "65px",
        target: ".CanSelect",
        position: {
            stem: { horizontal: "left", vertical: "center" },
            target: { horizontal: "right", vertical: "center" },
        },
        beforeOpen: "onOpen"
    };
    $("#sampleProperties").ejPropertiesPanel();
    function onCreate() {
        target = $("#treeView").data("ejTooltip");
    }
    $(function () {

        associate = $('#associate').ejDropDownList("getSelectedValue");

    });

    function onOpen(args) {
        contentFormation(args);
    }
    function contentFormation(args) {
        var currentElement = $(args.event.currentTarget), content = $.trim($(currentElement).text());

        var emp = [
            { book: "To Kill a Mockingbird", category: "Fiction" },
            { book: "Pride and Prejudice", category: "Fiction" },
            { book: "Harry Potter", category: "Fiction" },
            { book: "The Hobbit", category: "Fiction" },
            { book: "And Then There Where None", category: "Mystery" },
            { book: "Angles & Demons", category: "Mystery" },
            { book: "In Cold Blood", category: "Mystery" },
            { book: "The Name of the Rose", category: "Mystery" },
        ];
        for (i = 0; i < 8; i++) {
            if (content == emp[i].book)
                var template = '<div class="main"> <img class="logo" src="../Content/images/tooltip/book.png" /> <div class="des"> <div class="artists"> Category:' + emp[i].category + '</div><div class="song">' + emp[i].book + '</div></div> </div>';
            else if (content == "Fiction Book Lists")
                var template = '<div class="main"> <img class="logo" src="../Content/images/tooltip/book.png" /> <div class="des"> <div class="artists"> Category&nbsp;:&nbsp; Fiction </div><div class="song"> Please choose your books</div></div> </div>';
            else if (content == "Mystery Book Lists")
                var template = '<div class="main"> <img class="logo" src="../Content/images/tooltip/book.png" /> <div class="des"> <div class="artists"> Category&nbsp;:&nbsp; Mystery </div><div class="song"> Please choose your books</div></div> </div>';
        }
        target.setModel({ content: template });
    }
    function associateChange(args) {
        associate = args.value;
        if (associate == "window") {
            target.destroy();
            tipProperty.containment = "body";
            target = $("#treeView").ejTooltip(tipProperty).data("ejTooltip");
            $('#targetHorizontal').ejDropDownList({ value: "right-bottom" });
        }
        else {
            tipProperty.containment = ".cols-sample-area";
            target = $("#treeView").ejTooltip(tipProperty).data("ejTooltip");
        }
        change();
    }
    function targetHorizontalChange(args) {
        change();
    }
    function targetVerticalChange(args) {
        change();
    }
    function stemHorizontalChange(args) {
        change();
    }
    function stemVerticalChange(args) {
        change();
    }
    function change() {
        tHorizontal = $('#targetHorizontal').ejDropDownList("getSelectedValue");
        tVertical = tHorizontal.substr(tHorizontal.indexOf("-") + 1);
        tHorizontal = tHorizontal.substr(0, tHorizontal.indexOf("-"));
        sHorizontal = $('#stemHorizontal').ejDropDownList("getSelectedValue");
        sVertical = sHorizontal.substr(sHorizontal.indexOf("-") + 1);
        sHorizontal = sHorizontal.substr(0, sHorizontal.indexOf("-"));
        xNum = $('#xAxis').data("ejNumericTextbox");
        yNum = $('#yAxis').data("ejNumericTextbox");
        var xAxis = parseInt($("#xAxis").ejNumericTextbox("getValue"));
        var yAxis = parseInt($("#yAxis").ejNumericTextbox("getValue"));
        if (associate == "axis") {
            $("#axisValue").show();
            $(".targetValue").hide();
            $(".stemValue").hide();
            xAxis = xAxis > 0 ? xAxis : 100;
            yAxis = yAxis > 0 ? yAxis : 100;
        }
        else if (associate == "window") {

            $(".stemValue").hide();
            $("#axisValue").hide();
            $(".targetValue").show();
        }
        else if (associate == "mouseenter" || associate == "mousefollow") {
            $(".targetValue").hide();
            $("#axisValue").hide();
            $(".stemValue").show();
        }
        else {
            $("#axisValue").hide();
            $(".targetValue").show();
            $(".stemValue").show();
        }
        tHorizontal = associate == "axis" ? xAxis : tHorizontal;
        tVertical = associate == "axis" ? yAxis : tVertical;
        var position = {
            stem: {
                horizontal: sHorizontal,
                vertical: sVertical
            },
            target: {
                horizontal: tHorizontal,
                vertical: tVertical
            },
        };


        target.option("position", position);
        target.option("associate", associate);
    }

</script>
}
@section StyleSection{
<style>
    .e-tooltip-wrap {
        background-color: #ffcccc;
    }

        .e-tooltip-wrap .e-arrowTipInner {
            border-color: #ffcccc transparent;
        }

    #axisValue {
        display: none;
    }

    .logo {
        float: left;
        width: 45px;
        height: 50px;
        border: 2px dotted green;
        border-radius: 12px;
        margin-right: 10px;
        margin-bottom: 5px;
    }

    .des {
        color: grey;
    }

    .artists {
        margin-bottom: 5px;
    }
</style>
}

