@section MetaTags{
   <meta name="description" content="This example demonstrates the various methods like show, hide, enable and disable in a ASP.NET MVC Tooltip." >
}

@section SampleHeading{
    <span class="sampleName">Tooltip-API's-ASP.NET MVC-SYNCFUSION</span>}

@section ControlsSection{
    
    <div class="frame">
        <div class="ctrl">
            <table>
                <tr>
                    <td>
                        <div id="backBtn">
                            @Html.EJ().Button("button11").Text("Back").Width("100%").Type(ButtonType.Button)
                        </div>
                    </td>

                    <td>
                        <input type="text" class="e-textbox" placeholder="Search for...">
                    </td>

                    <td>
                        <div id="goBtn">
                            @Html.EJ().Button("button12").Text("Go").Width("100%").Type(ButtonType.Button)
                        </div>
                    </td>

                    <td>
                        <div id="reloadBtn">
                            @Html.EJ().Button("button13").Width("100%").ContentType(ContentType.ImageOnly).PrefixIcon("e-icon e-uiLight e-reload").Type(ButtonType.Button)

                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>

@Html.EJ().Tooltip("reloadBtn").IsBalloon(false).Content("Reload current page").Position(pos => pos.Target(target => target.Horizontal("center").Vertical("bottom")).Stem(stem => stem.Horizontal("left").Vertical("top"))).ClientSideEvents(events => events.Create("onCreate"))
@Html.EJ().Tooltip("goBtn").Content("search").Position(pos => pos.Target(target => target.Horizontal("center").Vertical("bottom")).Stem(stem => stem.Horizontal("left").Vertical("top")))
@Html.EJ().Tooltip("backBtn").Content("Go back one page").Position(pos => pos.Target(target => target.Horizontal("center").Vertical("bottom")).Stem(stem => stem.Horizontal("left").Vertical("top")))
}
@section PropertiesSection{
    <div id="sampleProperties">
    <div class="prop-grid">
        <div class="row">
            <div class="col-md-6"> Target Element </div>
            <div class="col-md-6">
                @Html.EJ().DropDownList("refresh").TargetID("list").SelectedIndex(2).Width("110px").ClientSideEvents(e => e.Change("onEffectChange"))
                <div id="list">
                <ul >
                    <li value="backBtn">Back Button</li>
                    <li value="goBtn">Go Button</li>
                    <li value="reloadBtn">Reload Button</li>
                </ul>
              </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6"> Disable\Enable </div>
            <div class="col-md-6">
                @Html.EJ().Button("btnEnable").ShowRoundedCorner(true).Width("107px").Text("Disable").Enabled(false).ClientSideEvents(e => e.Click("onEnableDisable"))
            </div>
        </div>
        <div class="row">
            <div class="col-md-6"> Show\Hide </div>
            <div class="col-md-6">
               @Html.EJ().Button("hideButton").ShowRoundedCorner(true).Width("107px").Text("Show").ClientSideEvents(e => e.Click("onShowHide"))
            </div>
        </div>
    </div>
</div>
}
@section ScriptSection{
    <script type="text/javascript">

        var target, value, count = 0;
        
        $(function () {
            $("#sampleProperties").ejPropertiesPanel();
            $("#temp").hide();
        });

        function onCreate() {
            target = $("#reloadBtn").data("ejTooltip");
        }
        function onEffectChange(args) {
            var btnObj = $("#hideButton").data("ejButton");
            target.show($("#" + args.value));
            $('#hideButton').ejButton({ text: "Hide" });
        }
        function onEnableDisable(args) {
            var text;
            var btnObj = $("#hideButton").data("ejButton");
            var DropDownListObj = $("#refresh").data("ejDropDownList");
            if (args.model.text == "Disable") {
                target.disable();
                text = "Enable";
                btnObj.disable();
                DropDownListObj.disable();
            }
            else {
                target.enable();
                text = "Disable";
                btnObj.enable();
                DropDownListObj.enable();
            }

            $('#btnEnable').ejButton({ text: text });

        }
        function onShowHide(args) {
            var text;
            var DropDownListObj = $("#refresh").data("ejDropDownList");
            var value = DropDownListObj.getSelectedValue();
            enableBtn = $("#btnEnable").data("ejButton");
            if (args.model.text == "Hide") {
                target.hide();
                text = "Show";
                enableBtn.disable();
            }
            else {
                target.show($("#" + value));
                text = "Hide";
                enableBtn.enable();
            }
            $('#hideButton').ejButton({ text: text });
        }
</script>
}
@section StyleSection{
    <style>
   .frame {
            width: 100%;
            height:250px;
            box-sizing: border-box;

        }
       
        .ctrl{
            margin-top: 80px;
        }
        table{
            width: 100%;
        }
        input{
			width: 100%;
			height: 100%;
		}
</style>
}

